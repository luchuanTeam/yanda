<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanda.mapper.generated.PayInfoMapper">
  <resultMap id="BasePropertyResultMap" type="com.yanda.entity.generated.PayInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="pay_id" jdbcType="INTEGER" property="payId" />
    <result column="pay_amount" jdbcType="REAL" property="payAmount" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="pay_msg" jdbcType="VARCHAR" property="payMsg" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.yanda.entity.generated.PayInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="pay_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pay_amount" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="pay_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="pay_status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="trade_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_msg" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg
  </sql>
  <select id="selectByExample" parameterType="com.yanda.entity.generated.PayInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_pay_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yanda.entity.generated.PayInfoExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yanda.entity.generated.PayInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_pay_info
    <set>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=REAL},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payMsg != null">
        pay_msg = #{record.payMsg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_pay_info
    set pay_id = #{record.payId,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=REAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_msg = #{record.payMsg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_pay_info
    where pay_id = #{payId,jdbcType=INTEGER}
  </select>
  <insert id="upsert" parameterType="com.yanda.entity.generated.PayInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_pay_info
    (pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg)
    values
    (#{payId,jdbcType=INTEGER}, #{payAmount,jdbcType=REAL}, #{payTime,jdbcType=TIMESTAMP}, 
      #{payStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{tradeNo,jdbcType=VARCHAR}, 
      #{payMsg,jdbcType=VARCHAR})
    on duplicate key update 
    pay_id = #{payId,jdbcType=INTEGER}, 
    pay_amount = #{payAmount,jdbcType=REAL}, 
    pay_time = #{payTime,jdbcType=TIMESTAMP}, 
    pay_status = #{payStatus,jdbcType=INTEGER}, 
    user_id = #{userId,jdbcType=INTEGER}, 
    trade_no = #{tradeNo,jdbcType=VARCHAR}, 
    pay_msg = #{payMsg,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="com.yanda.entity.generated.PayInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_pay_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        pay_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="payMsg != null">
        pay_msg,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=REAL},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payMsg != null">
        #{payMsg,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="payId != null">
        pay_id = #{payId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=REAL},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payMsg != null">
        pay_msg = #{payMsg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>