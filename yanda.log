2018-07-05 17:55:43.726  INFO 9916 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9916 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 17:55:43.732 DEBUG 9916 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 17:55:43.732  INFO 9916 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 17:55:44.153  INFO 9916 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:55:46.154  INFO 9916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 17:55:46.733  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.739  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.740  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 17:55:46.778  WARN 9916 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:55:47.657  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.037  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.076  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.080  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:53.771  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 17:55:53.797  INFO 9916 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 17:55:53.799  INFO 9916 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9886 ms
2018-07-05 17:55:54.460  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:55:54.461  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:55:57.244  INFO 9916 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 17:56:00.329  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:56:00.612  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.614  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.615  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.621  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.623  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.624  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.632  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.634  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.635  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.638  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.643  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.644  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.648  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.649  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.650  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.651  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.656  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.661  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 17:56:00.667  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.668  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.679  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.680  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 17:56:00.687  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 17:56:00.692  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.696  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.697  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.825  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.826  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.964  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:03.033  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 17:56:03.037  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 17:56:03.046  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 17:56:03.226  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 17:56:03.235  INFO 9916 --- [main] com.yanda.Application                    : Started Application in 20.112 seconds (JVM running for 20.768)
2018-07-05 18:30:13.294  INFO 6504 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6504 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:30:13.314 DEBUG 6504 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:30:13.315  INFO 6504 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:30:13.883  INFO 6504 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:15.992  INFO 6504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.628  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:30:16.674  WARN 6504 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:30:17.665  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$897191c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.011  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a4512a0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.048  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.051  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d283c7de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:23.807  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:30:23.834  INFO 6504 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:30:23.837  INFO 6504 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:30:24.081  INFO 6504 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:30:24.082  INFO 6504 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10205 ms
2018-07-05 18:30:24.563  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:30:27.168  INFO 6504 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:30:30.625  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:30.793  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.795  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.796  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.797  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.799  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.802  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.808  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.815  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.816  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.819  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.821  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.825  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.828  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.829  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.830  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.831  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.833  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.836  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.837  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.841  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.842  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.843  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.847  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.848  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:30:30.849  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:30:30.850  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.852  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.857  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.858  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.863  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.867  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.868  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.869  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:30:30.870  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.874  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.877  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.882  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.883  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:31.125  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:33.513  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:30:33.516  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:30:33.527  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:30:33.673  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:30:33.682  INFO 6504 --- [main] com.yanda.Application                    : Started Application in 21.039 seconds (JVM running for 22.4)
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:31:16.971  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2018-07-05 18:35:02.623  INFO 5156 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 5156 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:35:02.628 DEBUG 5156 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:35:02.629  INFO 5156 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:35:03.027  INFO 5156 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:05.056  INFO 5156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:35:05.633  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:35:05.676  WARN 5156 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:35:06.555  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:06.973  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.026  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.029  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:12.695  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:35:12.723  INFO 5156 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:35:12.725  INFO 5156 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9937 ms
2018-07-05 18:35:13.369  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:35:15.532  INFO 5156 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:35:18.259  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:18.402  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.404  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.405  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.408  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.410  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.411  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.415  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.421  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.422  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.423  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.427  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.431  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.434  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.443  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.445  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.448  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:35:18.450  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.451  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.456  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:35:18.461  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.464  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.465  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.467  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.472  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.474  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.483  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.484  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.489  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.490  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.665  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:20.195  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:35:20.198  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:35:20.206  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:35:20.335  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:35:20.344  INFO 5156 --- [main] com.yanda.Application                    : Started Application in 18.31 seconds (JVM running for 19.081)
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:35:35.888  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-07-05 18:35:59.870  INFO 5156 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 18:36:00.531 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 18:36:00.577 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 18:36:00.626 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 18:36:00.703 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 18:36:00.704 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 18:36:00.730 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 18:36:00.761 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 18:36:00.762 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.785 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 18:36:00.786 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 18:36:00.787 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 19:02:57.883  INFO 17860 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17860 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 19:02:57.897 DEBUG 17860 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 19:02:57.898  INFO 17860 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 19:02:58.370  INFO 17860 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:00.562  INFO 17860 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 19:03:01.153  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 19:03:01.196  WARN 17860 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:03:02.171  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a560ff71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.574  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$c04097bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.610  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.612  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ee73358f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:08.395  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 19:03:08.427  INFO 17860 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 19:03:08.429  INFO 17860 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 19:03:08.668  INFO 17860 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 19:03:08.669  INFO 17860 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10306 ms
2018-07-05 19:03:09.141  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:03:11.808  INFO 17860 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 19:03:15.306  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:15.505  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.508  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.510  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.513  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.518  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.519  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.522  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.523  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.528  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.529  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.530  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.531  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.533  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 19:03:15.537  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 19:03:15.541  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.542  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.545  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.546  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.547  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.548  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.549  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.550  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.555  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.558  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.559  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.560  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.561  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.566  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 19:03:15.568  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.570  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.571  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.572  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.581  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.584  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.585  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.587  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.590  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.591  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.592  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.594  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.598  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.838  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:18.217  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 19:03:18.221  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 19:03:18.231  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 19:03:18.390  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 19:03:18.398  INFO 17860 --- [main] com.yanda.Application                    : Started Application in 21.137 seconds (JVM running for 22.141)
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:03:38.868  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 19:06:56.302  INFO 17860 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 19:06:56.995 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 19:06:57.038 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 19:06:57.512 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 19:06:57.604 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 19:06:57.605 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 19:06:57.628 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 19:06:57.633 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 19:06:57.634 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.683 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 19:06:57.686 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 19:06:57.687 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.709 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 19:06:57.710 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:17:16.748  INFO 20528 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20528 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:17:16.752 DEBUG 20528 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:17:16.753  INFO 20528 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:17:17.175  INFO 20528 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:19.497  INFO 20528 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:17:20.109  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:17:20.149  WARN 20528 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:17:21.177  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.573  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.605  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.609  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:27.460  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:17:27.485  INFO 20528 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:17:27.487  INFO 20528 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:17:27.710  INFO 20528 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:17:27.711  INFO 20528 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10543 ms
2018-07-05 23:17:28.112  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:17:30.380  INFO 20528 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:17:33.287  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:33.437  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.438  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.439  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.440  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.441  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.444  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.445  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.448  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.451  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.452  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.454  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.460  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.461  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.463  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.465  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.472  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.473  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.474  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.482  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.486  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:17:33.488  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.490  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.493  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.494  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.495  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.496  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.500  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.504  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:17:33.506  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.507  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.510  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.514  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.517  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.519  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.523  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.524  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.747  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:35.220  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:17:35.224  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:17:35.235  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:17:35.414  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:17:35.422  INFO 20528 --- [main] com.yanda.Application                    : Started Application in 19.094 seconds (JVM running for 19.475)
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:17:51.083  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-05 23:22:52.404  INFO 16620 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16620 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:22:52.408 DEBUG 16620 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:22:52.409  INFO 16620 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:22:52.833  INFO 16620 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:22:54.821  INFO 16620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:22:55.406  WARN 16620 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:22:56.254  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.610  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.644  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.646  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:23:02.341  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:23:02.368  INFO 16620 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:23:02.370  INFO 16620 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9762 ms
2018-07-05 23:23:03.012  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:23:03.014  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:23:03.016  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:23:05.291  INFO 16620 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:23:08.123  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:23:08.258  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.260  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.261  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.265  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:23:08.267  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.268  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.270  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.277  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.278  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.280  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.281  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.282  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.283  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.284  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:23:08.285  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.291  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.293  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.297  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.301  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.302  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.306  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.307  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.322  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.323  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.328  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.329  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.332  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.333  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.336  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.337  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.520  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:10.092  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:23:10.095  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:23:10.103  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:23:10.233  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:23:10.242  INFO 16620 --- [main] com.yanda.Application                    : Started Application in 18.463 seconds (JVM running for 19.155)
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:23:42.537  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-07-05 23:23:57.229  INFO 16620 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:23:57.764 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:23:57.784 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:23:57.820 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:23:57.856 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:23:57.857 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:23:57.884 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:23:57.913 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:23:57.914 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.967 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:23:57.968 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:56:10.108  INFO 22904 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 22904 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:56:10.114 DEBUG 22904 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:56:10.114  INFO 22904 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:56:10.539  INFO 22904 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:12.569  INFO 22904 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.202  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:56:13.241  WARN 22904 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:56:14.210  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b06fc3f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.562  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$cb4f5c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.595  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.598  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f981fa15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:20.531  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:56:20.556  INFO 22904 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:56:20.558  INFO 22904 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:56:20.773  INFO 22904 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:56:20.774  INFO 22904 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10241 ms
2018-07-05 23:56:21.171  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:56:23.310  INFO 22904 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:56:26.282  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:26.428  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.430  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.432  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.434  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:56:26.436  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.437  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.439  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.440  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.441  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.442  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.452  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:56:26.456  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.467  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.470  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.474  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:56:26.476  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.477  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.482  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:56:26.489  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.491  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:56:26.492  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.493  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:56:26.494  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.498  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.499  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.502  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.506  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.507  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.684  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:28.218  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:56:28.221  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:56:28.229  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:56:28.348  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:56:28.355  INFO 22904 --- [main] com.yanda.Application                    : Started Application in 18.827 seconds (JVM running for 19.474)
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:57:19.415  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 23:57:28.973  INFO 22904 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:57:30.060 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:57:30.101 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:57:30.231 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:57:30.306 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:57:30.308 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:57:30.331 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:57:30.335 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:57:30.336 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.386 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.408 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:57:30.409 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:58:14.382 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-05 23:58:14.386 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String), 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-05 23:58:14.409 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:57:09.711  INFO 4116 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 4116 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 11:57:09.741 DEBUG 4116 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 11:57:09.742  INFO 4116 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 11:57:10.500  INFO 4116 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:12.551  INFO 4116 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.942  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.944  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 11:57:12.962  WARN 4116 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 11:57:13.545  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a64acb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.807  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$654444fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.831  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.852  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9376e2ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:15.176  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 11:57:15.200  INFO 4116 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 11:57:15.201  INFO 4116 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 11:57:15.397  INFO 4116 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 11:57:15.398  INFO 4116 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4910 ms
2018-07-07 11:57:15.620  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 11:57:15.631  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 11:57:17.174  INFO 4116 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 11:57:18.895  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:18.976  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.977  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.980  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.981  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.983  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.987  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.991  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 11:57:18.992  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.996  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.998  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.009  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 11:57:19.010  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 11:57:19.012  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.013  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.025  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.029  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.030  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.031  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.072  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.073  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.127  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:20.373  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 11:57:20.377  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 11:57:20.382  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 11:57:20.576  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 11:57:20.580  INFO 4116 --- [main] com.yanda.Application                    : Started Application in 11.749 seconds (JVM running for 13.501)
2018-07-07 11:57:37.297  INFO 4116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 11:57:37.298  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 11:57:37.349  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 11:59:38.438  INFO 4116 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 11:59:38.986 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 11:59:39.022 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.062 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 11:59:39.083 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 11:59:39.087 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 11:59:39.116 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:59:39.124 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 11:59:39.125 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.212 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 11:59:39.213 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 11:59:39.336 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,trade_no,pay_msg ) VALUES( ?,?,?,?,? ) 
2018-07-07 11:59:39.337 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 15.0(Float), 2018-07-07 11:59:39.335(Timestamp), 1(Integer), N0LXitdsLSbk70Q5Z920180707115920(String), 购买会员1个月(String)
2018-07-07 11:59:39.468  INFO 4116 --- [http-nio-8080-exec-5] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-07 11:59:39.767  INFO 4116 --- [http-nio-8080-exec-5] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-07 12:00:00.000  INFO 4116 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-07 12:00:00]
2018-07-07 12:03:46.445  INFO 9484 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 9484 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:03:46.448 DEBUG 9484 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:03:46.449  INFO 9484 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:03:46.705  INFO 9484 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:49.277  INFO 9484 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:03:49.670  WARN 9484 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:03:50.414  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98a71330] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.733  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b386ab7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.757  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.760  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e1b9494e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:51.480  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:03:51.493  INFO 9484 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:03:51.495  INFO 9484 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:03:51.601  INFO 9484 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:03:51.602  INFO 9484 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4899 ms
2018-07-07 12:03:51.834  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:03:53.231  INFO 9484 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:03:55.163  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:55.253  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:03:55.270  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.282  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.285  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.290  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.292  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.294  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.295  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.298  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.304  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.308  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.310  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:03:55.311  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.462  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:56.848  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:03:56.853  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:03:56.862  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:03:57.005  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:03:57.009  INFO 9484 --- [main] com.yanda.Application                    : Started Application in 10.862 seconds (JVM running for 11.356)
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:04:15.665  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-07 12:04:33.987  INFO 9484 --- [http-nio-8080-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:04:34.539 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:04:34.583 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.621 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:04:34.629 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:04:34.632 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:04:34.659 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.722 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:04:34.869 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:04:34.870 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 45.0(Float), 2018-07-07 12:04:34.867(Timestamp), 1(Integer), 10(Integer), UckLrzszYXXxOWGG6020180707120415(String), 购买会员3个月(String)
2018-07-07 12:04:34.901 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:08:06.495 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:08:06.496 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:08:06.520 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:08:06.522 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:08:06.523 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:08:06.549 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:23.557 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:23.558 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:23.585 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:23.614 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:47.684 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:47.716 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:15:40.772 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:15:40.773 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:15:40.798 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:15:40.825 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:17:30.877  INFO 30356 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 30356 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:17:30.879 DEBUG 30356 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:17:30.879  INFO 30356 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:17:31.139  INFO 30356 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:33.627  INFO 30356 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:17:33.925  WARN 30356 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:17:34.454  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3e9552f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.701  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$eec8ed79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.719  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.722  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1cfb8b4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:35.745  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:17:35.757  INFO 30356 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:17:35.759  INFO 30356 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:17:35.870  INFO 30356 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:17:35.879  INFO 30356 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4742 ms
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:17:37.473  INFO 30356 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:17:38.904  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:38.977  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:38.978  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.979  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.983  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.985  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.990  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.001  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.011  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.012  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.013  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.015  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:17:39.017  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.019  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.026  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.027  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.032  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.033  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.037  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.038  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.040  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.042  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.043  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.139  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.924  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:17:39.927  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:17:39.932  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:17:39.997  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:17:40.002  INFO 30356 --- [main] com.yanda.Application                    : Started Application in 9.438 seconds (JVM running for 9.89)
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:18:07.003  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 12:19:39.866  INFO 30356 --- [http-nio-8080-exec-10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:19:40.379 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:19:40.426 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.463 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:19:40.471 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:19:40.473 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:19:40.506 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:19:40.514 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:19:40.515 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:19:40.569 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.591 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:19:40.592 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:19:40.744 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:19:40.745 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 178.0(Float), 2018-07-07 12:19:40.743(Timestamp), 1(Integer), 10(Integer), 0KQbZ2SERxJV1PMeXa20180707121922(String), 购买会员12个月(String)
2018-07-07 12:19:40.773 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:19:48.569 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:19:48.570 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:19:48.592 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:19:48.624 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:20:48.945 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:20:48.946 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:20:48.970 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:20:48.995 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:24:41.643 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:24:41.644 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:24:41.671 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:24:41.702 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 14:14:44.633  INFO 4420 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4420 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 14:14:44.639 DEBUG 4420 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 14:14:44.639  INFO 4420 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 14:14:45.431  INFO 4420 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 14:14:45 CST 2018]; root of context hierarchy
2018-07-07 14:14:49.008  INFO 4420 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 14:14:50.225  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.226  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.226  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.227  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.228  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.228  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.231  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.231  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.232  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.232  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.233  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.234  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.235  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.236  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.236  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.237  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 14:14:50.286  WARN 4420 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 14:14:51.401  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee4cc058] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.700  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$92c58a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.745  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.749  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$375ef676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:57.452  INFO 4420 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 14:14:57.475  INFO 4420 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 14:14:57.477  INFO 4420 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 14:14:57.706  INFO 4420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 14:14:57.707  INFO 4420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12286 ms
2018-07-07 14:14:58.141  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 14:14:58.143  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 14:14:58.144  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 14:14:58.144  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 14:14:58.145  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 14:14:58.145  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 14:15:00.929  INFO 4420 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 14:15:04.052  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 14:14:45 CST 2018]; root of context hierarchy
2018-07-07 14:15:04.190  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.192  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 14:15:04.193  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.193  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:04.194  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 14:15:04.197  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 14:15:04.197  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 14:15:04.198  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 14:15:04.199  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:04.200  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.204  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.205  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.205  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.206  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.334  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 14:15:04.334  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 14:15:04.335  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.335  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.336  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.337  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:04.338  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.348  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 14:15:04.349  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 14:15:04.350  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.357  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.358  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.850  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 14:15:04.851  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.851  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.852  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.852  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.853  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.855  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.859  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.859  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.861  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.861  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 14:15:05.311  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.312  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.312  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.313  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 14:15:05.314  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.317  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.317  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 14:15:05.318  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 14:15:05.319  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.320  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.321  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.321  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.773  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.775  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 14:15:05.775  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 14:15:05.776  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.779  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.779  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 14:15:05.782  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.782  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.783  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.237  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 14:15:06.237  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.243  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.243  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:06.323  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:06.323  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:06.412  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:08.064  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 14:15:08.068  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 14:15:08.078  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 14:15:08.231  INFO 4420 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 14:15:08.239  INFO 4420 --- [main] com.yanda.Application                    : Started Application in 24.695 seconds (JVM running for 25.93)
2018-07-07 14:15:53.120  INFO 4420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 14:15:53.120  INFO 4420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 14:15:53.191  INFO 4420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2018-07-07 14:18:17.260  INFO 4420 --- [http-nio-8080-exec-6] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 14:18:17.969 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-07 14:18:18.010 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-07 14:18:18.061 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-07 14:18:18.126 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 14:18:18.127 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-07 14:18:18.154 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 14:18:18.158 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:18:18.159 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:18:18.188 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:18:18.189 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:18:18.213 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:18:18.214 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:18:18.215 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:18:18.239 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:18:18.239 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:18:35.703 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 14:18:35.704 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 14:18:35.733 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:19:52.426 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 14:19:52.426 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 14:19:52.453 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 14:19:52.461 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 14:19:52.462 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 26(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:19:52.454(Timestamp), 2020-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 26(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:19:52.454(Timestamp), 2020-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 14:19:52.493 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 14:19:52.493 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:19:52.494 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:19:52.518 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:19:52.518 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:19:52.546 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:19:52.547 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:19:52.547 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:19:52.571 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:19:52.571 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:19:52.674 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 14:19:52.676 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 15.0(Float), 2018-07-07 14:19:52.672(Timestamp), 1(Integer), 38(Integer), We5M68cv4dKCFVv7XN20180707141856(String), 购买会员1个月(String)
2018-07-07 14:19:52.702 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 14:20:28.796 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 14:20:28.797 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 14:20:28.821 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:20:28.823 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 14:20:28.823 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 14:20:28.848 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 14:25:54.986  INFO 4420 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:26:14.471 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:26:14.472 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:26:14.496 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:26:14.497 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-07 14:26:14.498 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-07 14:26:14.524 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:26:58.441  INFO 4420 --- [http-nio-8080-exec-3] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:26:58.445 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:26:58.446 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:26:58.470 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:26:58.471 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:26:58.472 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 14:26:58.499 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:26:59.658 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:26:59.660 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 974(Long)
2018-07-07 14:26:59.688 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:26:59.882  INFO 4420 --- [http-nio-8080-exec-6] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 14:26:59.883 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 14:26:59.884 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1417(Long)
2018-07-07 14:26:59.908 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 14:26:59.909 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : ====> Parameters: 3946(Long)
2018-07-07 14:26:59.932 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 14:26:59.933 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 14:27:54.687 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 14:27:54.687 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 14:27:54.710 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 14:27:54.711 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 14:27:54.712 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 38(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:27:54.71(Timestamp), 2021-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 38(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:27:54.71(Timestamp), 2021-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 14:27:54.740 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 14:27:54.741 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:27:54.741 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:27:54.765 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:27:54.765 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:27:54.787 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:27:54.788 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:27:54.788 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:27:54.810 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:27:54.810 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:27:54.906 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 14:27:54.907 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 178.0(Float), 2018-07-07 14:27:54.904(Timestamp), 1(Integer), 38(Integer), f36uOVwDjtvtvx48Ti20180707142734(String), 购买会员12个月(String)
2018-07-07 14:27:54.931 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 14:28:00.748 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:28:00.749 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1417(Long), 38(Long)
2018-07-07 14:28:00.772 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:28:00.775 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:28:00.778 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1417(Long), 2018-07-07 14:28:00.608(Timestamp), 11000(Integer)
2018-07-07 14:28:00.802 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:38:40.046  INFO 4420 --- [http-nio-8080-exec-7] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:38:40.330 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:38:40.330 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1(Long), 38(Long)
2018-07-07 14:38:40.360 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:38:40.361 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:38:40.361 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:38:40.385 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:38:40.385 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:38:40.386 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 14:38:40.412 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:38:40.412 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:38:40.413 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1(Long), 2018-07-07 14:38:39.921(Timestamp), 0(Integer)
2018-07-07 14:38:40.437 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:38:44.541 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:38:44.542 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 975(Long)
2018-07-07 14:38:44.567 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:38:44.730  INFO 4420 --- [http-nio-8080-exec-1] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 14:38:44.730 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 14:38:44.731 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1418(Long)
2018-07-07 14:38:44.754 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 14:38:44.755 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====> Parameters: 3949(Long)
2018-07-07 14:38:44.778 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 14:38:44.778 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 14:38:50.132 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:38:50.132 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 975(Long)
2018-07-07 14:38:50.161 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:39:50.452  INFO 4420 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:39:50.474 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:39:50.475 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1418(Long), 38(Long)
2018-07-07 14:39:50.476 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:39:50.476 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:39:50.496 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:39:50.497 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:39:50.498 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:39:50.499 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1418(Long), 2018-07-07 14:39:50.333(Timestamp), 1000(Integer)
2018-07-07 14:39:50.500 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:39:50.500 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 8(Integer), 4(Integer)
2018-07-07 14:39:50.521 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:39:50.525 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:44:41.917  INFO 4420 --- [http-nio-8080-exec-10] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:45:20.203 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:45:20.204 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:45:20.226 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:45:20.227 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-07 14:45:20.227 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-07 14:45:20.251 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 16:12:32.025  INFO 21192 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 21192 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 16:12:32.047 DEBUG 21192 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 16:12:32.048  INFO 21192 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 16:12:32.673  INFO 21192 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:12:32 CST 2018]; root of context hierarchy
2018-07-07 16:12:34.848  INFO 21192 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 16:12:35.480  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.481  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.483  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.483  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.488  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.488  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 16:12:35.535  WARN 21192 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 16:12:36.612  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7acb728a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.028  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$95ab0ad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.063  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.067  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$c3dda8a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:42.839  INFO 21192 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 16:12:42.867  INFO 21192 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 16:12:42.868  INFO 21192 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 16:12:43.118  INFO 21192 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 16:12:43.119  INFO 21192 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10453 ms
2018-07-07 16:12:43.646  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 16:12:43.647  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 16:12:43.649  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 16:12:43.650  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 16:12:43.651  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 16:12:43.651  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 16:12:46.232  INFO 21192 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 16:12:49.578  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:12:32 CST 2018]; root of context hierarchy
2018-07-07 16:12:49.745  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.747  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.748  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:12:49.749  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.749  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:12:49.754  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:12:49.754  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:12:49.755  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 16:12:49.755  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.756  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.758  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.759  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.760  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.761  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.761  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.762  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.766  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:12:49.767  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:12:49.768  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.768  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.769  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.770  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.771  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.773  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 16:12:49.774  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 16:12:49.775  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.778  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.778  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.779  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:12:49.779  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.780  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.781  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.782  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.782  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.784  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.784  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.785  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.786  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:12:49.789  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.790  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.791  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.792  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.792  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.793  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.793  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.800  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 16:12:49.800  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.801  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.801  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.802  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.803  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.805  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.806  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 16:12:49.806  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 16:12:49.807  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.808  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.809  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.810  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.814  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.814  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:12:49.815  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.816  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.817  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.818  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.818  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.820  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 16:12:49.820  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.823  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.823  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.824  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 16:12:49.825  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.825  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.828  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.828  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.829  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.831  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 16:12:49.832  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.832  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.833  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.833  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.834  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.834  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.835  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.835  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.840  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.840  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.967  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:49.967  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:50.092  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:52.501  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 16:12:52.504  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 16:12:52.512  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 16:12:52.655  INFO 21192 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 16:12:52.665  INFO 21192 --- [main] com.yanda.Application                    : Started Application in 21.309 seconds (JVM running for 22.595)
2018-07-07 16:15:17.132  INFO 21192 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 16:15:17.134  INFO 21192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 16:15:17.225  INFO 21192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2018-07-07 16:16:55.216  INFO 21192 --- [http-nio-8080-exec-4] wxpay java sdk                           : report worker num: 6
2018-07-07 16:16:55.234  INFO 21192 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,B1u0tPRWwxbadwOGnBPoX2PXwHhiWXg9,1530951415,3958,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8AF23884753565E46BC23997114A6E38AFF0B8464BDE417D5290A0AE063293E2
2018-07-07 16:16:55.236  INFO 21192 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,B1u0tPRWwxbadwOGnBPoX2PXwHhiWXg9,1530951415,3958,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8AF23884753565E46BC23997114A6E38AFF0B8464BDE417D5290A0AE063293E2
2018-07-07 16:16:55.237  INFO 21192 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:19:21.997  INFO 13208 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13208 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 16:19:22.006 DEBUG 13208 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 16:19:22.007  INFO 13208 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 16:19:22.469  INFO 13208 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:19:22 CST 2018]; root of context hierarchy
2018-07-07 16:19:24.583  INFO 13208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 16:19:25.187  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.187  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.190  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.193  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.193  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 16:19:25.235  WARN 13208 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 16:19:26.272  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b802c57c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.658  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$d2e25dc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.694  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.697  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$114fb9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:32.460  INFO 13208 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 16:19:32.484  INFO 13208 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 16:19:32.485  INFO 13208 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 16:19:32.726  INFO 13208 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 16:19:32.726  INFO 13208 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10262 ms
2018-07-07 16:19:33.199  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 16:19:33.200  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 16:19:33.202  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 16:19:35.886  INFO 13208 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 16:19:39.518  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:19:22 CST 2018]; root of context hierarchy
2018-07-07 16:19:39.689  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.691  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.692  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:19:39.693  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:19:39.694  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.697  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:19:39.698  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:19:39.699  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 16:19:39.699  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.700  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.704  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.705  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.706  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.706  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.707  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.708  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.713  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:19:39.714  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:19:39.715  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.716  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.716  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.717  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.718  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.720  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.722  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 16:19:39.723  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 16:19:39.727  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.728  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.728  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:19:39.729  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.729  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.730  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.731  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.731  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.733  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.733  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.735  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.736  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:19:39.739  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.740  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.741  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.741  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.742  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.742  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:19:39.743  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.743  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.744  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.745  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.750  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 16:19:39.751  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.752  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.752  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.753  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.754  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.757  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.757  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 16:19:39.758  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 16:19:39.759  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.760  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.761  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.761  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.764  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.765  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:19:39.765  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.767  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.767  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.768  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 16:19:39.768  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.770  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.770  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.772  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.772  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.773  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 16:19:39.773  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.774  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.775  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.776  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.776  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.779  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 16:19:39.780  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.781  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.782  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.782  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.783  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.783  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.784  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.784  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.787  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.788  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.918  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:39.919  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:40.033  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:42.502  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 16:19:42.506  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 16:19:42.518  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 16:19:42.669  INFO 13208 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 16:19:42.680  INFO 13208 --- [main] com.yanda.Application                    : Started Application in 21.303 seconds (JVM running for 22.119)
2018-07-07 16:20:31.994  INFO 13208 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 16:20:31.994  INFO 13208 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 16:20:32.061  INFO 13208 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2018-07-07 16:20:36.353  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-07 16:20:36.361  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,K7pu0mLldmrv3GEhMeDRoHOUOGQoDltl,1530951636,902,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E81D49A2215AD2DFE790F146F2BC09FF3F8FB34F218175D9AFCA614188C1D407
2018-07-07 16:20:36.361  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,K7pu0mLldmrv3GEhMeDRoHOUOGQoDltl,1530951636,902,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E81D49A2215AD2DFE790F146F2BC09FF3F8FB34F218175D9AFCA614188C1D407
2018-07-07 16:20:36.362  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:22:04.072  INFO 13208 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,dNJbijfWiCevEVL1gmycbL5KoytVMbju,1530951724,17711,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9479D00ADC24026FC7860106B50C7883E2A7A6D88E55D631005ACA85D7C38D69
2018-07-07 16:22:04.073  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,dNJbijfWiCevEVL1gmycbL5KoytVMbju,1530951724,17711,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9479D00ADC24026FC7860106B50C7883E2A7A6D88E55D631005ACA85D7C38D69
2018-07-07 16:22:04.073  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:22:53.186  INFO 13208 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,XZdr0vJvuHQ9HRW0JO0pXj4GBBiYoSZC,1530951773,42974,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9E2B7EF69B1909A994ABC4E592B089D7EA852B93B297E0C6B361FED41AAC34BE
2018-07-07 16:22:53.186  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,XZdr0vJvuHQ9HRW0JO0pXj4GBBiYoSZC,1530951773,42974,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9E2B7EF69B1909A994ABC4E592B089D7EA852B93B297E0C6B361FED41AAC34BE
2018-07-07 16:22:53.187  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:23:47.211  INFO 13208 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6Yy2v1wtoKSjukFOSpLODARQGdWDS9fw,1530951827,227,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8EDF39AC51B5DD71921AC734E246C3D3DAA1434F1FF33F086858DF62CB2D9075
2018-07-07 16:23:47.212  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6Yy2v1wtoKSjukFOSpLODARQGdWDS9fw,1530951827,227,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8EDF39AC51B5DD71921AC734E246C3D3DAA1434F1FF33F086858DF62CB2D9075
2018-07-07 16:23:47.213  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:26:50.922  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,NFWRrWHWaqoUyysL1Pd8s70ICNeeieM4,1530952010,325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,131293FC208FD9823CBF339D7EFE3B273F741D01F70FDA965325B1E6628C1848
2018-07-07 16:26:50.923  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,NFWRrWHWaqoUyysL1Pd8s70ICNeeieM4,1530952010,325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,131293FC208FD9823CBF339D7EFE3B273F741D01F70FDA965325B1E6628C1848
2018-07-07 16:26:50.923  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:38:24.945  INFO 13208 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,MUklwNyrXUpMPJRKskJktxJYZ2tn5ap6,1530952704,321,api.mch.weixin.qq.com,true,6000,8000,0,0,0,1717270D12462E4F3C104550D0F14E524DBA852215052ECD6FB04390B2265787
2018-07-07 16:38:24.946  INFO 13208 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,MUklwNyrXUpMPJRKskJktxJYZ2tn5ap6,1530952704,321,api.mch.weixin.qq.com,true,6000,8000,0,0,0,1717270D12462E4F3C104550D0F14E524DBA852215052ECD6FB04390B2265787
2018-07-07 16:38:24.946  INFO 13208 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:44:55.652  INFO 13208 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,SvFu2dEXQGZBrrczRi1JhFe77l1q3Fau,1530953095,351,api.mch.weixin.qq.com,true,6000,8000,0,0,0,BFAFB80AC1C002BE6387834C74B3B98545C2921D9D52D903469E1E41160DD409
2018-07-07 16:44:55.652  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,SvFu2dEXQGZBrrczRi1JhFe77l1q3Fau,1530953095,351,api.mch.weixin.qq.com,true,6000,8000,0,0,0,BFAFB80AC1C002BE6387834C74B3B98545C2921D9D52D903469E1E41160DD409
2018-07-07 16:44:55.652  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:41.802  INFO 13208 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,xW1fXMJrkdZ9Wr5T0H3UTk3q8h6JhKOZ,1530953201,291,api.mch.weixin.qq.com,true,6000,8000,0,0,0,37D8FB27B60E41C409FA71A1CE50D2704BBE6213ACCCA48B583EE4D3C1E77E3E
2018-07-07 16:46:41.803  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,xW1fXMJrkdZ9Wr5T0H3UTk3q8h6JhKOZ,1530953201,291,api.mch.weixin.qq.com,true,6000,8000,0,0,0,37D8FB27B60E41C409FA71A1CE50D2704BBE6213ACCCA48B583EE4D3C1E77E3E
2018-07-07 16:46:41.803  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:45.358  INFO 13208 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,CjqsTuGXtx1CSSq7CjfTTX814URo5v5p,1530953205,275,api.mch.weixin.qq.com,true,6000,8000,0,0,0,7C1B2834836ED78FC9DB5C0E4E2C85C72C4A095C430B1A760E673892FF03FCED
2018-07-07 16:46:45.359  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,CjqsTuGXtx1CSSq7CjfTTX814URo5v5p,1530953205,275,api.mch.weixin.qq.com,true,6000,8000,0,0,0,7C1B2834836ED78FC9DB5C0E4E2C85C72C4A095C430B1A760E673892FF03FCED
2018-07-07 16:46:45.359  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:51.235  INFO 13208 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,JDRTCx71Qb3GPCmHRz4IQLPJTfV3Qemc,1530953211,329,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8C277BC343F88329CE5A9EA39762DC2FD2D2F6B82469419BE0E5720B2A09BAF7
2018-07-07 16:46:51.236  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,JDRTCx71Qb3GPCmHRz4IQLPJTfV3Qemc,1530953211,329,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8C277BC343F88329CE5A9EA39762DC2FD2D2F6B82469419BE0E5720B2A09BAF7
2018-07-07 16:46:51.236  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:47:03.782  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,E9Zn0VoNN8eZNb794wYblHmsXUKG93Oi,1530953223,287,api.mch.weixin.qq.com,true,6000,8000,0,0,0,820E077AC7BF853D4FF60C0C5EF2292332C16E670111EEFB2B16459416BB6FCC
2018-07-07 16:47:03.783  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,E9Zn0VoNN8eZNb794wYblHmsXUKG93Oi,1530953223,287,api.mch.weixin.qq.com,true,6000,8000,0,0,0,820E077AC7BF853D4FF60C0C5EF2292332C16E670111EEFB2B16459416BB6FCC
2018-07-07 16:47:03.783  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:17:23.254  INFO 15460 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 15460 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:17:23.259 DEBUG 15460 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:17:23.260  INFO 15460 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:17:23.591  INFO 15460 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:17:23 CST 2018]; root of context hierarchy
2018-07-07 18:17:25.881  INFO 15460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:17:26.531  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.537  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:17:26.577  WARN 15460 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:17:27.777  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5db3dac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.253  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$78937312] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.291  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.296  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a6c610e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:34.139  INFO 15460 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:17:34.167  INFO 15460 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:17:34.170  INFO 15460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:17:34.405  INFO 15460 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:17:34.406  INFO 15460 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10822 ms
2018-07-07 18:17:34.965  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:17:34.968  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:17:34.969  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:17:34.969  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:17:34.970  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:17:34.971  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:17:38.240  INFO 15460 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:17:41.920  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:17:23 CST 2018]; root of context hierarchy
2018-07-07 18:17:42.140  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:17:42.141  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.142  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.143  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:17:42.144  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.148  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:17:42.149  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:17:42.150  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:17:42.150  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.151  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.153  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.154  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.155  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.156  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.157  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.157  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.163  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:17:42.164  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:17:42.165  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.166  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.166  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.167  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.167  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.169  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:17:42.170  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:17:42.171  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.175  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.176  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.176  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:17:42.177  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.178  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.178  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.179  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.180  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.181  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.182  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.182  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.183  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:17:42.187  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.188  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.188  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.189  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.190  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.192  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:17:42.192  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.193  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.194  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.195  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.199  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:17:42.200  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.200  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:17:42.201  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.201  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.202  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.204  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.204  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:17:42.205  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:17:42.206  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.207  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.207  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.208  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.212  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.212  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:17:42.213  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.213  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.214  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.214  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.215  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:17:42.215  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.216  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:17:42.217  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.217  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.218  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.221  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:17:42.221  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.222  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.222  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.223  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.225  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.225  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.226  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.229  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:17:42.230  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.231  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.232  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.233  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.234  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.234  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.235  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.235  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.238  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.239  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.378  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:42.379  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:42.505  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:44.986  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:17:44.990  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:17:45.004  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:17:45.266  INFO 15460 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:17:45.275  INFO 15460 --- [main] com.yanda.Application                    : Started Application in 22.358 seconds (JVM running for 22.817)
2018-07-07 18:19:45.855  INFO 15460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:19:45.856  INFO 15460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:19:45.948  INFO 15460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2018-07-07 18:21:34.541  WARN 15460 --- [http-nio-8080-exec-2] o.s.web.servlet.PageNotFound             : Request method 'POST' not supported
2018-07-07 18:22:53.772  INFO 13020 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13020 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:22:53.780 DEBUG 13020 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:22:53.781  INFO 13020 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:22:54.248  INFO 13020 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:22:54 CST 2018]; root of context hierarchy
2018-07-07 18:22:56.571  INFO 13020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:22:57.198  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.199  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.199  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.202  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.205  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.205  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:22:57.247  WARN 13020 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:22:58.230  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$687b12ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.631  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$835aab39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.667  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.671  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b18d490d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:23:04.466  INFO 13020 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:23:04.493  INFO 13020 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:23:04.496  INFO 13020 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:23:04.736  INFO 13020 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:23:04.737  INFO 13020 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10495 ms
2018-07-07 18:23:05.301  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:23:05.304  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:23:08.034  INFO 13020 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:23:11.528  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:22:54 CST 2018]; root of context hierarchy
2018-07-07 18:23:11.677  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:23:11.678  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.679  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.680  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:23:11.680  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.683  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:23:11.684  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:23:11.684  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:23:11.685  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.686  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.690  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.691  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.691  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.692  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.692  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.693  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.698  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:23:11.699  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:23:11.700  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.701  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.701  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.702  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.703  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.705  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:23:11.706  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:23:11.706  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.710  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.710  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.711  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:23:11.711  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.712  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.712  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.713  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.714  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.715  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.715  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.716  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.717  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:23:11.720  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.721  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.722  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.722  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.723  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.723  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.724  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:23:11.725  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.725  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.726  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.731  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:23:11.732  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.732  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.734  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:23:11.734  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.735  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.738  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.739  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:23:11.739  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:23:11.740  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.742  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.742  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.743  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.748  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.749  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:23:11.750  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.751  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.751  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.752  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.752  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:23:11.753  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:23:11.753  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.754  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.754  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.755  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.757  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.758  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.759  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:23:11.759  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.760  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.762  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.762  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.763  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.766  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:23:11.766  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.767  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.768  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.769  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.769  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.770  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.770  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.771  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.775  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.776  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.890  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:11.890  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:12.004  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:14.317  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:23:14.321  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:23:14.332  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:23:14.478  INFO 13020 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:23:14.489  INFO 13020 --- [main] com.yanda.Application                    : Started Application in 21.317 seconds (JVM running for 22.259)
2018-07-07 18:31:35.851  INFO 13020 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:31:35.851  INFO 13020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:31:35.940  INFO 13020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2018-07-07 18:31:42.632  INFO 13020 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:31:43.425 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:31:43.469 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:31:43.519 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:31:43.694  INFO 13020 --- [http-nio-8080-exec-7] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 18:31:43.695 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 18:31:43.696 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1433(Long)
2018-07-07 18:31:43.729 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 18:31:43.729 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : ====> Parameters: 3994(Long)
2018-07-07 18:31:43.755 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 18:31:43.757 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 18:33:13.613  INFO 4024 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4024 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:33:13.621 DEBUG 4024 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:33:13.621  INFO 4024 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:33:14.111  INFO 4024 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:33:14 CST 2018]; root of context hierarchy
2018-07-07 18:33:16.567  INFO 4024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:33:17.222  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.222  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.228  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:33:17.269  WARN 4024 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:33:18.343  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b95a267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.750  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$96753ab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.790  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.793  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$c4a7d885] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:24.606  INFO 4024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:33:24.634  INFO 4024 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:33:24.637  INFO 4024 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:33:24.879  INFO 4024 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:33:24.880  INFO 4024 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10777 ms
2018-07-07 18:33:25.409  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:33:25.410  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:33:25.410  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:33:28.264  INFO 4024 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:33:32.027  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:33:14 CST 2018]; root of context hierarchy
2018-07-07 18:33:32.197  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.199  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:33:32.200  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:33:32.201  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.203  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.206  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:33:32.208  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:33:32.208  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:33:32.209  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.209  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.213  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.214  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.215  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.215  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.216  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.217  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.224  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:33:32.225  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:33:32.226  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.226  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.227  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.227  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.228  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.230  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.230  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:33:32.231  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:33:32.236  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.238  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.238  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.239  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.239  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.240  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.241  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.242  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.243  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:33:32.246  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.246  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.248  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.248  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:33:32.249  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.250  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.251  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.255  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:33:32.256  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:33:32.257  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.257  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.258  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.258  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.260  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.261  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:33:32.261  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:33:32.262  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.263  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.263  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.264  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.269  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.270  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:33:32.270  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.271  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.272  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.272  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.273  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:33:32.273  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:33:32.274  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.274  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.275  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.275  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.278  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.278  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.279  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:33:32.280  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.281  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.283  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.283  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.284  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.287  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:33:32.288  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.289  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.289  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.290  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.292  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.296  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.297  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.420  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:32.421  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:32.539  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:35.062  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:33:35.066  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:33:35.078  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:33:35.227  INFO 4024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:33:35.237  INFO 4024 --- [main] com.yanda.Application                    : Started Application in 22.285 seconds (JVM running for 23.107)
2018-07-07 18:33:46.506  INFO 4024 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:33:46.507  INFO 4024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:33:46.590  INFO 4024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2018-07-07 18:34:13.413  INFO 4024 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:34:14.114 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:34:14.157 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:34:14.200 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:35:47.517 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:35:47.517 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:35:47.540 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:37:44.023 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:37:44.023 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:37:44.046 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:39:43.111  INFO 4024 --- [http-nio-8080-exec-3] wxpay java sdk                           : report worker num: 6
2018-07-07 18:39:43.121  INFO 4024 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,5cdnzv79q8RXuuSgYxN76Wx41HvTYcrZ,1530959983,1208,api.mch.weixin.qq.com,true,6000,8000,0,0,0,DADA77A2221967784E54B7710EFEC64A419D3622F7531E5406B5966211032D79
2018-07-07 18:39:43.122  INFO 4024 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,5cdnzv79q8RXuuSgYxN76Wx41HvTYcrZ,1530959983,1208,api.mch.weixin.qq.com,true,6000,8000,0,0,0,DADA77A2221967784E54B7710EFEC64A419D3622F7531E5406B5966211032D79
2018-07-07 18:39:43.122  INFO 4024 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:40:09.934  INFO 18724 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18724 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:40:09.943 DEBUG 18724 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:40:09.943  INFO 18724 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:40:10.420  INFO 18724 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:40:10 CST 2018]; root of context hierarchy
2018-07-07 18:40:12.559  INFO 18724 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:40:13.192  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.198  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:40:13.235  WARN 18724 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:40:14.351  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$91e4ef0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.776  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$acc48754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.809  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.812  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$daf72528] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:20.595  INFO 18724 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:40:20.623  INFO 18724 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:40:20.625  INFO 18724 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:40:20.861  INFO 18724 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:40:20.862  INFO 18724 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10449 ms
2018-07-07 18:40:21.371  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:40:21.374  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:40:21.374  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:40:24.096  INFO 18724 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:40:27.700  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:40:10 CST 2018]; root of context hierarchy
2018-07-07 18:40:27.875  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.877  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:27.879  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:40:27.880  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:40:27.881  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.884  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:40:27.885  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:40:27.886  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:40:27.886  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.887  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.891  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.892  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.893  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.893  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.894  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.894  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.899  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:40:27.900  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:40:27.901  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.902  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.902  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.903  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.904  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.907  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:40:27.908  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:40:27.909  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.913  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.914  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.914  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:40:27.915  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.916  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.918  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.919  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.919  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.920  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:40:27.924  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.925  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.926  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.926  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.927  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.927  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:40:27.928  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.928  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.929  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.929  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.934  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:40:27.935  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.935  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.936  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:40:27.936  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.937  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.940  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.941  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:40:27.942  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:40:27.943  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.944  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.945  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.946  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.952  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.953  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:40:27.954  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.954  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.955  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.956  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.956  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.958  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:40:27.958  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:40:27.960  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.961  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.961  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.962  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.962  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:40:27.964  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.965  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.966  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.970  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:40:27.971  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.972  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.973  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.973  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.974  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.974  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.975  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.976  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.980  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.981  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:28.120  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:28.121  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:28.247  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:30.911  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:40:30.914  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:40:30.926  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:40:31.075  INFO 18724 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:40:31.084  INFO 18724 --- [main] com.yanda.Application                    : Started Application in 21.78 seconds (JVM running for 22.636)
2018-07-07 18:40:43.431  INFO 18724 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:40:43.431  INFO 18724 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:40:43.526  INFO 18724 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2018-07-07 18:40:55.716  INFO 18724 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:40:56.488 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:40:56.533 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:40:56.588 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:41:14.194  INFO 18724 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:41:14.198  INFO 18724 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,AYbI081VbchJGFQStesOhMhVwSGMY0Nx,1530960074,808,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D50CE95D3CDBE3D0775D7C44B56E8843F5AA5D1AA2F93F1E8FFE4BDB2C44C18
2018-07-07 18:41:14.199  INFO 18724 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,AYbI081VbchJGFQStesOhMhVwSGMY0Nx,1530960074,808,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D50CE95D3CDBE3D0775D7C44B56E8843F5AA5D1AA2F93F1E8FFE4BDB2C44C18
2018-07-07 18:41:14.199  INFO 18724 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:44:57.372 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:44:57.372 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:44:57.399 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:45:45.257  INFO 18724 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,FMzQiGlI4PMjRc2vr4mNxJG2ddnsqE5k,1530960345,430,api.mch.weixin.qq.com,true,6000,8000,0,0,0,5527ABB98103C1E0F03A15A21193EC921197CC0F391CA9D41FE4C52DBC9A7CDF
2018-07-07 18:45:45.257  INFO 18724 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,FMzQiGlI4PMjRc2vr4mNxJG2ddnsqE5k,1530960345,430,api.mch.weixin.qq.com,true,6000,8000,0,0,0,5527ABB98103C1E0F03A15A21193EC921197CC0F391CA9D41FE4C52DBC9A7CDF
2018-07-07 18:45:45.257  INFO 18724 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:47:05.393 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:47:05.394 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:47:05.420 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:47:05.561  INFO 18724 --- [http-nio-8080-exec-9] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 18:47:05.562 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 18:47:05.563 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1432(Long)
2018-07-07 18:47:05.592 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 18:47:05.593 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : ====> Parameters: 3991(Long)
2018-07-07 18:47:05.620 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 18:47:05.621 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 18:47:25.943  INFO 18724 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,3x8qmdichbDbnzKhRusiba0AOzAru8Sn,1530960445,368,api.mch.weixin.qq.com,true,6000,8000,0,0,0,2E9A8F83E3363A97CD8C304E75CC933925115A564900F8EF609F4E9D4FBEB7B2
2018-07-07 18:47:25.943  INFO 18724 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,3x8qmdichbDbnzKhRusiba0AOzAru8Sn,1530960445,368,api.mch.weixin.qq.com,true,6000,8000,0,0,0,2E9A8F83E3363A97CD8C304E75CC933925115A564900F8EF609F4E9D4FBEB7B2
2018-07-07 18:47:25.943  INFO 18724 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:48:34.731  INFO 18724 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Ue41ePEPmiWpzvFuczzpSXdo5S4T0L6P,1530960514,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0354D194CDA98CCEF3E2713A0C38F411E3B462A5F3EB8C06BF8837355DA9165A
2018-07-07 18:48:34.732  INFO 18724 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Ue41ePEPmiWpzvFuczzpSXdo5S4T0L6P,1530960514,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0354D194CDA98CCEF3E2713A0C38F411E3B462A5F3EB8C06BF8837355DA9165A
2018-07-07 18:48:34.732  INFO 18724 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:49:05.886  INFO 20008 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20008 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:49:05.895 DEBUG 20008 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:49:05.895  INFO 20008 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:49:06.383  INFO 20008 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:49:06 CST 2018]; root of context hierarchy
2018-07-07 18:49:08.802  INFO 20008 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.547  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:49:09.590  WARN 20008 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:49:10.768  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d942932] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.208  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b873c17c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.245  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.248  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e6a65f50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:17.102  INFO 20008 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:49:17.134  INFO 20008 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:49:17.137  INFO 20008 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:49:17.464  INFO 20008 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:49:17.465  INFO 20008 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11088 ms
2018-07-07 18:49:17.968  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:49:17.970  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:49:17.971  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:49:17.971  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:49:17.972  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:49:17.972  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:49:20.728  INFO 20008 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:49:24.139  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:49:06 CST 2018]; root of context hierarchy
2018-07-07 18:49:24.314  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:49:24.317  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.318  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:49:24.319  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.320  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.323  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:49:24.324  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:49:24.325  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:49:24.325  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.326  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.330  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.331  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.332  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.333  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.335  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.336  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.341  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:49:24.342  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:49:24.342  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.343  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.344  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.344  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.345  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.347  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:49:24.347  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:49:24.348  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.351  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.353  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.353  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:49:24.354  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.355  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.355  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.356  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.356  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.357  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.358  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.358  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.359  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:49:24.362  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.363  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.363  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.364  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.364  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.365  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.365  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.366  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.366  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.367  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:49:24.372  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:49:24.373  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:49:24.373  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.374  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.375  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.375  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.378  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.378  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:49:24.379  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:49:24.380  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.381  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.382  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.382  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.386  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:49:24.390  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.390  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.392  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.392  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.395  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.395  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.396  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.399  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:49:24.400  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.401  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.401  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.402  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.402  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.407  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.408  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.536  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:24.537  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:24.657  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:27.204  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:49:27.207  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:49:27.220  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:49:27.371  INFO 20008 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:49:27.384  INFO 20008 --- [main] com.yanda.Application                    : Started Application in 22.209 seconds (JVM running for 23.025)
2018-07-07 18:49:42.734  INFO 20008 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:49:42.735  INFO 20008 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:49:42.795  INFO 20008 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2018-07-07 18:49:49.705  INFO 20008 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:49:50.548 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:49:50.590 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:49:50.641 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:49:58.733  INFO 20008 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:49:58.742  INFO 20008 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,f4SPafm09YJsmWTL3iqTjzt9OazAA90M,1530960598,1272,api.mch.weixin.qq.com,true,6000,8000,0,0,0,05D1B8D0A293CD4B44F20EFC81B2F1A1DD610E5ECB710D1F0F07D249C71BC746
2018-07-07 18:49:58.742  INFO 20008 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,f4SPafm09YJsmWTL3iqTjzt9OazAA90M,1530960598,1272,api.mch.weixin.qq.com,true,6000,8000,0,0,0,05D1B8D0A293CD4B44F20EFC81B2F1A1DD610E5ECB710D1F0F07D249C71BC746
2018-07-07 18:49:58.743  INFO 20008 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:51:12.762  INFO 20008 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,QDBFV3rjwKJt3fbNokRbJQBFiIOgJUGt,1530960672,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,03F839C682E96D0F2E668F411403DC6CC419F600A2417EE9272FE85535D77686
2018-07-07 18:51:12.762  INFO 20008 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,QDBFV3rjwKJt3fbNokRbJQBFiIOgJUGt,1530960672,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,03F839C682E96D0F2E668F411403DC6CC419F600A2417EE9272FE85535D77686
2018-07-07 18:51:12.763  INFO 20008 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:52:14.658 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:52:14.660 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:52:14.686 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:52:42.500  INFO 20008 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,ZUfaaC5RZF4yuOWDSx8wthLhcWcnH4cl,1530960762,378,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C55E7153B4F83660E66CD747BD69EADC622E2F2B44D3D539C141D837F6D97272
2018-07-07 18:52:42.501  INFO 20008 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,ZUfaaC5RZF4yuOWDSx8wthLhcWcnH4cl,1530960762,378,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C55E7153B4F83660E66CD747BD69EADC622E2F2B44D3D539C141D837F6D97272
2018-07-07 18:52:42.501  INFO 20008 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:56:27.895  INFO 21024 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 21024 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:56:27.904 DEBUG 21024 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:56:27.904  INFO 21024 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:56:28.374  INFO 21024 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:56:28 CST 2018]; root of context hierarchy
2018-07-07 18:56:30.710  INFO 21024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:56:31.376  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:56:31.422  WARN 21024 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:56:32.547  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b8dec193] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.011  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$d3be59dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.083  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.088  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1f0f7b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:38.950  INFO 21024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:56:38.978  INFO 21024 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:56:38.980  INFO 21024 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:56:39.225  INFO 21024 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:56:39.226  INFO 21024 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10859 ms
2018-07-07 18:56:39.715  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:56:39.716  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:56:39.716  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:56:42.539  INFO 21024 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:56:46.352  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:56:28 CST 2018]; root of context hierarchy
2018-07-07 18:56:46.524  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:56:46.526  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.527  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.528  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:56:46.528  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.531  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:56:46.532  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:56:46.533  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:56:46.534  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.535  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.538  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.539  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.540  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.540  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.541  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.541  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.546  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:56:46.547  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:56:46.547  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.548  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.548  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.549  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.550  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.552  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.553  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:56:46.554  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:56:46.557  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.557  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.558  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:56:46.559  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.559  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.560  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.560  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.561  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.562  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.563  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.564  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.565  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:56:46.569  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.569  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.570  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.570  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.571  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.571  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.572  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:56:46.573  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.573  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.574  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.580  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:56:46.581  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.583  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.586  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.587  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:56:46.587  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:56:46.588  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.589  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.589  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.590  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.593  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.595  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.596  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.596  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:56:46.598  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.598  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:56:46.601  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.601  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.602  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:56:46.603  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.603  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.605  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.606  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.606  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.611  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:56:46.611  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.612  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.612  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.613  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.613  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.614  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.614  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.615  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.619  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.620  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.753  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:46.753  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:46.897  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:49.604  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:56:49.608  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:56:49.621  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:56:49.810  INFO 21024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:56:49.822  INFO 21024 --- [main] com.yanda.Application                    : Started Application in 22.577 seconds (JVM running for 23.455)
2018-07-07 18:56:55.900  INFO 21024 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:56:55.901  INFO 21024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:56:55.980  INFO 21024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2018-07-07 18:57:02.356  INFO 21024 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:57:03.173 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:57:03.215 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:57:03.262 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:57:14.009  INFO 21024 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:57:14.018  INFO 21024 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,47Hyz8bVEI1V8Uu6bpoVMgzqNj3N2rFK,1530961034,1265,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6E6DEDB8496AC27292DE5200FCA28E854092AC972C239C4B9BE22444824D19CF
2018-07-07 18:57:14.018  INFO 21024 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,47Hyz8bVEI1V8Uu6bpoVMgzqNj3N2rFK,1530961034,1265,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6E6DEDB8496AC27292DE5200FCA28E854092AC972C239C4B9BE22444824D19CF
2018-07-07 18:57:14.019  INFO 21024 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:57:56.949  INFO 21024 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,LOaGJZ2jdScXA6K6lZhARJ9OiH8PSPif,1530961076,379,api.mch.weixin.qq.com,true,6000,8000,0,0,0,88F340FF8E46244BDF95D6CA370D46C25DB7090DB901C490BB6CCE5D19D75049
2018-07-07 18:57:56.949  INFO 21024 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,LOaGJZ2jdScXA6K6lZhARJ9OiH8PSPif,1530961076,379,api.mch.weixin.qq.com,true,6000,8000,0,0,0,88F340FF8E46244BDF95D6CA370D46C25DB7090DB901C490BB6CCE5D19D75049
2018-07-07 18:57:56.950  INFO 21024 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:01:09.987  INFO 20012 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20012 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 19:01:09.996 DEBUG 20012 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 19:01:09.997  INFO 20012 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 19:01:10.537  INFO 20012 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:01:10 CST 2018]; root of context hierarchy
2018-07-07 19:01:12.785  INFO 20012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 19:01:13.459  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 19:01:13.503  WARN 20012 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 19:01:14.672  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$133c2304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.234  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$2e1bbb4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.275  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.278  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$5c4e5922] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:21.175  INFO 20012 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 19:01:21.206  INFO 20012 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 19:01:21.208  INFO 20012 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 19:01:21.463  INFO 20012 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 19:01:21.463  INFO 20012 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10933 ms
2018-07-07 19:01:21.990  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 19:01:21.991  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 19:01:21.992  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 19:01:21.992  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 19:01:21.993  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 19:01:21.993  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 19:01:24.711  INFO 20012 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 19:01:28.261  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:01:10 CST 2018]; root of context hierarchy
2018-07-07 19:01:28.455  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.458  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:01:28.459  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.459  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.460  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:01:28.463  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:01:28.464  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:01:28.465  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 19:01:28.465  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.466  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.468  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.469  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.469  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.470  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.470  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.471  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.478  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:01:28.479  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:01:28.480  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.481  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.481  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.482  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.482  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.485  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 19:01:28.486  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 19:01:28.487  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.491  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.492  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.492  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:01:28.493  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.494  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.494  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.495  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.495  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.496  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.497  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.497  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.498  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:01:28.501  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.502  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.502  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.503  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.503  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:01:28.505  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.505  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.506  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.507  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.507  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.512  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:01:28.513  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.513  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.514  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:01:28.514  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.515  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.517  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.518  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 19:01:28.519  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 19:01:28.520  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.522  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.523  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.523  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.528  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.528  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:01:28.529  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.529  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.530  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.531  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 19:01:28.535  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.535  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.536  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 19:01:28.537  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.537  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.539  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.540  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.540  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.544  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.544  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.545  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.545  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.546  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.546  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.550  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.551  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.662  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:28.662  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:28.787  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:31.506  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 19:01:31.510  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 19:01:31.522  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 19:01:31.665  INFO 20012 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 19:01:31.675  INFO 20012 --- [main] com.yanda.Application                    : Started Application in 22.327 seconds (JVM running for 23.174)
2018-07-07 19:01:39.146  INFO 20012 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 19:01:39.146  INFO 20012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 19:01:39.237  INFO 20012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2018-07-07 19:01:50.994  INFO 20012 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 19:01:51.714 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:01:51.749 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:01:51.793 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:02:06.409  INFO 20012 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 19:02:06.416  INFO 20012 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Oxx4jDLolEra5sKaSVSqMkQUJmvoUWCh,1530961326,1260,api.mch.weixin.qq.com,true,6000,8000,0,0,0,87C769F9D88BD58D55D68046A043973B49A2251134993E402B80AD705116438C
2018-07-07 19:02:06.416  INFO 20012 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Oxx4jDLolEra5sKaSVSqMkQUJmvoUWCh,1530961326,1260,api.mch.weixin.qq.com,true,6000,8000,0,0,0,87C769F9D88BD58D55D68046A043973B49A2251134993E402B80AD705116438C
2018-07-07 19:02:06.417  INFO 20012 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:04:21.030 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-07 19:04:21.032 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-07 19:04:21.059 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-07 19:04:21.136 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 19:04:21.137 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-07 19:04:21.163 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 19:04:21.166 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 19:04:21.166 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 19:04:21.198 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 19:04:21.199 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 19:04:21.235 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 19:04:21.237 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 19:04:21.237 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 19:04:21.263 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 19:04:21.263 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 19:04:33.504  INFO 20012 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,BRZSVmHrneNkWFRM7oQd3ykwVa8J6XyY,1530961473,412,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C18BA02F1C753F9920BE194B50ADB3E83C5ECC291936009D4767D1E5B0F47610
2018-07-07 19:04:33.504  INFO 20012 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,BRZSVmHrneNkWFRM7oQd3ykwVa8J6XyY,1530961473,412,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C18BA02F1C753F9920BE194B50ADB3E83C5ECC291936009D4767D1E5B0F47610
2018-07-07 19:04:33.505  INFO 20012 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:05:47.097 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:05:47.098 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:05:47.125 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:12:24.491  INFO 18412 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18412 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 19:12:24.499 DEBUG 18412 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 19:12:24.500  INFO 18412 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 19:12:24.974  INFO 18412 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:12:24 CST 2018]; root of context hierarchy
2018-07-07 19:12:27.276  INFO 18412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.958  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 19:12:28.001  WARN 18412 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 19:12:29.130  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d73fb94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.561  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$785393de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.597  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.600  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a68631b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:35.408  INFO 18412 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 19:12:35.435  INFO 18412 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 19:12:35.437  INFO 18412 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 19:12:35.737  INFO 18412 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 19:12:35.738  INFO 18412 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10770 ms
2018-07-07 19:12:36.281  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 19:12:36.282  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 19:12:36.282  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 19:12:39.024  INFO 18412 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 19:12:42.514  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:12:24 CST 2018]; root of context hierarchy
2018-07-07 19:12:42.699  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.702  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.703  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:12:42.704  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:12:42.705  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.708  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:12:42.709  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:12:42.710  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 19:12:42.711  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.712  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.715  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.716  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.717  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.718  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.718  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.719  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.724  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:12:42.725  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:12:42.727  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.727  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.728  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.729  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.729  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.731  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.732  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 19:12:42.733  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 19:12:42.736  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.737  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.737  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:12:42.738  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.738  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.739  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.739  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.740  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.741  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.742  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.742  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.744  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:12:42.747  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.747  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.748  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.749  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.749  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.750  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.750  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.751  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:12:42.751  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.752  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.757  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:12:42.758  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:12:42.760  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.760  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.761  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.762  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.764  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.765  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 19:12:42.765  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 19:12:42.766  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.768  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.769  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.770  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.774  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.775  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:12:42.775  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.776  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.777  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.780  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.780  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.781  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.781  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.785  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 19:12:42.785  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.786  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.787  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.787  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.789  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.789  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.790  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.794  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 19:12:42.795  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.795  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.796  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.796  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.797  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.797  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.798  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.798  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.803  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.803  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.948  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:42.948  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:43.140  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:45.583  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 19:12:45.586  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 19:12:45.593  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 19:12:45.737  INFO 18412 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 19:12:45.749  INFO 18412 --- [main] com.yanda.Application                    : Started Application in 21.888 seconds (JVM running for 22.686)
2018-07-07 19:12:50.366  INFO 18412 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 19:12:50.366  INFO 18412 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 19:12:50.423  INFO 18412 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-07-07 19:12:52.009  INFO 18412 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-07 19:12:52.017  INFO 18412 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,ANqyUjSZHKE05IS9c26Rq0JEkeuZqLpa,1530961972,812,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9474ADCE0700975B8B15337FF22C8EFB99BDD6B256E1E31CFAA7FB2A69FBA7C6
2018-07-07 19:12:52.018  INFO 18412 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,ANqyUjSZHKE05IS9c26Rq0JEkeuZqLpa,1530961972,812,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9474ADCE0700975B8B15337FF22C8EFB99BDD6B256E1E31CFAA7FB2A69FBA7C6
2018-07-07 19:12:52.018  INFO 18412 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:18.948  INFO 18412 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 19:17:19.164  INFO 18412 --- [http-nio-8080-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 19:17:20.564 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 19:17:20.610 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 19:17:20.656 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 19:17:20.660 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 19:17:20.661 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 19:17:20.695 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 19:17:27.352 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:17:27.353 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:17:27.380 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:17:42.556  INFO 18412 --- [http-nio-8080-exec-2] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,a9KhKfbs6evCfZSTZBBFrbDmyyrvTNt9,1530962262,393,api.mch.weixin.qq.com,true,6000,8000,0,0,0,D1ACE8A68779EA36F6C35C7C51C3FEE7BA4F751FED9B364696A5D86BEB8CF32B
2018-07-07 19:17:42.556  INFO 18412 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,a9KhKfbs6evCfZSTZBBFrbDmyyrvTNt9,1530962262,393,api.mch.weixin.qq.com,true,6000,8000,0,0,0,D1ACE8A68779EA36F6C35C7C51C3FEE7BA4F751FED9B364696A5D86BEB8CF32B
2018-07-07 19:17:42.556  INFO 18412 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:46.888  INFO 18412 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,C4k7i38mZdGVYjAQOFerZudsOGnoy8vR,1530962266,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,688F7F08BE51D3796A7627336BE04F7C70649311126E72507D2C0D9C9D9AD5E1
2018-07-07 19:17:46.888  INFO 18412 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,C4k7i38mZdGVYjAQOFerZudsOGnoy8vR,1530962266,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,688F7F08BE51D3796A7627336BE04F7C70649311126E72507D2C0D9C9D9AD5E1
2018-07-07 19:17:46.888  INFO 18412 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:55.097  INFO 18412 --- [http-nio-8080-exec-6] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,JBiOML9HdcsJD5g50j5a4Od1FLi7gAxI,1530962275,338,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0F5E24CD1440BCC16BBCAF221DA02F7E63CBC3A3411C53690068573EE282409A
2018-07-07 19:17:55.097  INFO 18412 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,JBiOML9HdcsJD5g50j5a4Od1FLi7gAxI,1530962275,338,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0F5E24CD1440BCC16BBCAF221DA02F7E63CBC3A3411C53690068573EE282409A
2018-07-07 19:17:55.097  INFO 18412 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:30:12.567  INFO 18412 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-07 20:30:12]
2018-07-07 20:49:30.614  INFO 13848 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13848 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 20:49:30.624 DEBUG 13848 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 20:49:30.624  INFO 13848 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 20:49:31.115  INFO 13848 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:49:31 CST 2018]; root of context hierarchy
2018-07-07 20:49:33.352  INFO 13848 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 20:49:34.001  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.001  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 20:49:34.051  WARN 13848 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 20:49:35.112  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$336545b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.590  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$4e44ddfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.635  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.639  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$7c777bce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:41.577  INFO 13848 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 20:49:41.607  INFO 13848 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 20:49:41.609  INFO 13848 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 20:49:41.869  INFO 13848 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 20:49:41.870  INFO 13848 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10762 ms
2018-07-07 20:49:42.422  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 20:49:42.423  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 20:49:42.424  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 20:49:42.424  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 20:49:42.425  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 20:49:42.425  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 20:49:45.560  INFO 13848 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 20:49:49.367  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:49:31 CST 2018]; root of context hierarchy
2018-07-07 20:49:49.540  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:49:49.541  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:49:49.542  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.543  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.544  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.548  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:49:49.549  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:49:49.549  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 20:49:49.550  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.551  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.554  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.555  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.556  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.556  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.557  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.557  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.564  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:49:49.565  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:49:49.566  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.567  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.568  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.569  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.569  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.572  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.573  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 20:49:49.574  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 20:49:49.579  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.579  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.580  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:49:49.580  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.581  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.582  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.582  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.583  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.584  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.585  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.585  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.586  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:49:49.590  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.591  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.591  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.592  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.593  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.593  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.594  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.594  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:49:49.595  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.595  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.600  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.601  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.602  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.602  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.603  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.603  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.604  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.607  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.608  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 20:49:49.608  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 20:49:49.609  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.611  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.611  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.612  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.616  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.617  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.619  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.619  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.620  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 20:49:49.620  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 20:49:49.621  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.628  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.628  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.631  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 20:49:49.632  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.633  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.633  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.634  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.635  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.636  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.636  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.639  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 20:49:49.640  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.641  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.641  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.642  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.642  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.643  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.644  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.644  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.649  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.649  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.777  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:49.778  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:49.909  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:52.500  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 20:49:52.504  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 20:49:52.516  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 20:49:52.688  INFO 13848 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 20:49:52.703  INFO 13848 --- [main] com.yanda.Application                    : Started Application in 22.726 seconds (JVM running for 23.554)
2018-07-07 20:51:04.661  INFO 13848 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 20:51:04.663  INFO 13848 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 20:51:04.775  INFO 13848 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 111 ms
2018-07-07 20:52:45.031  INFO 19148 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 19148 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 20:52:45.036 DEBUG 19148 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 20:52:45.036  INFO 19148 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 20:52:45.294  INFO 19148 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:52:45 CST 2018]; root of context hierarchy
2018-07-07 20:52:47.484  INFO 19148 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 20:52:48.105  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.110  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 20:52:48.147  WARN 19148 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 20:52:49.182  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4156dad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.562  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$5c36731e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.601  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.605  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$8a6910f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:55.415  INFO 19148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 20:52:55.442  INFO 19148 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 20:52:55.444  INFO 19148 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 20:52:55.672  INFO 19148 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 20:52:55.673  INFO 19148 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10383 ms
2018-07-07 20:52:56.199  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 20:52:56.201  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 20:52:56.202  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 20:52:56.202  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 20:52:56.203  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 20:52:56.203  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 20:52:58.850  INFO 19148 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 20:53:02.417  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:52:45 CST 2018]; root of context hierarchy
2018-07-07 20:53:02.590  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.592  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:53:02.593  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:53:02.593  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.595  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.599  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:53:02.600  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:53:02.601  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 20:53:02.602  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.602  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.606  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.607  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.607  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.608  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.608  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.609  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.616  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:53:02.617  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:53:02.617  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.618  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.618  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.619  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.619  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.621  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.622  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 20:53:02.623  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 20:53:02.626  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.627  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.628  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:53:02.629  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.629  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.630  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.631  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.632  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.633  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.634  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.634  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.635  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:53:02.639  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.640  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.640  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.641  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.641  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:53:02.643  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.644  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.648  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.649  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.651  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.652  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.654  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.655  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 20:53:02.655  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 20:53:02.656  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.658  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.658  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.659  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.662  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.663  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:53:02.664  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.664  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.667  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.667  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.669  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.670  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.671  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 20:53:02.671  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.672  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.674  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.675  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.675  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.678  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 20:53:02.679  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.679  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.680  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.682  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.682  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.687  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.688  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.820  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:02.821  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:02.939  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:05.332  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 20:53:05.336  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 20:53:05.349  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 20:53:05.502  INFO 19148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 20:53:05.509  INFO 19148 --- [main] com.yanda.Application                    : Started Application in 20.792 seconds (JVM running for 21.256)
2018-07-07 20:53:57.478  INFO 19148 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 20:53:57.479  INFO 19148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 20:53:57.563  INFO 19148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2018-07-07 20:54:03.875  INFO 19148 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 20:54:04.747 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 20:54:04.794 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 20:54:04.852 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 20:54:16.052  INFO 19148 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 20:54:16.077  INFO 19148 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,GwuWWgGKZ4nboDbODTL5Jap9gsPJOlEX,1530968056,1325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8ED37C56CEF692B11453864DF1A29A00884C8B51AB46DE73BB2021403989AAB8
2018-07-07 20:54:16.078  INFO 19148 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,GwuWWgGKZ4nboDbODTL5Jap9gsPJOlEX,1530968056,1325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8ED37C56CEF692B11453864DF1A29A00884C8B51AB46DE73BB2021403989AAB8
2018-07-07 20:54:16.078  INFO 19148 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:54:36.103 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 20:54:36.103 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 20:54:36.135 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 20:54:36.147 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 20:54:36.151 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 20:54:36.135(Timestamp), 2021-10-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 20:54:36.135(Timestamp), 2021-10-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 20:54:36.178 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 20:54:36.184 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 20:54:36.184 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 20:54:36.213 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 20:54:36.213 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 20:54:36.265 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 20:54:36.265 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 20:54:37.499  INFO 19148 --- [http-nio-8080-exec-2] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,KDA8lguXguVdr2iF9ReRDvx0rKMGJOsX,1530968077,1140,api.mch.weixin.qq.com,true,6000,8000,0,0,0,125A6F34A7BE6A960C80AFC71003765F921AC4B51241F7306A9FE3456E963EEA
2018-07-07 20:54:37.500  INFO 19148 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,KDA8lguXguVdr2iF9ReRDvx0rKMGJOsX,1530968077,1140,api.mch.weixin.qq.com,true,6000,8000,0,0,0,125A6F34A7BE6A960C80AFC71003765F921AC4B51241F7306A9FE3456E963EEA
2018-07-07 20:54:37.500  INFO 19148 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:54:37.506 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 20:54:37.506 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1433(Long), 38(Long)
2018-07-07 20:54:37.534 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 20:54:37.541 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 20:54:37.543 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1433(Long), 2018-07-07 20:54:37.375(Timestamp), 2000(Integer)
2018-07-07 20:54:37.571 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 20:56:11.355 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:56:11.356 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:56:11.384 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:56:11.387 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:56:11.388 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:56:11.418 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 20:56:35.679 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : ==>  Preparing: SELECT count(0) FROM t_user_history WHERE user_id = ? 
2018-07-07 20:56:35.680 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : ==> Parameters: 38(Long)
2018-07-07 20:56:35.706 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : <==      Total: 1
2018-07-07 20:56:35.708 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : ==>  Preparing: select * from t_user_history where user_id = ? order by watch_time DESC LIMIT ? 
2018-07-07 20:56:35.709 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : ==> Parameters: 38(Long), 10(Integer)
2018-07-07 20:56:35.737 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.737 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1433(Long)
2018-07-07 20:56:35.764 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.766 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.766 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1418(Long)
2018-07-07 20:56:35.794 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.796 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.797 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1(Long)
2018-07-07 20:56:35.824 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 0
2018-07-07 20:56:35.826 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.828 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1417(Long)
2018-07-07 20:56:35.856 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.857 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.857 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1381(Long)
2018-07-07 20:56:35.884 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.886 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.886 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1368(Long)
2018-07-07 20:56:35.914 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.914 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.915 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1354(Long)
2018-07-07 20:56:35.941 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.944 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.944 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1350(Long)
2018-07-07 20:56:35.971 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.972 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.973 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1347(Long)
2018-07-07 20:56:35.999 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:36.001 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:36.002 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 141(Long)
2018-07-07 20:56:36.029 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:36.029 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : <==      Total: 10
2018-07-07 20:58:01.424 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 20:58:01.424 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 20:58:01.452 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 20:58:27.722 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 20:58:27.723 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1433(Long), 38(Long)
2018-07-07 20:58:27.751 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 20:58:27.752 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-07 20:58:27.754 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1433(Long), 2018-07-07 20:58:27.563(Timestamp), 24000(Integer), 490(Long)
2018-07-07 20:58:27.781 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-07 20:58:35.875 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:58:35.876 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:58:35.902 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:58:35.904 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:58:35.905 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:58:35.931 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 20:59:03.365 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:59:03.366 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:59:03.391 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:59:03.393 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:59:03.393 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:59:03.420 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 23:21:45.476  INFO 13852 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13852 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 23:21:45.582 DEBUG 13852 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 23:21:45.583  INFO 13852 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 23:21:45.883  INFO 13852 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 23:21:45 CST 2018]; root of context hierarchy
2018-07-07 23:21:47.260  INFO 13852 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 23:21:47.853  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.853  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.858  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.858  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.860  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 23:21:47.894  WARN 13852 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 23:21:48.891  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$99db5631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.286  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b4baee7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.319  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.323  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e2ed8c4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:55.169  INFO 13852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 23:21:55.197  INFO 13852 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 23:21:55.199  INFO 13852 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 23:21:55.436  INFO 13852 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 23:21:55.437  INFO 13852 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9558 ms
2018-07-07 23:21:55.917  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 23:21:55.919  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 23:21:55.919  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 23:21:58.364  INFO 13852 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 23:22:01.824  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 23:21:45 CST 2018]; root of context hierarchy
2018-07-07 23:22:01.973  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 23:22:01.975  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 23:22:01.975  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.976  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:01.976  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.979  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 23:22:01.979  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 23:22:01.980  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 23:22:01.981  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 23:22:01.982  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:01.984  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.985  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.985  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.986  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.986  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.987  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.990  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 23:22:01.991  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:01.993  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.993  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:01.995  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.996  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 23:22:01.996  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 23:22:01.999  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.000  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.000  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 23:22:02.001  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.002  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.002  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.003  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.003  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.004  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.004  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.005  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.006  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 23:22:02.008  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.010  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 23:22:02.011  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.011  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.012  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.012  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.013  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:02.020  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.021  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.022  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.023  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.023  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.024  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.026  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.026  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.027  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.027  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.029  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.030  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 23:22:02.030  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 23:22:02.031  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.033  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.034  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.035  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.041  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.042  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 23:22:02.043  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:02.043  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.044  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.044  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.045  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 23:22:02.045  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 23:22:02.046  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.047  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.048  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.048  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.051  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 23:22:02.052  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.053  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.054  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.055  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.056  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.057  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.057  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.059  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 23:22:02.060  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.061  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:02.061  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.062  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.062  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:02.063  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.063  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.064  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.068  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.068  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:02.195  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:02.196  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:02.288  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:04.501  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 23:22:04.504  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 23:22:04.514  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 23:22:04.659  INFO 13852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 23:22:04.671  INFO 13852 --- [main] com.yanda.Application                    : Started Application in 19.505 seconds (JVM running for 20.068)
2018-07-07 23:26:06.614  INFO 13852 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 23:26:06.614  INFO 13852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 23:26:06.658  INFO 13852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-07 23:26:06.921  INFO 13852 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 23:26:07.496 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 23:26:07.548 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-07 23:26:07.608 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 23:26:07.614 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 23:26:07.615 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-07 23:26:07.642 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 23:26:07.643 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-07 23:26:07.666 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-07 23:26:07.667 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 23:26:07.668 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-07 23:26:07.694 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 23:26:07.694 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 23:26:08.824 ERROR 13852 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.877 ERROR 13852 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.895 ERROR 13852 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.955 ERROR 13852 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.965 ERROR 13852 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-07 23:26:12.386  INFO 13852 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:26:12.446 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:26:12.447 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:26:12.470 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:26:12.472 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:26:12.473 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:26:12.501 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:26:49.671  INFO 13852 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:26:49.677 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:26:49.678 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:26:49.702 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:26:49.705 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:26:49.707 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:26:49.735 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:26:51.550 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:26:51.550 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:26:51.576 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 2
2018-07-07 23:33:33.888 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:33:33.889 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:33:33.915 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-07 23:33:40.487 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:33:40.489 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:33:40.516 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-07 23:50:38.747  INFO 13852 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:50.342  INFO 13852 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:54.386  INFO 13852 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:54.726 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:50:54.727 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:50:54.758 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:50:54.760 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:50:54.760 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:50:54.792 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:50:57.896 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:50:57.897 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:50:57.926 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:50:57.929 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:50:57.930 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:50:57.962 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:51:09.488 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:51:09.492 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:51:09.521 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:51:09.528 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:51:09.531 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:51:09.558 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 00:00:00.002  INFO 13852 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-08 00:00:00]
2018-07-08 09:27:11.159  INFO 592 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 592 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:27:11.163 DEBUG 592 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:27:11.164  INFO 592 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:27:11.583  INFO 592 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:27:11 CST 2018]; root of context hierarchy
2018-07-08 09:27:14.652  INFO 592 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:27:14.992  WARN 592 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:27:15.494  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.664  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a05e03e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.684  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.688  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ce90a1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:21.073  INFO 592 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:27:21.085  INFO 592 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:27:21.086  INFO 592 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:27:21.202  INFO 592 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:27:21.203  INFO 592 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9625 ms
2018-07-08 09:27:21.405  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:27:21.407  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:27:23.134  INFO 592 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:27:25.913  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:27:11 CST 2018]; root of context hierarchy
2018-07-08 09:27:26.045  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:27:26.046  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.049  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:27:26.050  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:27:26.050  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:27:26.051  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.052  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.054  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.055  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.057  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.063  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:27:26.063  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:27:26.064  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.064  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.067  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:27:26.068  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:27:26.068  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.071  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.071  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.072  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:27:26.072  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.074  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.075  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.075  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.076  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.077  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:27:26.079  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.079  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.080  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.080  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.088  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.088  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.092  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.092  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.093  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.093  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:27:26.097  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.099  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.099  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.100  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.104  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.104  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:27:26.110  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.112  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.113  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.114  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.114  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.117  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.120  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.120  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.124  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.125  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.202  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:26.203  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:26.272  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:27.666  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:27:27.700  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:27:27.707  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:27:27.820  INFO 592 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:27:27.828  INFO 592 --- [main] com.yanda.Application                    : Started Application in 16.982 seconds (JVM running for 17.418)
2018-07-08 09:27:59.808  INFO 592 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:27:59.808  INFO 592 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:27:59.842  INFO 592 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-07-08 09:35:15.131  INFO 11268 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11268 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:35:15.133 DEBUG 11268 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:35:15.133  INFO 11268 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:35:15.350  INFO 11268 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:35:15 CST 2018]; root of context hierarchy
2018-07-08 09:35:16.913  INFO 11268 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:35:17.438  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.438  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.444  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:35:17.472  WARN 11268 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:35:18.292  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e34a172e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.639  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$fe29af78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.667  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.670  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$2c5c4d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:24.335  INFO 11268 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:35:24.358  INFO 11268 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:35:24.361  INFO 11268 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:35:24.569  INFO 11268 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:35:24.570  INFO 11268 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9223 ms
2018-07-08 09:35:24.978  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:35:24.979  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:35:27.004  INFO 11268 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:35:29.810  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:35:15 CST 2018]; root of context hierarchy
2018-07-08 09:35:29.931  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:29.934  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.937  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:35:29.938  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:35:29.938  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:35:29.939  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.939  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:29.942  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.943  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.943  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.944  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.944  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.945  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.948  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.951  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:35:29.952  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:35:29.952  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.955  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.958  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.958  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:35:29.962  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.962  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.965  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:35:29.969  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.969  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.972  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.973  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.973  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.974  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.975  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.976  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:35:29.976  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:35:29.977  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.978  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.979  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.979  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.982  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.982  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:35:29.983  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.983  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.985  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.985  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.990  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.991  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:35:29.992  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.993  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.993  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.996  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:35:29.997  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.997  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.999  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.999  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:30.002  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:30.003  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:30.082  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:30.082  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:30.161  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:31.555  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:35:31.559  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:35:31.568  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:35:31.684  INFO 11268 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:35:31.691  INFO 11268 --- [main] com.yanda.Application                    : Started Application in 16.83 seconds (JVM running for 17.128)
2018-07-08 09:36:06.105  INFO 11268 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:36:06.105  INFO 11268 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:36:06.153  INFO 11268 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-08 09:36:20.619  INFO 11268 --- [http-nio-8080-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 09:36:21.174 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, create_time = ?, product_order = ? 
2018-07-08 09:36:21.206 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==> Parameters: 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 150(BigDecimal), 2018-07-08 09:36:20.245(Timestamp), 3(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 150(BigDecimal), 2018-07-08 09:36:20.245(Timestamp), 3(Integer)
2018-07-08 09:36:21.232 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 09:36:21.301 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-08 09:36:21.301 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 09:36:21.344 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 09:38:20.522 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 09:38:20.526 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==> Parameters: 两月卡(String), 2(Integer), 2(Integer), 50(BigDecimal), 120(BigDecimal), vipCard(String), 2018-07-08 09:38:20.243(Timestamp), 4(Integer), 两月卡(String), 2(Integer), 2(Integer), 50(BigDecimal), 120(BigDecimal), vipCard(String), 2018-07-08 09:38:20.243(Timestamp), 4(Integer)
2018-07-08 09:38:20.552 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 09:38:20.629 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-08 09:38:20.629 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 09:38:20.657 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 09:41:31.228  INFO 7396 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7396 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:41:31.234 DEBUG 7396 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:41:31.234  INFO 7396 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:41:31.467  INFO 7396 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 09:41:31 CST 2018]; root of context hierarchy
2018-07-08 09:41:32.718  INFO 7396 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.289  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.289  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:41:33.328  WARN 7396 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:41:34.264  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$613bbced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.674  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$7c1b5537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.702  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.706  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$aa4df30b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:40.349  INFO 7396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:41:40.363  INFO 7396 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:41:40.364  INFO 7396 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:41:40.501  INFO 7396 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:41:40.501  INFO 7396 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9038 ms
2018-07-08 09:41:40.775  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:41:40.777  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:41:42.491  INFO 7396 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:41:45.975  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 09:41:31 CST 2018]; root of context hierarchy
2018-07-08 09:41:46.127  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.129  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.130  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:41:46.131  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.132  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:41:46.134  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:41:46.134  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:41:46.135  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:41:46.135  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.136  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.138  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.139  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.141  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.145  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:41:46.145  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:41:46.146  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.146  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.149  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.149  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:41:46.150  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:41:46.154  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.154  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.155  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:41:46.156  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.156  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.157  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.157  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.158  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.160  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.160  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.161  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.162  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:41:46.164  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.165  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.167  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.167  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.168  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.169  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.169  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.173  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.174  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.176  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.179  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.181  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.182  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:41:46.183  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:41:46.184  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.185  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.186  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.187  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.192  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.193  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:41:46.194  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.194  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:41:46.195  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.196  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:41:46.196  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.198  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.199  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.199  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.200  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.200  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.202  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.203  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.204  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.205  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.206  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:41:46.208  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.208  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.209  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.211  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:41:46.212  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.212  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.214  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.214  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.215  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.219  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.220  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.343  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:46.343  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:46.453  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:48.675  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:41:48.678  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:41:48.687  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:41:48.830  INFO 7396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:41:48.838  INFO 7396 --- [main] com.yanda.Application                    : Started Application in 17.899 seconds (JVM running for 18.392)
2018-07-08 09:49:51.277  INFO 7396 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:49:51.277  INFO 7396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:49:51.310  INFO 7396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-07-08 10:01:32.170  INFO 7396 --- [http-nio-8080-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 10:01:32.798 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:01:32.848 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:01:32.898 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:01:33.050  INFO 7396 --- [http-nio-8080-exec-10] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:01:33.051 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:01:33.052 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1434(Long)
2018-07-08 10:01:33.084 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:01:33.084 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====> Parameters: 3997(Long)
2018-07-08 10:01:33.113 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:01:33.116 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:08:36.125 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:08:36.127 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:08:36.156 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:10:00.631 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:10:00.631 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:10:00.657 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:19:26.281 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:19:26.282 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:19:26.313 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:19:44.171 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:19:44.172 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:19:44.200 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:21:17.597 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:21:17.597 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:21:17.628 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:21:58.649 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 10:21:58.650 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1434(Long), 38(Long)
2018-07-08 10:21:58.677 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-08 10:21:58.682 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-08 10:21:58.683 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1434(Long), 2018-07-08 10:21:58.465(Timestamp), 0(Integer)
2018-07-08 10:21:58.724 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-08 10:28:12.351 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:28:12.353 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:28:12.376 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:31:22.592  INFO 7396 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:31:22.664 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:31:22.664 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:31:22.690 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:31:22.692 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:31:22.693 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:31:22.717 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:31:28.520 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:31:28.521 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:31:28.543 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:08.912 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:32:08.912 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:32:08.933 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:52.663  INFO 7396 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:32:52.671 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:32:52.672 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:32:52.695 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:32:52.697 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:32:52.699 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:32:52.726 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:32:56.726 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:32:56.728 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:32:56.755 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:56.902  INFO 7396 --- [http-nio-8080-exec-1] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:32:56.902 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:32:56.903 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1434(Long)
2018-07-08 10:32:56.925 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:32:56.925 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====> Parameters: 3997(Long)
2018-07-08 10:32:56.947 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:32:56.948 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:33:47.580 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:47.581 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 6(Integer)
2018-07-08 10:33:47.603 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:47.640 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:47.641 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:47.663 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:33:50.278 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:50.279 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 1(Integer)
2018-07-08 10:33:50.302 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:50.348 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:50.349 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:50.372 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:33:55.719 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:55.721 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 4(Integer)
2018-07-08 10:33:55.754 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:55.807 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:55.808 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:55.833 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:34:01.043  INFO 7396 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:34:01.050 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:34:01.051 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:34:01.073 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:34:01.074 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:34:01.075 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:34:01.100 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:34:04.982 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:34:04.983 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:34:05.005 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:34:05.130  INFO 7396 --- [http-nio-8080-exec-10] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:34:05.131 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:34:05.132 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1435(Long)
2018-07-08 10:34:05.156 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:34:05.156 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====> Parameters: 4000(Long)
2018-07-08 10:34:05.179 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:34:05.180 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:35:11.170 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:35:11.170 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:35:11.193 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:35:31.449 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:35:31.452 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : ==> Parameters: 11(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:35:31.161(Timestamp), 1(Integer), 11(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:35:31.161(Timestamp), 1(Integer)
2018-07-08 10:35:31.479 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:35:31.531 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:35:31.532 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:35:31.555 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:35:41.484 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:35:41.484 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:35:41.507 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:39:19.454 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:39:19.456 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 7(Integer)
2018-07-08 10:39:19.479 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:39:19.528 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:39:19.529 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:39:19.550 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:39:46.390 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:39:46.390 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:39:46.412 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:40:27.566 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:27.567 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==> Parameters: 1(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:40:27.306(Timestamp), 1(Integer), 1(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:40:27.306(Timestamp), 1(Integer)
2018-07-08 10:40:27.591 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:27.650 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:27.651 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:27.675 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:40:33.857 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:33.861 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==> Parameters: 2(String), 1(Integer), 2(Integer), 2(BigDecimal), 2(BigDecimal), vipCard(String), 2018-07-08 10:40:33.59(Timestamp), 2(Integer), 2(String), 1(Integer), 2(Integer), 2(BigDecimal), 2(BigDecimal), vipCard(String), 2018-07-08 10:40:33.59(Timestamp), 2(Integer)
2018-07-08 10:40:33.892 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:33.945 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:33.946 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:33.968 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:40:39.437 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:39.439 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : ==> Parameters: 3(String), 1(Integer), 3(Integer), 3(BigDecimal), 3(BigDecimal), vipCard(String), 2018-07-08 10:40:39.174(Timestamp), 3(Integer), 3(String), 1(Integer), 3(Integer), 3(BigDecimal), 3(BigDecimal), vipCard(String), 2018-07-08 10:40:39.174(Timestamp), 3(Integer)
2018-07-08 10:40:39.462 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:39.506 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:39.506 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:39.528 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 10:40:46.556 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:46.561 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : ==> Parameters: 4(String), 1(Integer), 4(Integer), 4(BigDecimal), 4(BigDecimal), vipCard(String), 2018-07-08 10:40:46.286(Timestamp), 4(Integer), 4(String), 1(Integer), 4(Integer), 4(BigDecimal), 4(BigDecimal), vipCard(String), 2018-07-08 10:40:46.286(Timestamp), 4(Integer)
2018-07-08 10:40:46.584 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:46.636 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:46.637 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:46.659 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : <==      Total: 7
2018-07-08 10:40:55.195 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:40:55.196 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:40:55.217 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:41:47.631 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:47.631 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 8(Integer)
2018-07-08 10:41:47.654 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:47.686 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:47.686 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:47.708 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 10:41:49.674 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:49.674 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 9(Integer)
2018-07-08 10:41:49.698 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:49.747 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:49.748 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:49.770 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:41:56.628 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:56.628 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 10(Integer)
2018-07-08 10:41:56.650 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:56.693 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:56.693 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:56.715 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:42:00.411 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:42:00.412 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 11(Integer)
2018-07-08 10:42:00.435 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:42:00.476 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:42:00.477 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:42:00.500 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:42:15.778 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:42:15.779 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:42:15.801 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:46:42.576  INFO 17136 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17136 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 11:46:42.587 DEBUG 17136 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 11:46:42.587  INFO 17136 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 11:46:43.030  INFO 17136 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 11:46:43 CST 2018]; root of context hierarchy
2018-07-08 11:46:45.115  INFO 17136 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 11:46:45.713  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.717  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.718  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.721  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 11:46:45.756  WARN 17136 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 11:46:46.949  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$553ba73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.354  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$203352bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.386  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.390  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$4e65f091] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:53.079  INFO 17136 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 11:46:53.095  INFO 17136 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 11:46:53.096  INFO 17136 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 11:46:53.231  INFO 17136 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 11:46:53.232  INFO 17136 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10209 ms
2018-07-08 11:46:53.615  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 11:46:53.616  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 11:46:53.617  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 11:46:53.617  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 11:46:53.618  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 11:46:53.618  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 11:46:56.786  INFO 17136 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 11:47:00.495  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 11:46:43 CST 2018]; root of context hierarchy
2018-07-08 11:47:00.685  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 11:47:00.687  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.688  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 11:47:00.689  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.690  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.693  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 11:47:00.694  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 11:47:00.695  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 11:47:00.696  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.697  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.699  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.701  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.702  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.703  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.704  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.704  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.708  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 11:47:00.709  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 11:47:00.710  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.710  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.711  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.711  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.712  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.714  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 11:47:00.714  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 11:47:00.716  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.720  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.720  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.721  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 11:47:00.722  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.723  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.724  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.724  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.725  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.726  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.727  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.727  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.729  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 11:47:00.732  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.733  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.735  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.736  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.737  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 11:47:00.737  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.738  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.738  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.739  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.740  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.746  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.746  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.747  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.747  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.748  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.748  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.751  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.752  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.753  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.754  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.756  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.756  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 11:47:00.757  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 11:47:00.758  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.759  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.759  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.760  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.764  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.764  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.767  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.767  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.768  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.768  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.771  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 11:47:00.771  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.772  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.772  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.773  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.774  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.775  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.775  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.777  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 11:47:00.778  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.778  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.779  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.781  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.782  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.786  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.787  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.908  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:00.908  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:01.021  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:03.418  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 11:47:03.422  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 11:47:03.431  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 11:47:03.576  INFO 17136 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 11:47:03.587  INFO 17136 --- [main] com.yanda.Application                    : Started Application in 21.318 seconds (JVM running for 21.904)
2018-07-08 11:47:12.984  INFO 17136 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 11:47:12.985  INFO 17136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 11:47:13.069  INFO 17136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2018-07-08 11:47:18.881  INFO 17136 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 11:47:19.604 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:47:19.654 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:47:19.703 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:48:24.773 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:48:24.773 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:48:24.799 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:58:40.860 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:58:40.861 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:58:40.890 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:58:49.231 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:58:49.232 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:58:49.255 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:59:51.935 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:59:51.936 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:59:51.960 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:00:00.002  INFO 17136 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-08 12:00:00]
2018-07-08 12:00:58.606 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:00:58.606 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:00:58.629 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:02:31.574 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:02:31.575 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:02:31.599 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:02:39.719 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:02:39.719 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:02:39.742 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:02:40.695  INFO 17136 --- [http-nio-8080-exec-6] wxpay java sdk                           : report worker num: 6
2018-07-08 12:02:40.698  INFO 17136 --- [http-nio-8080-exec-6] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6kpdOAn67ATEbg0rytybeWjaoIrsg3UL,1531022560,656,api.mch.weixin.qq.com,true,6000,8000,0,0,0,214AA326E6269CC373D43BAADA6A5B441C240A1E227F871BD3CEDD5DE96A399D
2018-07-08 12:02:40.698  INFO 17136 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6kpdOAn67ATEbg0rytybeWjaoIrsg3UL,1531022560,656,api.mch.weixin.qq.com,true,6000,8000,0,0,0,214AA326E6269CC373D43BAADA6A5B441C240A1E227F871BD3CEDD5DE96A399D
2018-07-08 12:02:40.699  INFO 17136 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:03:47.515 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update id = ?, name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 12:03:47.522 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==> Parameters: 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 0.01(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer), 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 0.01(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer)
2018-07-08 12:03:47.547 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : <==    Updates: 2
2018-07-08 12:03:47.600 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 12:03:47.603 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 12:03:47.628 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 12:04:02.318 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:04:02.320 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:04:02.345 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:04:24.760 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update id = ?, name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 12:04:24.764 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==> Parameters: 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 0.01(BigDecimal), 150(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer), 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 0.01(BigDecimal), 150(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer)
2018-07-08 12:04:24.789 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : <==    Updates: 2
2018-07-08 12:04:24.842 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 12:04:24.844 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 12:04:24.869 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 12:04:35.019 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:04:35.020 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:04:35.045 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:04:42.267 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:04:42.268 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:04:42.294 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:04:42.641  INFO 17136 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,iTzFMDVu9sN8oY08n8HbGINuiyE3WAfw,1531022682,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,F29B3DC5CEB596720C683438C29BB23749BB71BAF3F3FCBFEA55A979DB659029
2018-07-08 12:04:42.641  INFO 17136 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,iTzFMDVu9sN8oY08n8HbGINuiyE3WAfw,1531022682,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,F29B3DC5CEB596720C683438C29BB23749BB71BAF3F3FCBFEA55A979DB659029
2018-07-08 12:04:42.642  INFO 17136 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:06:05.284  INFO 17136 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Azueh32gpk9jnSH95gLU73UIY96ZjyVO,1531022765,259,api.mch.weixin.qq.com,true,6000,8000,0,0,0,CAEB4B6EB5851FAFB76217B9A1638A62012BE03A941BB1B2528D6BE7FAE548F1
2018-07-08 12:06:05.285  INFO 17136 --- [pool-5-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Azueh32gpk9jnSH95gLU73UIY96ZjyVO,1531022765,259,api.mch.weixin.qq.com,true,6000,8000,0,0,0,CAEB4B6EB5851FAFB76217B9A1638A62012BE03A941BB1B2528D6BE7FAE548F1
2018-07-08 12:06:05.286  INFO 17136 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:08:12.619  INFO 18672 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18672 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:08:12.625 DEBUG 18672 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:08:12.625  INFO 18672 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:08:12.885  INFO 18672 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:08:12 CST 2018]; root of context hierarchy
2018-07-08 12:08:14.306  INFO 18672 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:08:14.917  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.920  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.920  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.921  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.921  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.922  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.922  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.924  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:08:14.958  WARN 18672 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:08:16.090  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$764bfacb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.490  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$912b9315] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.525  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.558  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bf5e30e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:22.411  INFO 18672 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:08:22.438  INFO 18672 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:08:22.440  INFO 18672 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:08:22.682  INFO 18672 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:08:22.683  INFO 18672 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9803 ms
2018-07-08 12:08:23.169  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:08:23.170  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:08:23.171  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:08:23.171  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:08:23.172  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:08:23.172  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:08:25.753  INFO 18672 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:08:29.305  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:08:12 CST 2018]; root of context hierarchy
2018-07-08 12:08:29.485  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.487  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:08:29.488  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.489  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:08:29.489  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.492  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:08:29.493  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:08:29.494  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:08:29.494  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.495  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.500  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.501  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.501  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.502  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.502  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.503  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.508  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:08:29.509  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:08:29.509  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.511  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.513  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.513  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:08:29.514  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:08:29.519  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.520  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.521  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:08:29.522  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.522  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.523  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.523  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.524  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.525  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.525  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.526  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.526  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:08:29.529  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.529  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.530  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.531  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:08:29.531  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.533  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.534  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.534  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.535  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.536  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.540  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.541  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.542  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.544  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.544  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.545  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.547  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.548  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.548  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.549  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.551  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.551  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:08:29.552  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:08:29.552  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.553  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.554  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.554  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.557  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.559  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.559  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.560  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.560  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.561  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:08:29.561  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.562  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.562  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:08:29.564  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:08:29.565  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.566  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.566  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.567  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.569  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.569  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.570  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.573  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:08:29.574  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.575  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.575  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.577  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.578  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:08:29.581  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.581  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.699  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:29.700  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:29.815  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:32.094  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:08:32.098  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:08:32.108  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:08:32.254  INFO 18672 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:08:32.262  INFO 18672 --- [main] com.yanda.Application                    : Started Application in 19.949 seconds (JVM running for 20.446)
2018-07-08 12:08:56.838  INFO 18672 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:08:56.838  INFO 18672 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:08:56.912  INFO 18672 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-08 12:09:03.202  INFO 18672 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:09:03.951 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:09:03.998 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:09:04.041 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:09:34.235  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:09:34.244  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,WT2GteYoJvOFWjxez2NVsEC4mSz2FZAz,1531022974,739,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4586175E700CE5AB39848F6D78A3AE60F83410CBA52992D18631431A55A35C14
2018-07-08 12:09:34.245  INFO 18672 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,WT2GteYoJvOFWjxez2NVsEC4mSz2FZAz,1531022974,739,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4586175E700CE5AB39848F6D78A3AE60F83410CBA52992D18631431A55A35C14
2018-07-08 12:09:34.245  INFO 18672 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:10:33.012 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:10:33.012 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:10:33.035 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:10:55.728  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,HeIniTLzTC4Y7pv4QfWekc7Ke7QOU3zh,1531023055,276,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6213F5C6F62C18D395F744ED0285292210DB96CE2C3C8303AF405E6837B57583
2018-07-08 12:10:55.729  INFO 18672 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,HeIniTLzTC4Y7pv4QfWekc7Ke7QOU3zh,1531023055,276,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6213F5C6F62C18D395F744ED0285292210DB96CE2C3C8303AF405E6837B57583
2018-07-08 12:10:55.729  INFO 18672 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:12:22.899 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:12:22.900 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:12:22.925 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:12:28.642  INFO 18672 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Cd03UT0ExRqfSIpwjeMemNfsva1wN5IB,1531023148,384,api.mch.weixin.qq.com,true,6000,8000,0,0,0,A21336A8C0EE9910E14C0FC0FDBC3F6AD473F359EC4B9BC26428A48DA23200E1
2018-07-08 12:12:28.643  INFO 18672 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Cd03UT0ExRqfSIpwjeMemNfsva1wN5IB,1531023148,384,api.mch.weixin.qq.com,true,6000,8000,0,0,0,A21336A8C0EE9910E14C0FC0FDBC3F6AD473F359EC4B9BC26428A48DA23200E1
2018-07-08 12:12:28.644  INFO 18672 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:12:45.353 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:12:45.353 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:12:45.378 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:12:46.416 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:12:46.416 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:12:46.439 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-08 12:12:46.442 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-08 12:12:46.443 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:12:46.295(Timestamp), 0(Integer)
2018-07-08 12:12:46.468 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-08 12:14:44.197 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:14:44.197 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:14:44.221 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:14:48.728  INFO 18672 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,07hngWikps5UhRiOvvbcKBLGNlGHn83T,1531023288,422,api.mch.weixin.qq.com,true,6000,8000,0,0,0,B5AFA52941E4976AB4D34AA660508BB3B9CCACC3561EDC7F9CB41E82B9E64DE5
2018-07-08 12:14:48.729  INFO 18672 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,07hngWikps5UhRiOvvbcKBLGNlGHn83T,1531023288,422,api.mch.weixin.qq.com,true,6000,8000,0,0,0,B5AFA52941E4976AB4D34AA660508BB3B9CCACC3561EDC7F9CB41E82B9E64DE5
2018-07-08 12:14:48.729  INFO 18672 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:15:09.705 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:15:09.710 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:15:09.761 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:18:17.795  INFO 7492 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7492 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:18:17.801 DEBUG 7492 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:18:17.801  INFO 7492 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:18:18.044  INFO 7492 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:18:18 CST 2018]; root of context hierarchy
2018-07-08 12:18:20.168  INFO 7492 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:18:20.745  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.752  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:18:20.789  WARN 7492 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:18:21.777  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$28e6b7f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.157  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$43c65042] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.195  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.198  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$71f8ee16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:27.894  INFO 7492 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:18:27.912  INFO 7492 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:18:27.913  INFO 7492 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:18:28.049  INFO 7492 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:18:28.050  INFO 7492 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10010 ms
2018-07-08 12:18:28.348  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:18:28.348  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:18:30.422  INFO 7492 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:18:33.884  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:18:18 CST 2018]; root of context hierarchy
2018-07-08 12:18:34.053  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.055  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.056  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.057  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:18:34.058  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:18:34.062  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:18:34.063  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:18:34.063  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:18:34.064  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.065  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.067  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.068  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.069  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.070  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.070  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.071  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.075  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:18:34.076  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:18:34.077  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.078  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.078  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.079  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.079  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.081  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:18:34.081  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:18:34.082  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.085  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.086  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.087  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:18:34.088  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.088  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.089  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.089  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.090  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.091  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.092  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.093  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.094  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:18:34.097  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.097  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.098  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.098  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.100  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.101  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.101  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.106  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.108  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.109  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.109  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.110  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.110  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.113  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.113  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.114  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.115  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.117  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.118  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:18:34.118  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:18:34.119  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.121  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.121  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.122  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.128  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.129  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:18:34.129  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.130  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.130  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.131  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.131  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.132  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.132  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.133  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.133  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:18:34.134  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:18:34.135  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.136  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.137  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.137  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.138  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:18:34.139  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.140  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.140  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.144  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.147  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.147  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:18:34.150  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.150  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.267  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:34.267  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:34.383  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:36.630  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:18:36.633  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:18:36.644  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:18:36.786  INFO 7492 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:18:36.795  INFO 7492 --- [main] com.yanda.Application                    : Started Application in 19.3 seconds (JVM running for 19.767)
2018-07-08 12:18:42.773  INFO 7492 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:18:42.774  INFO 7492 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:18:42.836  INFO 7492 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-08 12:18:50.988  INFO 7492 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:18:51.725 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:18:51.779 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:18:51.826 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:19:09.328  INFO 7492 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:19:09.338  INFO 7492 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,tR91c5UuUHLtn5ltoMqAffLj0e3YAHGa,1531023549,795,api.mch.weixin.qq.com,true,6000,8000,0,0,0,621F2F65241D3AF18709FAD736D088C2B3680B46571361FEAA2428646AB2FC3C
2018-07-08 12:19:09.338  INFO 7492 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,tR91c5UuUHLtn5ltoMqAffLj0e3YAHGa,1531023549,795,api.mch.weixin.qq.com,true,6000,8000,0,0,0,621F2F65241D3AF18709FAD736D088C2B3680B46571361FEAA2428646AB2FC3C
2018-07-08 12:19:09.338  INFO 7492 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:19:29.459 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:19:29.460 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:19:29.491 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:22:54.587  INFO 7060 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7060 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:22:54.595 DEBUG 7060 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:22:54.596  INFO 7060 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:22:55.049  INFO 7060 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:22:55 CST 2018]; root of context hierarchy
2018-07-08 12:22:57.189  INFO 7060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:22:57.825  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.830  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.830  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.831  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:22:57.869  WARN 7060 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:22:58.915  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8eabe8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.330  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e3ca56d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.367  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.371  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$11fcf4ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:23:05.121  INFO 7060 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:23:05.139  INFO 7060 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:23:05.140  INFO 7060 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:23:05.279  INFO 7060 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:23:05.279  INFO 7060 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10238 ms
2018-07-08 12:23:05.589  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:23:05.590  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:23:05.590  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:23:07.406  INFO 7060 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:23:11.117  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:22:55 CST 2018]; root of context hierarchy
2018-07-08 12:23:11.289  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.291  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:23:11.292  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.293  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.294  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:23:11.298  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:23:11.299  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:23:11.300  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:23:11.301  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.302  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.305  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.306  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.306  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.307  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.307  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.308  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.314  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:23:11.315  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:23:11.316  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.317  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.317  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.318  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.318  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.320  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:23:11.321  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:23:11.321  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.324  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.324  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.325  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:23:11.325  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.326  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.326  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.327  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.327  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.330  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:23:11.333  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.334  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.334  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.335  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.335  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.337  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.337  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.342  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.342  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.343  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.343  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.344  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.344  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.346  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.347  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.347  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.349  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.351  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.351  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:23:11.352  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:23:11.352  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.353  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.354  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.354  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.362  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:23:11.363  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.363  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:23:11.366  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.367  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.367  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.368  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.369  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:23:11.371  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.372  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.372  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.376  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:23:11.376  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.377  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.378  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.379  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.381  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:23:11.384  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.384  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.552  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:11.553  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:11.666  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:13.946  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:23:13.950  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:23:13.961  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:23:14.119  INFO 7060 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:23:14.129  INFO 7060 --- [main] com.yanda.Application                    : Started Application in 20.162 seconds (JVM running for 20.632)
2018-07-08 12:23:50.675  INFO 7060 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:23:50.676  INFO 7060 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:23:50.745  INFO 7060 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2018-07-08 12:24:08.390  INFO 7060 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:24:09.123 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:24:09.166 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:24:09.208 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:24:26.782 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:24:26.783 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:24:26.807 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:24:27.649  INFO 7060 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:24:27.653  INFO 7060 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,oOxwKDmk2S9zuenfk7GJ3O2MJDnlkHm4,1531023867,758,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4C1C275FAEB2314DD4DAE5335F23DF5B864A2FE0E9A3E40188746E7862EC43CA
2018-07-08 12:24:27.653  INFO 7060 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,oOxwKDmk2S9zuenfk7GJ3O2MJDnlkHm4,1531023867,758,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4C1C275FAEB2314DD4DAE5335F23DF5B864A2FE0E9A3E40188746E7862EC43CA
2018-07-08 12:24:27.653  INFO 7060 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:24:44.420 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:24:44.420 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:24:44.444 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:24:44.525 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:24:44.528 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 182(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-08 12:24:44.444(Timestamp), 2022-04-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 182(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-08 12:24:44.444(Timestamp), 2022-04-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:24:44.552 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-08 12:24:44.565 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:24:44.565 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:24:44.591 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:24:44.592 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:24:44.637 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:24:44.637 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:24:49.351 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:24:49.351 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:24:49.374 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:24:49.378 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-08 12:24:49.379 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:24:49.224(Timestamp), 0(Integer), 497(Long)
2018-07-08 12:24:49.403 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-08 12:25:23.907  INFO 7060 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:25:23.970 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:25:23.971 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:25:23.993 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:25:23.997 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:25:23.998 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:25:24.026 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:30:10.057 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:30:10.058 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:30:10.092 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:36:24.476 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-08 12:36:24.478 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1009(Integer)
2018-07-08 12:36:24.504 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 12:36:45.869  INFO 7060 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:36:45.873 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:36:45.874 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:36:45.897 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:36:45.899 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:36:45.900 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:36:45.926 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:37:12.307 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-08 12:37:12.308 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-08 12:37:12.344 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-08 12:37:12.385 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-08 12:37:12.386 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-08 12:37:12.411 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:37:12.413 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:37:12.413 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:37:12.440 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:37:12.440 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:37:12.469 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-08 12:37:12.470 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:37:12.471 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:37:12.496 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:37:12.497 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:37:20.652  INFO 7060 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,L7RRd9wWFxkxjyjVovo3cYJEsKUVSsNT,1531024640,392,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D02919C7488A645E2F38E0C4287B079B1276413C2E87E85A4E43520128B5639
2018-07-08 12:37:20.653  INFO 7060 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,L7RRd9wWFxkxjyjVovo3cYJEsKUVSsNT,1531024640,392,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D02919C7488A645E2F38E0C4287B079B1276413C2E87E85A4E43520128B5639
2018-07-08 12:37:20.653  INFO 7060 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:37:34.303 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:37:34.305 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:37:34.329 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : <==      Total: 0
2018-07-08 12:37:34.417 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-08 12:37:34.418 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-08 12:37:34.442 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:37:34.444 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-08 12:37:34.446 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-08 12:37:34.471 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 12:37:34.479 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_num = ?, card_password = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:37:34.481 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : ==> Parameters: 20180708101915(String), 123456(String), 184(Integer), 2018-07-08 12:37:34.33(Timestamp), 2018-07-08 12:37:34.33(Timestamp), 2019-01-08 12:37:34.33(Timestamp), 38(Integer), 克劳德(String), 20180708101915(String), 123456(String), 184(Integer), 2018-07-08 12:37:34.33(Timestamp), 2018-07-08 12:37:34.33(Timestamp), 2019-01-08 12:37:34.33(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : <==    Updates: 1
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:37:34.532 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:37:34.533 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:37:34.558 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:37:34.560 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:37:34.560 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:37:34.584 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:37:34.584 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:40:32.353  INFO 7060 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:40:32.382 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:40:32.383 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:40:32.407 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:40:32.408 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:40:32.409 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:40:32.437 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:46:05.029  INFO 16808 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16808 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:46:05.034 DEBUG 16808 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:46:05.034  INFO 16808 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:46:05.280  INFO 16808 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:46:05 CST 2018]; root of context hierarchy
2018-07-08 12:46:06.945  INFO 16808 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.568  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.568  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:46:07.609  WARN 16808 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:46:08.598  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69b8ec8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.951  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$849884d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.984  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.988  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b2cb22ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:14.603  INFO 16808 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:46:14.618  INFO 16808 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:46:14.620  INFO 16808 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:46:14.745  INFO 16808 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:46:14.745  INFO 16808 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9469 ms
2018-07-08 12:46:15.001  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:46:15.001  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:46:15.003  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:46:17.454  INFO 16808 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:46:20.954  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:46:05 CST 2018]; root of context hierarchy
2018-07-08 12:46:21.106  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.109  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.110  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:46:21.111  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.112  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:46:21.114  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:46:21.115  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:46:21.115  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:46:21.116  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.116  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.118  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.119  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.119  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.125  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:46:21.126  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:46:21.126  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.127  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.127  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.128  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.128  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.129  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:46:21.130  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:46:21.130  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.133  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.133  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.134  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:46:21.134  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.136  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.136  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.137  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.138  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.139  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.144  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.144  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:46:21.146  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.146  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.151  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.151  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.152  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.152  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.153  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.153  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.155  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.155  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.156  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.156  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.159  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.160  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:46:21.161  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:46:21.162  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.163  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.164  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.165  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.170  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.171  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.173  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.174  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.175  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.175  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:46:21.176  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:46:21.177  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.177  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.179  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:46:21.180  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.180  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.181  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.181  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.182  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.183  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.183  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.187  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:46:21.188  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.188  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.190  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.190  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:46:21.191  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.195  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.195  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.318  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:21.318  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:21.431  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:23.799  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:46:23.803  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:46:23.814  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:46:23.957  INFO 16808 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:46:23.966  INFO 16808 --- [main] com.yanda.Application                    : Started Application in 19.239 seconds (JVM running for 19.747)
2018-07-08 12:46:41.412  INFO 16808 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:46:41.412  INFO 16808 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:46:41.457  INFO 16808 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-08 12:46:43.427  INFO 16808 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:46:43.764  INFO 16808 --- [http-nio-8080-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:46:44.693 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:46:44.741 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:46:44.790 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:46:44.794 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:46:44.795 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:46:44.834 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:47:10.899 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:47:10.899 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:47:10.927 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:47:27.135  INFO 16808 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-08 12:47:27.139  INFO 16808 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6SkJbdG6kuCxGSKeQqz3IfvaNQaO88nz,1531025247,570,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E780D22F177D4BB4BC8FBF852CE96279B73980AB1DF690A2298D721EDDBCC286
2018-07-08 12:47:27.140  INFO 16808 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6SkJbdG6kuCxGSKeQqz3IfvaNQaO88nz,1531025247,570,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E780D22F177D4BB4BC8FBF852CE96279B73980AB1DF690A2298D721EDDBCC286
2018-07-08 12:47:27.140  INFO 16808 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:47:43.950 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:47:43.951 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:47:43.981 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:47:44.070 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:47:44.072 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==> Parameters: 1019(Integer), 20180708101915(String), 123456(String), 1(Integer), 365(Integer), 2018-07-08 12:37:34.0(Timestamp), 2018-07-08 12:47:43.981(Timestamp), 2019-07-08 12:37:34.0(Timestamp), 38(Integer), 克劳德(String), 1019(Integer), 20180708101915(String), 123456(String), 1(Integer), 365(Integer), 2018-07-08 12:37:34.0(Timestamp), 2018-07-08 12:47:43.981(Timestamp), 2019-07-08 12:37:34.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:47:44.100 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-08 12:47:44.108 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:47:44.108 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:47:44.137 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:47:44.137 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:47:44.190 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:47:44.191 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:47:45.356  INFO 16808 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,gfsBKm5xFTNkFpkQ68uYfNtFJNJ1X6V7,1531025265,1057,api.mch.weixin.qq.com,true,6000,8000,0,0,0,FC24D26053822EE88B18E011E6AAEA216ACC81245D04A55E2CCB89D84C843FD6
2018-07-08 12:47:45.357  INFO 16808 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,gfsBKm5xFTNkFpkQ68uYfNtFJNJ1X6V7,1531025265,1057,api.mch.weixin.qq.com,true,6000,8000,0,0,0,FC24D26053822EE88B18E011E6AAEA216ACC81245D04A55E2CCB89D84C843FD6
2018-07-08 12:47:45.357  INFO 16808 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:47:49.431 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:47:49.432 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:47:49.458 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:47:49.461 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-08 12:47:49.462 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:47:49.297(Timestamp), 2000(Integer), 497(Long)
2018-07-08 12:47:49.489 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-08 23:35:07.407  INFO 20288 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20288 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 23:35:07.417 DEBUG 20288 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 23:35:07.418  INFO 20288 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 23:35:08.040  INFO 20288 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 23:35:08 CST 2018]; root of context hierarchy
2018-07-08 23:35:10.990  INFO 20288 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 23:35:11.833  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.834  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.834  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.835  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.835  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.836  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.836  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.836  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.837  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.837  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.837  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.837  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.838  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.839  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.839  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.839  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.840  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.841  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.841  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.842  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.843  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.843  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.843  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:35:11.844  WARN 20288 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 23:35:11.900  WARN 20288 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 23:35:13.133  INFO 20288 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0d6aa34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:35:13.698  INFO 20288 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$dbb6427e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:35:13.772  INFO 20288 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:35:13.778  INFO 20288 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9e8e052] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:35:19.796  INFO 20288 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 23:35:19.827  INFO 20288 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 23:35:19.829  INFO 20288 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 23:35:20.077  INFO 20288 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 23:35:20.078  INFO 20288 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12049 ms
2018-07-08 23:35:20.597  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 23:35:20.598  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 23:35:20.599  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 23:35:20.599  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 23:35:20.599  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 23:35:20.600  INFO 20288 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 23:35:31.327  INFO 20288 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 23:35:34.800  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 23:35:08 CST 2018]; root of context hierarchy
2018-07-08 23:35:34.977  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:34.980  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:34.981  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:35:34.983  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 23:35:34.984  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 23:35:34.986  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 23:35:34.987  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 23:35:34.987  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 23:35:34.988  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:35:34.988  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 23:35:34.990  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:34.991  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:34.991  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:34.992  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.389  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.390  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.394  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 23:35:35.395  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 23:35:35.396  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:35:35.396  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.397  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:35:35.397  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:35:35.398  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.400  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 23:35:35.401  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 23:35:35.402  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.405  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.406  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.839  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 23:35:35.840  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.840  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.841  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.841  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.842  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.843  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.843  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.843  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:35.844  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 23:35:35.848  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.849  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.849  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:35:35.850  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:35:36.315  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:35:36.315  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 23:35:36.315  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.316  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.316  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 23:35:36.317  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.321  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:35:36.322  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.322  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.322  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:35:36.323  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.323  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:35:36.325  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 23:35:36.325  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.929  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:36.930  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.932  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.932  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 23:35:36.933  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 23:35:36.933  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.935  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.935  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.936  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.940  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.941  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 23:35:36.942  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.942  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.943  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:36.943  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.921  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:35:37.921  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.922  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 23:35:37.922  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:35:37.923  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 23:35:37.924  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.926  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.927  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.928  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.928  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.930  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 23:35:37.932  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:35:37.932  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:35:37.933  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:37.936  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 23:35:38.995  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:38.996  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:35:38.996  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 23:35:38.997  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:35:38.998  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:38.999  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:38.999  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 23:35:39.000  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:35:39.005  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 23:35:39.005  INFO 20288 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:35:39.121  INFO 20288 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:35:39.122  INFO 20288 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:35:39.271  INFO 20288 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:35:41.693  INFO 20288 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 23:35:41.697  INFO 20288 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 23:35:41.708  INFO 20288 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 23:35:41.858  INFO 20288 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 23:35:41.868  INFO 20288 --- [main] com.yanda.Application                    : Started Application in 35.203 seconds (JVM running for 36.244)
2018-07-08 23:38:23.941  INFO 20288 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 23:38:23.942  INFO 20288 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 23:38:24.004  INFO 20288 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-08 23:38:25.391  INFO 20288 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 23:38:26.148 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-08 23:38:26.192 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-08 23:38:26.237 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 23:38:26.241 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 23:38:26.242 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-08 23:38:26.272 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 23:38:26.273 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-08 23:38:26.300 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-08 23:38:26.301 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 23:38:26.302 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-08 23:38:26.327 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-08 23:38:26.328 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 23:39:07.062 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-08 23:39:07.064 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-08 23:39:07.095 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 23:39:07.097 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 23:39:07.097 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-08 23:39:07.125 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 23:39:07.126 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-08 23:39:07.152 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-08 23:39:07.153 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 23:39:07.154 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-08 23:39:07.180 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-08 23:39:07.181 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 23:39:08.237 ERROR 20288 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-08 23:39:08.237 ERROR 20288 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-08 23:39:08.237 ERROR 20288 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-08 23:39:08.323 ERROR 20288 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-08 23:39:08.323 ERROR 20288 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-08 23:39:16.919  INFO 20288 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:39:17.024 DEBUG 20288 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:39:17.025 DEBUG 20288 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:39:17.052 DEBUG 20288 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:39:18.463 DEBUG 20288 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-08 23:39:18.464 DEBUG 20288 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-08 23:39:18.489 DEBUG 20288 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:39:40.954 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,exp_time,nick_name ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-08 23:39:40.956 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.V.insertSelective                : ==> Parameters: 20180708100015(String), 123456(String), 915(Integer), 2018-07-08 23:39:40.948(Timestamp), 2018-07-08 23:39:40.948(Timestamp), 2021-01-08 23:39:40.948(Timestamp), (String)
2018-07-08 23:39:40.986 DEBUG 20288 --- [http-nio-8080-exec-1] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-08 23:39:41.005  INFO 20288 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:39:41.007 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:39:41.008 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:39:41.033 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:39:41.038 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 23:39:41.040 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 23:39:41.066 DEBUG 20288 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 23:43:20.649  INFO 6336 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6336 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 23:43:20.655 DEBUG 6336 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 23:43:20.656  INFO 6336 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 23:43:21.200  INFO 6336 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 23:43:21 CST 2018]; root of context hierarchy
2018-07-08 23:43:24.286  INFO 6336 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 23:43:25.213  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.214  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.214  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.214  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.214  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.215  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.216  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.216  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.216  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.217  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.219  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.219  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.220  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.220  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.220  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.220  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.220  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.221  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.221  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.221  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.221  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.222  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.222  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 23:43:25.222  WARN 6336 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 23:43:25.268  WARN 6336 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 23:43:26.545  INFO 6336 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:43:26.989  INFO 6336 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a05e03e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:43:27.033  INFO 6336 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:43:27.036  INFO 6336 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ce90a1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 23:43:32.977  INFO 6336 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 23:43:33.008  INFO 6336 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 23:43:33.010  INFO 6336 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 23:43:33.280  INFO 6336 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 23:43:33.280  INFO 6336 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12088 ms
2018-07-08 23:43:33.792  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 23:43:33.794  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 23:43:33.795  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 23:43:33.795  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 23:43:33.796  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 23:43:33.796  INFO 6336 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 23:43:36.378  INFO 6336 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 23:43:39.924  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 23:43:21 CST 2018]; root of context hierarchy
2018-07-08 23:43:40.091  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.093  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 23:43:40.095  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.095  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 23:43:40.096  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:43:40.099  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 23:43:40.100  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 23:43:40.100  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 23:43:40.101  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.101  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:43:40.104  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.105  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.105  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.106  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.181  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.182  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.186  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 23:43:40.186  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 23:43:40.187  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:43:40.187  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.187  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:43:40.188  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:43:40.188  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.190  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 23:43:40.191  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 23:43:40.192  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.195  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.195  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.196  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 23:43:40.196  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.965  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.965  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.965  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.966  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.966  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.966  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.967  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.967  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 23:43:40.970  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.971  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.971  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:43:40.971  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:43:40.972  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:40.972  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.525  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 23:43:41.526  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 23:43:41.526  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.527  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 23:43:41.533  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:43:41.534  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.534  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.535  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:43:41.535  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:43:41.535  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.537  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 23:43:41.538  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:41.538  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:41.539  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.226  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.226  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 23:43:42.227  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 23:43:42.228  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.229  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.229  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.230  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.234  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.234  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 23:43:42.234  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.234  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.235  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.235  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.235  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:43:42.235  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.235  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 23:43:42.236  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.236  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 23:43:42.236  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:43:42.739  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.740  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.740  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.740  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.741  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 23:43:42.743  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:43:42.743  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 23:43:42.744  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:42.746  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 23:43:42.747  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:42.747  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 23:43:42.748  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 23:43:42.748  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 23:43:42.748  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:43.418  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 23:43:43.418  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:43.418  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 23:43:43.421  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 23:43:43.422  INFO 6336 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 23:43:43.516  INFO 6336 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:43:43.516  INFO 6336 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:43:43.619  INFO 6336 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 23:43:45.564  INFO 6336 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 23:43:45.567  INFO 6336 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 23:43:45.574  INFO 6336 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 23:43:45.727  INFO 6336 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 23:43:45.736  INFO 6336 --- [main] com.yanda.Application                    : Started Application in 25.861 seconds (JVM running for 26.788)
2018-07-08 23:45:36.779  INFO 6336 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 23:45:36.780  INFO 6336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 23:45:36.843  INFO 6336 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2018-07-08 23:45:37.176  INFO 6336 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:45:37.409  INFO 6336 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 23:45:38.259 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:45:38.306 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:45:38.351 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:45:38.355 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 23:45:38.356 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 23:45:38.383 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 23:45:43.686 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-08 23:45:43.687 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1020(Integer)
2018-07-08 23:45:43.712 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 23:45:43.760  INFO 6336 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:45:43.768 DEBUG 6336 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:45:43.769 DEBUG 6336 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:45:43.792 DEBUG 6336 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:45:45.079 DEBUG 6336 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-08 23:45:45.079 DEBUG 6336 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-08 23:45:45.102 DEBUG 6336 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:00.325 DEBUG 6336 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,exp_time,nick_name ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-08 23:46:00.327 DEBUG 6336 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==> Parameters: 20180708100015(String), 123456(String), 30(Integer), 2018-07-08 23:46:00.323(Timestamp), 2018-07-08 23:46:00.323(Timestamp), 2018-08-07 23:46:00.323(Timestamp), (String)
2018-07-08 23:46:00.352 DEBUG 6336 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-08 23:46:00.380  INFO 6336 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:46:00.382 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:46:00.383 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:46:00.407 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:00.408 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 23:46:00.408 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 23:46:00.432 DEBUG 6336 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 23:46:20.406 DEBUG 6336 --- [http-nio-8080-exec-7] c.y.m.g.V.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_vip_card_info SET card_num = ?,purchase_days = ?,update_time = ?,exp_time = ? WHERE card_id = ? 
2018-07-08 23:46:20.407 DEBUG 6336 --- [http-nio-8080-exec-7] c.y.m.g.V.updateByPrimaryKeySelective    : ==> Parameters: 20180708100015(String), 31(Integer), 2018-07-08 23:46:20.406(Timestamp), 2018-08-08 23:46:00.0(Timestamp), 1021(Integer)
2018-07-08 23:46:20.431 DEBUG 6336 --- [http-nio-8080-exec-7] c.y.m.g.V.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-08 23:46:20.450  INFO 6336 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:46:20.452 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:46:20.452 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:46:20.475 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:20.476 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 23:46:20.476 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 23:46:20.499 DEBUG 6336 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 23:46:38.362  INFO 6336 --- [http-nio-8080-exec-9] com.yanda.service.impl.UserServiceImpl   : 用户数据列表将从数据库中获取...
2018-07-08 23:46:38.377 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.U.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_user_info WHERE (user_name LIKE ?) OR (nick_name LIKE ?) 
2018-07-08 23:46:38.378 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.U.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-08 23:46:38.401 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.U.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:38.402 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( user_name like ? ) or( nick_name like ? ) LIMIT ? 
2018-07-08 23:46:38.403 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: %%(String), %%(String), 1000(Integer)
2018-07-08 23:46:38.443 DEBUG 6336 --- [http-nio-8080-exec-9] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 35
2018-07-08 23:46:38.870  INFO 6336 --- [http-nio-8080-exec-10] com.yanda.service.impl.UserServiceImpl   : 用户数据列表将从数据库中获取...
2018-07-08 23:46:38.873 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_user_info WHERE (user_name LIKE ?) OR (nick_name LIKE ?) 
2018-07-08 23:46:38.874 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByExample_COUNT          : ==> Parameters: %克劳德%(String), %克劳德%(String)
2018-07-08 23:46:38.896 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:38.897 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( user_name like ? ) or( nick_name like ? ) LIMIT ? 
2018-07-08 23:46:38.898 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: %克劳德%(String), %克劳德%(String), 1000(Integer)
2018-07-08 23:46:38.921 DEBUG 6336 --- [http-nio-8080-exec-10] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-08 23:46:40.559 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_vip_card_info SET card_num = ?,update_time = ?,user_id = ?,nick_name = ? WHERE card_id = ? 
2018-07-08 23:46:40.561 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.updateByPrimaryKeySelective    : ==> Parameters: 20180708100015(String), 2018-07-08 23:46:40.558(Timestamp), 38(Integer), 克劳德(String), 1021(Integer)
2018-07-08 23:46:40.588 DEBUG 6336 --- [http-nio-8080-exec-1] c.y.m.g.V.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-08 23:46:40.656  INFO 6336 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 23:46:40.659 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 23:46:40.660 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 23:46:40.686 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 23:46:40.692 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 23:46:40.693 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 23:46:40.719 DEBUG 6336 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-09 10:05:30.960  INFO 25168 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 25168 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-09 10:05:31.052 DEBUG 25168 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-09 10:05:31.053  INFO 25168 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-09 10:05:31.518  INFO 25168 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:05:31 CST 2018]; root of context hierarchy
2018-07-09 10:05:35.129  INFO 25168 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-09 10:05:35.460  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.460  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.460  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.461  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.462  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.463  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.463  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.463  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.464  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.464  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.464  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.464  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.465  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:05:35.465  WARN 25168 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-09 10:05:35.492  WARN 25168 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-09 10:05:36.250  INFO 25168 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e34a172e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:05:36.543  INFO 25168 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$fe29af78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:05:36.569  INFO 25168 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:05:36.574  INFO 25168 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$2c5c4d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:05:42.277  INFO 25168 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-09 10:05:42.306  INFO 25168 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-09 10:05:42.308  INFO 25168 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-09 10:05:42.458  INFO 25168 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-09 10:05:42.458  INFO 25168 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10946 ms
2018-07-09 10:05:42.732  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-09 10:05:42.733  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-09 10:05:42.733  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-09 10:05:42.734  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-09 10:05:42.734  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-09 10:05:42.734  INFO 25168 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-09 10:05:44.901  INFO 25168 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-09 10:05:47.680  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:05:31 CST 2018]; root of context hierarchy
2018-07-09 10:05:47.793  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:05:47.795  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:05:47.796  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.796  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:05:47.797  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.799  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:05:47.800  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:05:47.801  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-09 10:05:47.801  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:05:47.802  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.804  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.805  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.805  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.806  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.806  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.806  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.811  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:05:47.811  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:05:47.812  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:05:47.812  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.813  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:05:47.813  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.814  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:05:47.816  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.816  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-09 10:05:47.817  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-09 10:05:47.819  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.820  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.820  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:05:47.821  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.821  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.821  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.821  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.822  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.823  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.823  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.823  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.824  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:05:47.826  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.827  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.827  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.827  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.827  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:05:47.828  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.828  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.828  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.829  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.829  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:05:47.833  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:05:47.834  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.834  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:05:47.834  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:05:47.834  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.835  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.836  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.837  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.837  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.838  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.840  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.840  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-09 10:05:47.841  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-09 10:05:47.842  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.843  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.843  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.844  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.847  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.848  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:05:47.848  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.848  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.848  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.849  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.849  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-09 10:05:47.849  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:05:47.849  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.849  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-09 10:05:47.850  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:05:47.850  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.851  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.852  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.852  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-09 10:05:47.853  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.853  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.854  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.854  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:05:47.855  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:05:47.857  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-09 10:05:47.857  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.857  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:05:47.858  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.858  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:05:47.858  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.858  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.858  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:05:47.859  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:05:47.861  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-09 10:05:47.862  INFO 25168 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:05:47.940  INFO 25168 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:05:47.940  INFO 25168 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:05:48.013  INFO 25168 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:05:49.339  INFO 25168 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-09 10:05:49.341  INFO 25168 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-09 10:05:49.348  INFO 25168 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-09 10:05:49.469  INFO 25168 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-09 10:05:49.477  INFO 25168 --- [main] com.yanda.Application                    : Started Application in 18.989 seconds (JVM running for 19.484)
2018-07-09 10:09:20.204  INFO 24156 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 24156 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-09 10:09:20.207 DEBUG 24156 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-09 10:09:20.207  INFO 24156 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-09 10:09:20.479  INFO 24156 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:09:20 CST 2018]; root of context hierarchy
2018-07-09 10:09:22.457  INFO 24156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-09 10:09:23.017  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.017  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.018  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.018  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.018  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.018  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.018  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.019  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.019  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.019  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.019  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.019  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.020  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.021  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.021  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.021  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.021  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.022  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:09:23.022  WARN 24156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-09 10:09:23.051  WARN 24156 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-09 10:09:23.870  INFO 24156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88f3a14d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:09:24.184  INFO 24156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a3d33997] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:09:24.217  INFO 24156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:09:24.220  INFO 24156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d205d76b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:09:29.740  INFO 24156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-09 10:09:29.751  INFO 24156 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-09 10:09:29.753  INFO 24156 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-09 10:09:29.883  INFO 24156 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-09 10:09:29.884  INFO 24156 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9411 ms
2018-07-09 10:09:30.126  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-09 10:09:30.127  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-09 10:09:30.128  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-09 10:09:30.128  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-09 10:09:30.128  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-09 10:09:30.128  INFO 24156 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-09 10:09:31.417  INFO 24156 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-09 10:09:34.474  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:09:20 CST 2018]; root of context hierarchy
2018-07-09 10:09:34.603  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.605  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:09:34.606  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:09:34.607  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.608  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:09:34.612  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:09:34.612  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:09:34.613  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-09 10:09:34.613  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.615  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:09:34.620  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.620  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.621  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.621  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.621  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.622  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.627  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:09:34.628  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:09:34.628  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:09:34.629  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.629  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:09:34.629  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.630  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:09:34.631  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.632  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-09 10:09:34.633  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-09 10:09:34.635  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.636  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.637  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:09:34.638  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.638  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.638  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.639  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.639  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.640  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.641  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.642  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.643  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:09:34.647  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.648  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.648  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.649  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.649  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.650  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.650  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.650  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:09:34.651  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.651  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:09:34.657  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:09:34.658  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.658  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.659  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:09:34.659  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.660  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:09:34.662  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.663  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.663  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.664  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.667  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.667  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-09 10:09:34.667  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-09 10:09:34.669  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.671  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.672  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.672  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.676  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.677  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:09:34.677  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.677  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.677  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.678  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.678  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.678  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.678  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-09 10:09:34.679  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-09 10:09:34.679  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:09:34.679  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:09:34.681  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.682  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.682  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.682  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.683  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-09 10:09:34.684  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.685  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:09:34.685  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:09:34.687  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-09 10:09:34.688  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.688  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:09:34.688  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.688  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.689  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:09:34.689  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:09:34.689  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:09:34.689  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.692  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-09 10:09:34.692  INFO 24156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:09:34.798  INFO 24156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:09:34.799  INFO 24156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:09:34.972  INFO 24156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:09:36.384  INFO 24156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-09 10:09:36.388  INFO 24156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-09 10:09:36.396  INFO 24156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-09 10:09:36.465 ERROR 24156 --- [main] o.a.coyote.http11.Http11NioProtocol      : Failed to start end point associated with ProtocolHandler [http-nio-8080]

java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[na:1.8.0_51]
	at sun.nio.ch.Net.bind(Net.java:437) ~[na:1.8.0_51]
	at sun.nio.ch.Net.bind(Net.java:429) ~[na:1.8.0_51]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[na:1.8.0_51]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[na:1.8.0_51]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at com.yanda.Application.main(Application.java:26) [classes/:na]

2018-07-09 10:09:36.468 ERROR 24156 --- [main] o.apache.catalina.core.StandardService   : Failed to start connector [Connector[HTTP/1.1-8080]]

org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545) [spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) [spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at com.yanda.Application.main(Application.java:26) [classes/:na]
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 11 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[na:1.8.0_51]
	at sun.nio.ch.Net.bind(Net.java:437) ~[na:1.8.0_51]
	at sun.nio.ch.Net.bind(Net.java:429) ~[na:1.8.0_51]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[na:1.8.0_51]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[na:1.8.0_51]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:980) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:573) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	... 12 common frames omitted

2018-07-09 10:09:36.482  INFO 24156 --- [main] o.apache.catalina.core.StandardService   : Stopping service Tomcat
2018-07-09 10:09:36.531  INFO 24156 --- [main] utoConfigurationReportLoggingInitializer : 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-07-09 10:09:36.540 ERROR 24156 --- [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

2018-07-09 10:09:36.543  INFO 24156 --- [main] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:09:20 CST 2018]; root of context hierarchy
2018-07-09 10:09:36.546  INFO 24156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2018-07-09 10:09:36.547  INFO 24156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2018-07-09 10:09:36.548  INFO 24156 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'threadPoolTaskScheduler'
2018-07-09 10:09:58.790  INFO 22148 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 22148 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-09 10:09:58.792 DEBUG 22148 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-09 10:09:58.792  INFO 22148 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-09 10:09:58.993  INFO 22148 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:09:58 CST 2018]; root of context hierarchy
2018-07-09 10:10:00.800  INFO 22148 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-09 10:10:01.338  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.339  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.339  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.339  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.340  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.340  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.340  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.340  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.341  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.341  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.341  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.341  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.342  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.342  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.342  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.342  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.342  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.343  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.343  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.344  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.344  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.344  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.344  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:10:01.344  WARN 22148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-09 10:10:01.379  WARN 22148 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-09 10:10:02.195  INFO 22148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:10:02.483  INFO 22148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a05e03e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:10:02.511  INFO 22148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:10:02.515  INFO 22148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ce90a1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:10:08.041  INFO 22148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-09 10:10:08.053  INFO 22148 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-09 10:10:08.055  INFO 22148 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-09 10:10:08.177  INFO 22148 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-09 10:10:08.177  INFO 22148 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9188 ms
2018-07-09 10:10:08.463  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-09 10:10:08.464  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-09 10:10:08.465  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-09 10:10:08.465  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-09 10:10:08.465  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-09 10:10:08.466  INFO 22148 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-09 10:10:10.584  INFO 22148 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-09 10:10:13.422  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:09:58 CST 2018]; root of context hierarchy
2018-07-09 10:10:13.546  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.548  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:10:13.549  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:10:13.550  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:10:13.550  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.553  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:10:13.554  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:10:13.554  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-09 10:10:13.555  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:10:13.555  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.558  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.559  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.559  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.560  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.560  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.561  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.566  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:10:13.567  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:10:13.567  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:10:13.567  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.568  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:10:13.568  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:10:13.569  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.571  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-09 10:10:13.571  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-09 10:10:13.572  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.575  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.575  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.576  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:10:13.577  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.577  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.578  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.578  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.579  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.580  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.580  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.580  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.581  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:10:13.583  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.584  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.584  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.584  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:10:13.584  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.585  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.585  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.585  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.586  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:10:13.586  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.590  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:10:13.590  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:10:13.591  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.591  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:10:13.591  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.591  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.593  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.593  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.593  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.594  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.597  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.597  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-09 10:10:13.597  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-09 10:10:13.598  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.599  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.600  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.600  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.603  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.603  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:10:13.604  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.604  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:10:13.604  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.605  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-09 10:10:13.605  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:10:13.605  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.605  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-09 10:10:13.605  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.606  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.606  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.607  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-09 10:10:13.608  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.608  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.608  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.609  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.610  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.610  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:10:13.610  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:10:13.612  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-09 10:10:13.613  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.613  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:10:13.613  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.614  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.614  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:10:13.615  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:10:13.615  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:10:13.615  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.619  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-09 10:10:13.619  INFO 22148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:10:13.694  INFO 22148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:10:13.694  INFO 22148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:10:13.781  INFO 22148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:10:15.115  INFO 22148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-09 10:10:15.118  INFO 22148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-09 10:10:15.127  INFO 22148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-09 10:10:15.249  INFO 22148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-09 10:10:15.255  INFO 22148 --- [main] com.yanda.Application                    : Started Application in 16.731 seconds (JVM running for 17.037)
2018-07-09 10:11:28.787  INFO 22148 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-09 10:11:28.787  INFO 22148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-09 10:11:28.815  INFO 22148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-07-09 10:11:29.086  INFO 22148 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-09 10:11:29.323 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-09 10:11:29.343 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-09 10:11:29.366 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-09 10:11:29.368 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-09 10:11:29.368 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-09 10:11:29.373 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-09 10:11:29.373 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-09 10:11:29.374 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-09 10:11:29.375 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-09 10:11:29.375 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-09 10:11:29.398 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-09 10:11:29.398 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-09 10:11:30.376  INFO 22148 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-09 10:11:30.377 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:30.378 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-09 10:11:30.393 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:30.461 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-09 10:11:30.515  INFO 22148 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3371]的信息
2018-07-09 10:11:30.515 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:30.516 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3371(Long)
2018-07-09 10:11:30.517 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:30.561 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-09 10:11:30.600  INFO 22148 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3312]的信息
2018-07-09 10:11:30.600 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:30.601 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3312(Long)
2018-07-09 10:11:30.602 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:30.647 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-09 10:11:30.707  INFO 22148 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3385]的信息
2018-07-09 10:11:30.707  INFO 22148 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3372]的信息
2018-07-09 10:11:30.708 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:30.708 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3385(Long)
2018-07-09 10:11:30.709 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:30.709 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:30.710 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3372(Long)
2018-07-09 10:11:30.711 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:30.758 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-09 10:11:30.760 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-09 10:11:32.665  INFO 22148 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[488]的信息
2018-07-09 10:11:32.666 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.667 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 488(Long)
2018-07-09 10:11:32.669 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.669  INFO 22148 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[491]的信息
2018-07-09 10:11:32.669  INFO 22148 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[485]的信息
2018-07-09 10:11:32.670 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.670 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.670 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 491(Long)
2018-07-09 10:11:32.671 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 485(Long)
2018-07-09 10:11:32.672 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.673 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.708  INFO 22148 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[482]的信息
2018-07-09 10:11:32.709 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.709  INFO 22148 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[494]的信息
2018-07-09 10:11:32.710 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 482(Long)
2018-07-09 10:11:32.710 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.711 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 494(Long)
2018-07-09 10:11:32.712 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.713 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.719 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.719 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.723 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.751  INFO 22148 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4036]的信息
2018-07-09 10:11:32.752 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.752  INFO 22148 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[499]的信息
2018-07-09 10:11:32.752 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4036(Long)
2018-07-09 10:11:32.753 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.754 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.755 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 499(Long)
2018-07-09 10:11:32.758 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.761 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.761 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.791  INFO 22148 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4013]的信息
2018-07-09 10:11:32.792  INFO 22148 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4033]的信息
2018-07-09 10:11:32.792 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.792 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4013(Long)
2018-07-09 10:11:32.793 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:11:32.793 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4033(Long)
2018-07-09 10:11:32.794 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.794 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:11:32.800 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:11:32.802 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:11:32.810 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:11:32.837 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:11:32.837 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:06.988 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.070 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:07.145 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:07.222 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.304 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.336 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.338 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:07.338 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.353 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:07.381 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:09.726 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:14:09.727 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 1000(Long)
2018-07-09 10:14:09.728 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 0
2018-07-09 10:14:11.976 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:11.976 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:11.976 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:11.978 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:11.982 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:12.056 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:12.056 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:12.056 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:12.059 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:12.068 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:17.547 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:14:17.548 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 1000(Long)
2018-07-09 10:14:17.549 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 0
2018-07-09 10:14:20.455 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.455 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.455 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.456 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.462 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.534 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:20.534 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.536 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:20.541 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:20.546 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:21.760 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:14:21.760 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:14:21.762 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:14:23.701 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.704 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.704 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.705 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.715 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.780 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:23.780 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:23.780 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:23.781 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:23.815 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:27.221 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:14:27.223 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 1000(Long)
2018-07-09 10:14:27.224 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 0
2018-07-09 10:14:28.868 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.868 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.868 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.868 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.878 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.947 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:28.952 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:28.952 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:28.955 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:28.960 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:45.589 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:14:45.591 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 998(Long)
2018-07-09 10:14:45.593 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:14:47.361 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.362 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.362 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.362 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.369 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.441 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:14:47.443 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:14:47.443 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:14:47.447 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:14:47.451 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:16.892  INFO 22148 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 删除视频，清空视频缓存数据...
2018-07-09 10:15:16.896 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:15:16.897 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 1000(Long)
2018-07-09 10:15:16.898 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 0
2018-07-09 10:15:16.950  INFO 22148 --- [http-nio-8080-exec-4] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:15:17.199 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:15:17.200 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:15:17.204 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:15:17.205 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:15:17.206 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:15:17.209 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:15:17.745  INFO 22148 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[485]的信息
2018-07-09 10:15:17.745  INFO 22148 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[479]的信息
2018-07-09 10:15:17.745  INFO 22148 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[488]的信息
2018-07-09 10:15:17.746  INFO 22148 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[482]的信息
2018-07-09 10:15:17.746 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.746 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 488(Long)
2018-07-09 10:15:17.746 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.747 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 479(Long)
2018-07-09 10:15:17.747 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.748 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.748 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.749  INFO 22148 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[491]的信息
2018-07-09 10:15:17.749 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.749 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 485(Long)
2018-07-09 10:15:17.749 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 482(Long)
2018-07-09 10:15:17.750 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.750 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.750 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.751 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 491(Long)
2018-07-09 10:15:17.752 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.801 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.801 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.801 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.801 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.805 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.836  INFO 22148 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4013]的信息
2018-07-09 10:15:17.837 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.837 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4013(Long)
2018-07-09 10:15:17.838  INFO 22148 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4033]的信息
2018-07-09 10:15:17.838  INFO 22148 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4036]的信息
2018-07-09 10:15:17.838  INFO 22148 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[494]的信息
2018-07-09 10:15:17.838 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.838 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.838 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.839 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4036(Long)
2018-07-09 10:15:17.839 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4033(Long)
2018-07-09 10:15:17.839 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.839 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 494(Long)
2018-07-09 10:15:17.839  INFO 22148 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[499]的信息
2018-07-09 10:15:17.840 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.840 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.840 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.842 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:15:17.844 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 499(Long)
2018-07-09 10:15:17.845 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:15:17.888 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.893 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.893 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:15:17.893 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:17.898 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:15:26.951 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:26.975 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:26.975 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:26.981 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:27.038 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:27.055 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:15:27.055 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:15:27.074 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:27.130 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:27.148 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:15:30.765 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:15:30.766 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:15:30.767 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:19:44.631  INFO 22148 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:19:44.635 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:19:44.636 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:19:44.637 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:19:44.638 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:19:44.639 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:19:44.647 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:19:44.926 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:19:45.006 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.085 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:19:45.170 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.170 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.170 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.174 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.185 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.247 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:45.247 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:19:47.669 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:19:47.670 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:19:47.672 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:20:59.529 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:20:59.530 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:20:59.532 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:03.497  INFO 22148 --- [http-nio-8080-exec-10] com.yanda.service.impl.MovieServiceImpl  : 根据父分类ID获取的分类列表将从数据库中获取...
2018-07-09 10:21:03.497 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.M.findClassifyList                 : ==>  Preparing: SELECT classify_id, classify_name, classify_desc, icon_url FROM t_classify_info WHERE parent_id = ? order by classify_order asc; 
2018-07-09 10:21:03.498 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.M.findClassifyList                 : ==> Parameters: 7(Integer)
2018-07-09 10:21:03.499 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.M.findClassifyList                 : <==      Total: 11
2018-07-09 10:21:25.055  INFO 22148 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 更新视频，清空视频缓存数据...
2018-07-09 10:21:25.064 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.M.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_mv_info SET mv_name = ?,mv_intro = ?,update_time = ?,classify_id = ?,classify_name = ?,vip_type = ? WHERE mv_id = ? 
2018-07-09 10:21:25.068 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.M.updateByPrimaryKeySelective    : ==> Parameters: 第二单元(String), 第二单元(String), 2018-07-09 10:21:24.777(Timestamp), 414(Integer), 故事音频/史记故事(String), 1(Integer), 999(Long)
2018-07-09 10:21:25.191 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.M.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-09 10:21:25.548  INFO 22148 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:21:25.550 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:21:25.551 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:21:25.552 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:21:25.553 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:21:25.553 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:21:25.557 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:21:25.677  INFO 22148 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[479]的信息
2018-07-09 10:21:25.677 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:25.677 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 479(Long)
2018-07-09 10:21:25.678 DEBUG 22148 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:25.726 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:25.762  INFO 22148 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[494]的信息
2018-07-09 10:21:25.763 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:25.763 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 494(Long)
2018-07-09 10:21:25.764 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:25.810 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:25.847  INFO 22148 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[499]的信息
2018-07-09 10:21:25.848 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:25.848 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 499(Long)
2018-07-09 10:21:25.851 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:25.899 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:25.933  INFO 22148 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4013]的信息
2018-07-09 10:21:25.933 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:25.934 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4013(Long)
2018-07-09 10:21:25.936 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:25.982 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:26.009  INFO 22148 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[488]的信息
2018-07-09 10:21:26.010 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.010 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 488(Long)
2018-07-09 10:21:26.011 DEBUG 22148 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.021  INFO 22148 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4033]的信息
2018-07-09 10:21:26.022 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.022 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4033(Long)
2018-07-09 10:21:26.023 DEBUG 22148 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.029  INFO 22148 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[482]的信息
2018-07-09 10:21:26.029  INFO 22148 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[485]的信息
2018-07-09 10:21:26.030 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.030 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 482(Long)
2018-07-09 10:21:26.030 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.030 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 485(Long)
2018-07-09 10:21:26.031 DEBUG 22148 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.031 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.036  INFO 22148 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4036]的信息
2018-07-09 10:21:26.036 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.037 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4036(Long)
2018-07-09 10:21:26.040 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.056 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:26.068 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:21:26.080 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:26.080 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:26.090  INFO 22148 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[491]的信息
2018-07-09 10:21:26.090 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:21:26.090 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 491(Long)
2018-07-09 10:21:26.091 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:26.094 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:21:26.160 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:40.240 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:21:40.240 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:21:40.243 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:21:43.932  INFO 22148 --- [http-nio-8080-exec-6] com.yanda.service.impl.MovieServiceImpl  : 根据父分类ID获取的分类列表将从数据库中获取...
2018-07-09 10:21:43.932 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.M.findClassifyList                 : ==>  Preparing: SELECT classify_id, classify_name, classify_desc, icon_url FROM t_classify_info WHERE parent_id = ? order by classify_order asc; 
2018-07-09 10:21:43.932 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.M.findClassifyList                 : ==> Parameters: 5(Integer)
2018-07-09 10:21:43.933 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.M.findClassifyList                 : <==      Total: 4
2018-07-09 10:21:49.859  INFO 22148 --- [http-nio-8080-exec-7] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:21:49.862 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:21:49.863 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:21:49.864 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:21:49.865 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:21:49.866 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:21:49.869 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:21:50.021 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.026 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.026 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.027 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.035 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.092 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.098 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:21:50.104 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:21:50.104 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:21:50.124 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:23:46.905 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_classify_info WHERE (classify_name LIKE ? AND parent_id = ?) 
2018-07-09 10:23:46.906 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample_COUNT          : ==> Parameters: %%(String), 1(Integer)
2018-07-09 10:23:46.909 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:23:46.910 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample                : ==>  Preparing: select classify_id, classify_name, classify_desc, parent_id, classify_order, create_time, update_time, icon_url from t_classify_info WHERE ( classify_name like ? and parent_id = ? ) order by classify_order asc LIMIT ?, ? 
2018-07-09 10:23:46.910 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample                : ==> Parameters: %%(String), 1(Integer), 10(Integer), 10(Integer)
2018-07-09 10:23:46.913 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.C.selectByExample                : <==      Total: 9
2018-07-09 10:23:55.136 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_classify_info WHERE (classify_name LIKE ? AND parent_id = ?) 
2018-07-09 10:23:55.137 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample_COUNT          : ==> Parameters: %%(String), 7(Integer)
2018-07-09 10:23:55.137 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:23:55.138 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample                : ==>  Preparing: select classify_id, classify_name, classify_desc, parent_id, classify_order, create_time, update_time, icon_url from t_classify_info WHERE ( classify_name like ? and parent_id = ? ) order by classify_order asc LIMIT ? 
2018-07-09 10:23:55.139 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample                : ==> Parameters: %%(String), 7(Integer), 10(Integer)
2018-07-09 10:23:55.141 DEBUG 22148 --- [http-nio-8080-exec-1] c.y.m.g.C.selectByExample                : <==      Total: 10
2018-07-09 10:24:05.821 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_classify_info WHERE (classify_name LIKE ? AND parent_id = ?) 
2018-07-09 10:24:05.822 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample_COUNT          : ==> Parameters: %%(String), 3(Integer)
2018-07-09 10:24:05.823 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:24:05.824 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample                : ==>  Preparing: select classify_id, classify_name, classify_desc, parent_id, classify_order, create_time, update_time, icon_url from t_classify_info WHERE ( classify_name like ? and parent_id = ? ) order by classify_order asc LIMIT ? 
2018-07-09 10:24:05.824 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample                : ==> Parameters: %%(String), 3(Integer), 10(Integer)
2018-07-09 10:24:05.827 DEBUG 22148 --- [http-nio-8080-exec-6] c.y.m.g.C.selectByExample                : <==      Total: 5
2018-07-09 10:37:07.454  INFO 22148 --- [http-nio-8080-exec-7] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:37:07.462 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:37:07.463 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:37:07.467 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:37:07.471 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:37:07.472 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:37:07.480 DEBUG 22148 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:37:08.075 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.150 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:37:08.231 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.316 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:37:08.397 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.414 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.430 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.430 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.431 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:08.474 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:10.106 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : ==>  Preparing: SELECT mv_id,mv_name,mv_intro,create_time,update_time,classify_id,classify_name,img_appendix_id,mv_appendix_id,episode_count,mv_path,is_public,public_time,vip_type FROM t_mv_info WHERE mv_id = ? 
2018-07-09 10:37:10.107 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : ==> Parameters: 999(Long)
2018-07-09 10:37:10.110 DEBUG 22148 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:37:12.497 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.504 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.504 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.504 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.507 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.576 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.579 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:37:12.587 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:37:12.587 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:37:12.587 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:48.558  INFO 22148 --- [http-nio-8080-exec-5] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:38:48.561 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) 
2018-07-09 10:38:48.563 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-09 10:38:48.565 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:38:48.566 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:38:48.567 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %%(String), 10(Integer)
2018-07-09 10:38:48.570 DEBUG 22148 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:38:48.732 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373259977\1526373259977_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:48.813 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:48.890 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:48.974 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:49.066 ERROR 22148 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:38:49.071 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:49.073 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:49.073 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:38:49.095 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:38:49.161 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:34.865 ERROR 22148 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:41:34.938 ERROR 22148 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.033 ERROR 22148 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.087  INFO 22148 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[4051]的信息
2018-07-09 10:41:35.088 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:41:35.089 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 4051(Long)
2018-07-09 10:41:35.091 DEBUG 22148 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 0
2018-07-09 10:41:35.102 ERROR 22148 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.132 ERROR 22148 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.138 ERROR 22148 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.146 ERROR 22148 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:41:35.178 ERROR 22148 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:41:35.203 ERROR 22148 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:45:25.822  INFO 18536 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18536 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-09 10:45:25.824 DEBUG 18536 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-09 10:45:25.825  INFO 18536 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-09 10:45:26.109  INFO 18536 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:45:26 CST 2018]; root of context hierarchy
2018-07-09 10:45:27.994  INFO 18536 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-09 10:45:28.643  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.643  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.643  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.643  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.644  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.644  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.644  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.644  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.644  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.645  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.645  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.645  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.645  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.645  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.646  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.646  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.646  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.646  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.646  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.647  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.647  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.647  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.647  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-09 10:45:28.647  WARN 18536 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-09 10:45:28.681  WARN 18536 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-09 10:45:29.566  INFO 18536 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:45:29.922  INFO 18536 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a05e03e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:45:29.957  INFO 18536 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:45:29.959  INFO 18536 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ce90a1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-09 10:45:35.726  INFO 18536 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-09 10:45:35.754  INFO 18536 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-09 10:45:35.756  INFO 18536 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-09 10:45:36.013  INFO 18536 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-09 10:45:36.014  INFO 18536 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9909 ms
2018-07-09 10:45:36.426  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-09 10:45:36.427  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-09 10:45:36.427  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-09 10:45:36.428  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-09 10:45:36.428  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-09 10:45:36.428  INFO 18536 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-09 10:45:38.712  INFO 18536 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-09 10:45:42.035  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 09 10:45:26 CST 2018]; root of context hierarchy
2018-07-09 10:45:42.185  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:45:42.187  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-09 10:45:42.187  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.188  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:45:42.188  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.190  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:45:42.191  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-09 10:45:42.191  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-09 10:45:42.191  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.192  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:45:42.193  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.194  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.194  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.195  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.195  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.196  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.202  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:45:42.202  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-09 10:45:42.203  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:45:42.203  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.203  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:45:42.204  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.204  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:45:42.205  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-09 10:45:42.206  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-09 10:45:42.206  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.209  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.210  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.211  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:45:42.211  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.212  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.213  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.213  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.214  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.215  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.216  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.216  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.218  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:45:42.220  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.221  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.221  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.221  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:45:42.221  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.222  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.222  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.222  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.222  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-09 10:45:42.223  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.227  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:45:42.228  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:45:42.228  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.228  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:45:42.228  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.229  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.232  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.233  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.234  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.235  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.237  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.238  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-09 10:45:42.238  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-09 10:45:42.239  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.240  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.241  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.241  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.247  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.247  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-09 10:45:42.248  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.248  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.249  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-09 10:45:42.249  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-09 10:45:42.250  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.250  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:45:42.250  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:45:42.251  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.251  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.251  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.254  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-09 10:45:42.255  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.255  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.256  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.256  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.258  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:45:42.259  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-09 10:45:42.259  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.264  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-09 10:45:42.265  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.267  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-09 10:45:42.268  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.269  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.269  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-09 10:45:42.270  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.270  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-09 10:45:42.270  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-09 10:45:42.273  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-09 10:45:42.274  INFO 18536 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-09 10:45:42.375  INFO 18536 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:45:42.376  INFO 18536 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:45:42.464  INFO 18536 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-09 10:45:44.087  INFO 18536 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-09 10:45:44.090  INFO 18536 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-09 10:45:44.103  INFO 18536 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-09 10:45:44.246  INFO 18536 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-09 10:45:44.255  INFO 18536 --- [main] com.yanda.Application                    : Started Application in 18.736 seconds (JVM running for 19.062)
2018-07-09 10:48:39.643  INFO 18536 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-09 10:48:39.643  INFO 18536 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-09 10:48:39.677  INFO 18536 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-07-09 10:48:40.375 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.459 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:48:40.542 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.618 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:48:40.697 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.697 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:48:40.699 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.709 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.716 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:40.783 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:46.547  INFO 18536 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:48:46.712  INFO 18536 --- [http-nio-8080-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-09 10:48:47.005 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) OR (classify_name LIKE ?) 
2018-07-09 10:48:47.023 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %国学%(String), %国学%(String)
2018-07-09 10:48:47.037 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:48:47.039 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) or( classify_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:48:47.039 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %国学%(String), %国学%(String), 10(Integer)
2018-07-09 10:48:47.044 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:48:47.609  INFO 18536 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3903]的信息
2018-07-09 10:48:47.609  INFO 18536 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3897]的信息
2018-07-09 10:48:47.609  INFO 18536 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3894]的信息
2018-07-09 10:48:47.609  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3891]的信息
2018-07-09 10:48:47.609  INFO 18536 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3900]的信息
2018-07-09 10:48:47.611 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.611 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3900(Long)
2018-07-09 10:48:47.614 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.614 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.616 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3903(Long)
2018-07-09 10:48:47.622 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.625 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.626 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3894(Long)
2018-07-09 10:48:47.626 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.627 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3891(Long)
2018-07-09 10:48:47.629 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.629 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.630 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.630 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3897(Long)
2018-07-09 10:48:47.632 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.671 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881089817\1530881089817_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.672 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881142395\1530881142395_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.676 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880630661\1530880630661_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.676 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880725255\1530880725255_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.677 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880844348\1530880844348_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.702  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3909]的信息
2018-07-09 10:48:47.705 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.705  INFO 18536 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3915]的信息
2018-07-09 10:48:47.705  INFO 18536 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3906]的信息
2018-07-09 10:48:47.706  INFO 18536 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3912]的信息
2018-07-09 10:48:47.706 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3909(Long)
2018-07-09 10:48:47.706 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.706 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.707 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3906(Long)
2018-07-09 10:48:47.707 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3912(Long)
2018-07-09 10:48:47.711 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.711 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.711 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.712 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:47.712 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3915(Long)
2018-07-09 10:48:47.714 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:47.756 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881367848\1530881367848_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.757 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881199426\1530881199426_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.758 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881303989\1530881303989_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:47.758 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881420114\1530881420114_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.373  INFO 18536 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:48:50.376 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) OR (classify_name LIKE ?) 
2018-07-09 10:48:50.378 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %国学%(String), %国学%(String)
2018-07-09 10:48:50.379 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:48:50.380 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) or( classify_name like ? ) order by update_time desc LIMIT ?, ? 
2018-07-09 10:48:50.380 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %国学%(String), %国学%(String), 10(Integer), 10(Integer)
2018-07-09 10:48:50.385 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 10
2018-07-09 10:48:50.485  INFO 18536 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3864]的信息
2018-07-09 10:48:50.485  INFO 18536 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3873]的信息
2018-07-09 10:48:50.486  INFO 18536 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3861]的信息
2018-07-09 10:48:50.487  INFO 18536 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3870]的信息
2018-07-09 10:48:50.487 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.488 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.488 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3864(Long)
2018-07-09 10:48:50.488 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.488 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.488 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3861(Long)
2018-07-09 10:48:50.488  INFO 18536 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3867]的信息
2018-07-09 10:48:50.489 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3870(Long)
2018-07-09 10:48:50.489 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3873(Long)
2018-07-09 10:48:50.490 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.490 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.491 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.491 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3867(Long)
2018-07-09 10:48:50.492 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.493 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.493 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.537 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530870463396\1530870463396_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.537 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871345645\1530871345645_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.537 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871844520\1530871844520_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.542 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871614942\1530871614942_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.542 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530870773271\1530870773271_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.564  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3876]的信息
2018-07-09 10:48:50.564 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.564  INFO 18536 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3885]的信息
2018-07-09 10:48:50.565 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3876(Long)
2018-07-09 10:48:50.565 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.567 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.567  INFO 18536 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3882]的信息
2018-07-09 10:48:50.568  INFO 18536 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3879]的信息
2018-07-09 10:48:50.568 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3885(Long)
2018-07-09 10:48:50.569 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.569 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.570 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3879(Long)
2018-07-09 10:48:50.570 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3882(Long)
2018-07-09 10:48:50.570 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.572 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.572 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.572  INFO 18536 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3888]的信息
2018-07-09 10:48:50.573 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:50.573 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3888(Long)
2018-07-09 10:48:50.574 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:50.615 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530878754911\1530878754911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.616 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880435176\1530880435176_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.618 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880238801\1530880238801_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.619 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880364036\1530880364036_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:50.624 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880118817\1530880118817_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.595  INFO 18536 --- [http-nio-8080-exec-4] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:48:53.598 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) OR (classify_name LIKE ?) 
2018-07-09 10:48:53.598 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %国学%(String), %国学%(String)
2018-07-09 10:48:53.602 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:48:53.602  INFO 18536 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和视频名称查询的视频数据列表将从数据库中获取...
2018-07-09 10:48:53.603 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) or( classify_name like ? ) order by update_time desc LIMIT ?, ? 
2018-07-09 10:48:53.603 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %国学%(String), %国学%(String), 50(Integer), 50(Integer)
2018-07-09 10:48:53.605 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (mv_name LIKE ?) OR (classify_name LIKE ?) 
2018-07-09 10:48:53.605 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: %国学%(String), %国学%(String)
2018-07-09 10:48:53.608 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-09 10:48:53.609 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( mv_name like ? ) or( classify_name like ? ) order by update_time desc LIMIT ? 
2018-07-09 10:48:53.609 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-09 10:48:53.610 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: %国学%(String), %国学%(String), 50(Integer)
2018-07-09 10:48:53.620 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 43
2018-07-09 10:48:53.849  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3801]的信息
2018-07-09 10:48:53.849  INFO 18536 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3804]的信息
2018-07-09 10:48:53.849  INFO 18536 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3792]的信息
2018-07-09 10:48:53.849  INFO 18536 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3795]的信息
2018-07-09 10:48:53.849  INFO 18536 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3798]的信息
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3801(Long)
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3792(Long)
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3798(Long)
2018-07-09 10:48:53.851 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3804(Long)
2018-07-09 10:48:53.850 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3795(Long)
2018-07-09 10:48:53.852 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:53.852 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:53.852 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:53.852 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:53.852 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:53.895 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530841365130\1530841365130_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.895 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530841761177\1530841761177_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.897 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530840137364\1530840137364_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.899 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530841541005\1530841541005_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.902 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530839482115\1530839482115_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.970 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881089817\1530881089817_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.970 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881420114\1530881420114_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.970 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880364036\1530880364036_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.972 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880630661\1530880630661_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:53.980 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881303989\1530881303989_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.040 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880435176\1530880435176_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.041 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880844348\1530880844348_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.044 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881367848\1530881367848_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.044 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881199426\1530881199426_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.063 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:48:54.074  INFO 18536 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3828]的信息
2018-07-09 10:48:54.074 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.074 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3828(Long)
2018-07-09 10:48:54.076 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.076  INFO 18536 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3807]的信息
2018-07-09 10:48:54.076 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.077 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3807(Long)
2018-07-09 10:48:54.078 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.100  INFO 18536 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3831]的信息
2018-07-09 10:48:54.102 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.104 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3831(Long)
2018-07-09 10:48:54.106 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.111 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880725255\1530880725255_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.113 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530881142395\1530881142395_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.123 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530842190927\1530842190927_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.125 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530848126207\1530848126207_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.141  INFO 18536 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3834]的信息
2018-07-09 10:48:54.141 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.142 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3834(Long)
2018-07-09 10:48:54.143 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.146  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3837]的信息
2018-07-09 10:48:54.146 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.147 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3837(Long)
2018-07-09 10:48:54.150 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.153  INFO 18536 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3840]的信息
2018-07-09 10:48:54.154 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.155 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3840(Long)
2018-07-09 10:48:54.156 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.156  INFO 18536 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3843]的信息
2018-07-09 10:48:54.157 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.157 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3843(Long)
2018-07-09 10:48:54.158 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.167 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530848235629\1530848235629_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.189 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530848371676\1530848371676_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.194 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530859099255\1530859099255_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.198  INFO 18536 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3825]的信息
2018-07-09 10:48:54.201 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.203 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3825(Long)
2018-07-09 10:48:54.203 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530861509099\1530861509099_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.204 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530861394036\1530861394036_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.205 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.216  INFO 18536 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3822]的信息
2018-07-09 10:48:54.218 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.220 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3822(Long)
2018-07-09 10:48:54.221  INFO 18536 --- [http-nio-8080-exec-10] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3819]的信息
2018-07-09 10:48:54.221 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.222 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3819(Long)
2018-07-09 10:48:54.222 DEBUG 18536 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.223 DEBUG 18536 --- [http-nio-8080-exec-10] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.232  INFO 18536 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3816]的信息
2018-07-09 10:48:54.234 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.236  INFO 18536 --- [http-nio-8080-exec-9] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3813]的信息
2018-07-09 10:48:54.236 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3816(Long)
2018-07-09 10:48:54.236 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.237 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3813(Long)
2018-07-09 10:48:54.237 DEBUG 18536 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.238 DEBUG 18536 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.253 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530846727379\1530846727379_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.265 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530846514395\1530846514395_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.271 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530846372348\1530846372348_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.281 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530844136893\1530844136893_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.281  INFO 18536 --- [http-nio-8080-exec-1] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3810]的信息
2018-07-09 10:48:54.283 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.284 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3810(Long)
2018-07-09 10:48:54.288 DEBUG 18536 --- [http-nio-8080-exec-1] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.289 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530845464068\1530845464068_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.297  INFO 18536 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3849]的信息
2018-07-09 10:48:54.297  INFO 18536 --- [http-nio-8080-exec-2] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3846]的信息
2018-07-09 10:48:54.298 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.298 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.299 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3846(Long)
2018-07-09 10:48:54.299 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3849(Long)
2018-07-09 10:48:54.302 DEBUG 18536 --- [http-nio-8080-exec-2] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.302 DEBUG 18536 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.313  INFO 18536 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3850]的信息
2018-07-09 10:48:54.314 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.314 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3850(Long)
2018-07-09 10:48:54.314  INFO 18536 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3853]的信息
2018-07-09 10:48:54.315 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.315 DEBUG 18536 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.316 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3853(Long)
2018-07-09 10:48:54.321 DEBUG 18536 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.339 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530843911581\1530843911581_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.345 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530862106254\1530862106254_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.347 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530862559441\1530862559441_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.361 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530862606066\1530862606066_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.368  INFO 18536 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3858]的信息
2018-07-09 10:48:54.369 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530862884113\1530862884113_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.369 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-09 10:48:54.370 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3858(Long)
2018-07-09 10:48:54.371 DEBUG 18536 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-09 10:48:54.417 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530870463396\1530870463396_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.418 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530867398240\1530867398240_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.420 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530870773271\1530870773271_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.432 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871345645\1530871345645_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.450 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871614942\1530871614942_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.500 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880118817\1530880118817_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.502 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530871844520\1530871844520_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.502 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530878754911\1530878754911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:48:54.505 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1530880238801\1530880238801_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.104 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.106 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.109 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.110 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.181 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.182 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:49:27.183 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.184 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:49:27.278 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:27.279 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:49:31.888 ERROR 18536 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374419336\1526374419336_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:31.889 ERROR 18536 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373463070\1526373463070_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:31.890 ERROR 18536 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373351414\1526373351414_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:31.897 ERROR 18536 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526373542539\1526373542539_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:31.964 ERROR 18536 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531101306146\1531101306146_80.png (系统找不到指定的路径。)
2018-07-09 10:49:31.965 ERROR 18536 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531102269489\1531102269489_80.png (系统找不到指定的路径。)
2018-07-09 10:49:31.968 ERROR 18536 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531098947412\1531098947412_80.png (系统找不到指定的路径。)
2018-07-09 10:49:31.975 ERROR 18536 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1531040913911\1531040913911_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:32.040 ERROR 18536 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374569477\1526374569477_80.jpg (系统找不到指定的路径。)
2018-07-09 10:49:32.042 ERROR 18536 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1526374765883\1526374765883_80.jpg (系统找不到指定的路径。)
2018-07-09 12:43:15.462  INFO 18536 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-09 12:43:15]
2018-07-10 07:17:35.398  INFO 18536 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-10 07:17:35]
2018-07-10 08:00:00.001  INFO 18536 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-10 08:00:00]
2018-07-15 12:50:05.925  INFO 3992 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 3992 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 12:50:06.048 DEBUG 3992 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 12:50:06.049  INFO 3992 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 12:50:07.180  INFO 3992 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 12:50:07 CST 2018]; root of context hierarchy
2018-07-15 12:50:11.193  INFO 3992 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 12:50:12.273  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.273  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.274  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.274  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.274  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.275  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.275  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.275  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.276  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.277  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.278  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.278  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.279  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.281  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.282  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.282  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.284  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.288  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.288  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.289  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.289  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.289  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.289  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.289  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 12:50:12.290  WARN 3992 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 12:50:12.366  WARN 3992 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 12:50:13.616  INFO 3992 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7238f5a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 12:50:14.034  INFO 3992 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$8d188df3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 12:50:14.074  INFO 3992 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 12:50:14.078  INFO 3992 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bb4b2bc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 12:50:19.811  INFO 3992 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 12:50:19.825  INFO 3992 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 12:50:19.826  INFO 3992 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 12:50:19.973  INFO 3992 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 12:50:19.973  INFO 3992 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12801 ms
2018-07-15 12:50:20.250  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 12:50:20.251  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 12:50:20.252  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 12:50:20.252  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 12:50:20.252  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 12:50:20.252  INFO 3992 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 12:50:26.169  INFO 3992 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 12:50:29.864  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 12:50:07 CST 2018]; root of context hierarchy
2018-07-15 12:50:30.054  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 12:50:30.056  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 12:50:30.057  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 12:50:30.058  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.059  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.061  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 12:50:30.062  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 12:50:30.063  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 12:50:30.063  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.064  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 12:50:30.067  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.068  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.068  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.069  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.507  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.508  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.514  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 12:50:30.515  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 12:50:30.515  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 12:50:30.516  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.517  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 12:50:30.517  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.518  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 12:50:30.520  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.521  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 12:50:30.522  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 12:50:30.526  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.527  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.527  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 12:50:30.527  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.528  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.860  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.861  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.862  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.864  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.864  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.864  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:30.865  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 12:50:30.868  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.869  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.870  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.870  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 12:50:30.870  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 12:50:30.871  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.206  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.207  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.207  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.208  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 12:50:31.210  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.211  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.211  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.212  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.217  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 12:50:31.217  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 12:50:31.217  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.218  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 12:50:31.218  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.218  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.220  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.546  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:31.547  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.548  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.550  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.551  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 12:50:31.552  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 12:50:31.553  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.554  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.554  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.555  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.558  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.558  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 12:50:31.559  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.559  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.559  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 12:50:31.560  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 12:50:31.560  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.561  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 12:50:31.884  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 12:50:31.884  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.885  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.886  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.889  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 12:50:31.889  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.890  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.890  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.891  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.892  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:31.893  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 12:50:31.893  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 12:50:31.897  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 12:50:31.897  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:32.249  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 12:50:32.250  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 12:50:32.250  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:32.250  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 12:50:32.251  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 12:50:32.251  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:32.251  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 12:50:32.256  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 12:50:32.256  INFO 3992 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 12:50:32.369  INFO 3992 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 12:50:32.369  INFO 3992 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 12:50:32.476  INFO 3992 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 12:50:35.276  INFO 3992 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 12:50:35.280  INFO 3992 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 12:50:35.293  INFO 3992 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 12:50:35.432  INFO 3992 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 12:50:35.441  INFO 3992 --- [main] com.yanda.Application                    : Started Application in 30.637 seconds (JVM running for 32.067)
2018-07-15 15:58:41.925  INFO 3992 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 15:58:41.927  INFO 3992 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 15:58:42.025  INFO 3992 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2018-07-15 15:58:42.627  INFO 3992 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-15 15:58:43.183 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-15 15:58:43.211 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-15 15:58:43.249 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-15 15:58:43.254 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-15 15:58:43.255 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-15 15:58:43.284 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-15 15:58:43.284 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-15 15:58:43.308 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-15 15:58:43.308 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-15 15:58:43.309 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-15 15:58:43.332 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-15 15:58:43.332 DEBUG 3992 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-15 15:58:44.693  INFO 3992 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3385]的信息
2018-07-15 15:58:44.695 DEBUG 3992 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 15:58:44.696 DEBUG 3992 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3385(Long)
2018-07-15 15:58:44.705  INFO 3992 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3371]的信息
2018-07-15 15:58:44.716  INFO 3992 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-15 15:58:44.725 DEBUG 3992 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 15:58:44.726 DEBUG 3992 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 15:58:44.727 DEBUG 3992 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3371(Long)
2018-07-15 15:58:44.729  INFO 3992 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3372]的信息
2018-07-15 15:58:44.729  INFO 3992 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3312]的信息
2018-07-15 15:58:44.752 DEBUG 3992 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 15:58:44.754 DEBUG 3992 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 15:58:44.756 DEBUG 3992 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-15 15:58:44.780 DEBUG 3992 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 15:58:44.782 DEBUG 3992 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 15:58:44.783 DEBUG 3992 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3372(Long)
2018-07-15 15:58:44.807 DEBUG 3992 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 15:58:44.808 DEBUG 3992 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 15:58:44.809 DEBUG 3992 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3312(Long)
2018-07-15 15:58:44.828 ERROR 3992 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-15 15:58:44.828 ERROR 3992 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-15 15:58:44.831 ERROR 3992 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-15 15:58:44.833 DEBUG 3992 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 15:58:44.850 ERROR 3992 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-15 15:58:44.882 ERROR 3992 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-15 15:58:50.056 DEBUG 3992 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 15:58:50.057 DEBUG 3992 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 15:58:50.079 DEBUG 3992 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:00:19.737  INFO 3632 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 3632 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 16:00:19.747 DEBUG 3632 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 16:00:19.748  INFO 3632 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 16:00:20.694  INFO 3632 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 16:00:20 CST 2018]; root of context hierarchy
2018-07-15 16:00:24.375  INFO 3632 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 16:00:25.244  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.245  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.245  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.246  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.246  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.246  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.247  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.247  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.247  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.247  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.247  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.248  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.248  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.248  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.249  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.249  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.250  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.250  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.250  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.250  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.251  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.251  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.251  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.251  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:00:25.252  WARN 3632 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 16:00:25.296  WARN 3632 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 16:00:26.544  INFO 3632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e6f2a6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:00:27.241  INFO 3632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a94ec2b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:00:27.295  INFO 3632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:00:27.304  INFO 3632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d781608b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:00:33.492  INFO 3632 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 16:00:33.510  INFO 3632 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 16:00:33.511  INFO 3632 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 16:00:33.635  INFO 3632 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 16:00:33.636  INFO 3632 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12949 ms
2018-07-15 16:00:33.913  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 16:00:33.913  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 16:00:33.914  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 16:00:33.914  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 16:00:33.914  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 16:00:33.914  INFO 3632 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 16:00:39.437  INFO 3632 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 16:00:42.665  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 16:00:20 CST 2018]; root of context hierarchy
2018-07-15 16:00:42.839  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:00:42.841  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:00:42.842  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:00:42.842  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:00:42.842  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:42.843  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:42.845  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:00:42.845  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:00:42.846  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 16:00:42.846  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:00:42.846  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:00:42.849  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:42.850  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:42.850  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:42.850  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.171  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.172  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.177  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:00:43.178  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:00:43.179  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:00:43.179  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.180  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.181  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:00:43.181  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:00:43.183  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 16:00:43.184  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.184  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 16:00:43.187  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.188  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.525  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:00:43.526  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.527  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.527  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.528  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.529  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.530  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.531  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.531  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.532  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:00:43.536  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.536  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.537  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.538  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:00:43.881  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.882  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.882  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:00:43.882  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.883  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.883  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.885  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.885  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.886  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.887  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.892  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:00:43.892  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.892  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.893  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:00:43.893  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.893  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:00:43.895  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.895  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:43.896  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:43.896  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.227  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.227  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 16:00:44.228  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 16:00:44.229  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.230  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.231  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.231  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.236  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.237  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:00:44.238  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.238  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.239  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:00:44.239  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.240  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.240  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.241  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:00:44.241  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.560  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 16:00:44.561  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 16:00:44.563  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.563  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.564  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.564  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.565  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 16:00:44.566  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:00:44.566  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:00:44.567  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.569  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 16:00:44.570  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:44.571  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:00:44.571  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:00:44.913  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:00:44.914  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.914  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:00:44.915  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.915  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:00:44.920  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 16:00:44.921  INFO 3632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:00:45.032  INFO 3632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:00:45.032  INFO 3632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:00:45.136  INFO 3632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:00:47.420  INFO 3632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 16:00:47.423  INFO 3632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 16:00:47.431  INFO 3632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 16:00:47.599  INFO 3632 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 16:00:47.611  INFO 3632 --- [main] com.yanda.Application                    : Started Application in 28.837 seconds (JVM running for 29.965)
2018-07-15 16:01:06.358  INFO 3632 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 16:01:06.359  INFO 3632 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 16:01:06.425  INFO 3632 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2018-07-15 16:15:58.204  INFO 7680 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7680 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 16:15:58.208 DEBUG 7680 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 16:15:58.209  INFO 7680 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 16:15:58.469  INFO 7680 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 16:15:58 CST 2018]; root of context hierarchy
2018-07-15 16:16:00.488  INFO 7680 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 16:16:01.137  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.138  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.139  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.139  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.139  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.139  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.139  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.140  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.140  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.140  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.141  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.141  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.141  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.141  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.142  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.142  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.142  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.143  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.143  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.143  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.143  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.143  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.144  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.144  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:16:01.144  WARN 7680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 16:16:01.185  WARN 7680 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 16:16:02.255  INFO 7680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dce798ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:16:02.667  INFO 7680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$f7c73114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:16:02.703  INFO 7680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:16:02.709  INFO 7680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$25f9cee8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:16:08.340  INFO 7680 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 16:16:08.354  INFO 7680 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 16:16:08.356  INFO 7680 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 16:16:08.487  INFO 7680 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 16:16:08.487  INFO 7680 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10023 ms
2018-07-15 16:16:08.801  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 16:16:08.802  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 16:16:08.802  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 16:16:08.802  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 16:16:08.802  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 16:16:08.803  INFO 7680 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 16:16:10.692  INFO 7680 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 16:16:14.255  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 16:15:58 CST 2018]; root of context hierarchy
2018-07-15 16:16:14.422  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:16:14.424  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:16:14.425  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:16:14.426  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.427  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:16:14.428  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.430  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:16:14.431  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:16:14.431  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 16:16:14.432  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:16:14.432  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.434  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.435  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.436  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.436  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.437  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.437  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.442  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:16:14.442  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:16:14.443  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:16:14.444  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.444  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:16:14.445  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:16:14.445  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.448  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 16:16:14.448  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 16:16:14.449  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.452  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.453  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.454  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:16:14.455  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.456  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.457  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.457  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.458  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.459  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.460  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.460  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.461  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:16:14.464  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.464  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.465  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.465  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:16:14.466  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:16:14.466  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.467  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.467  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.467  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.468  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.469  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.470  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.470  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.471  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.476  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:16:14.476  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:16:14.477  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:16:14.477  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.477  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.478  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.479  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.480  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.480  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.481  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.484  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.484  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 16:16:14.485  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 16:16:14.485  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.486  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.487  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.487  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.490  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.491  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:16:14.492  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.492  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:16:14.493  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.493  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.494  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:16:14.494  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 16:16:14.495  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 16:16:14.495  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.496  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.533  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.536  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 16:16:14.537  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.537  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.538  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.538  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.540  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.540  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:16:14.541  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:16:14.544  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 16:16:14.545  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.545  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:16:14.546  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.546  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:16:14.547  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.547  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:16:14.548  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:16:14.548  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.552  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 16:16:14.553  INFO 7680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:16:14.659  INFO 7680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:16:14.660  INFO 7680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:16:14.788  INFO 7680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:16:17.104  INFO 7680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 16:16:17.109  INFO 7680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 16:16:17.122  INFO 7680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 16:16:17.282  INFO 7680 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 16:16:17.293  INFO 7680 --- [main] com.yanda.Application                    : Started Application in 19.429 seconds (JVM running for 19.87)
2018-07-15 16:16:33.875  INFO 7680 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 16:16:33.875  INFO 7680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 16:16:33.950  INFO 7680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2018-07-15 16:24:31.368  INFO 7680 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-15 16:24:32.065 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.A.insertSelective                : ==>  Preparing: INSERT INTO t_attachment_info ( appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-15 16:24:32.085 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.A.insertSelective                : ==> Parameters: null, 拓尔思员工2017年度评估(String), 1531643068814(String), doc(String), E://resources/appendix/1531643068814(String), 30(Integer), 2018-07-15 16:24:31.14(Timestamp)
2018-07-15 16:24:32.111 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.A.insertSelective                : <==    Updates: 1
2018-07-15 16:24:32.115 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.A.insertSelective!selectKey      : ==>  Executing: SELECT LAST_INSERT_ID() 
2018-07-15 16:24:32.154 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.A.insertSelective!selectKey      : <==      Total: 1
2018-07-15 16:24:32.160 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.insertSelective  : ==>  Preparing: INSERT INTO t_paper_info ( paper_name,paper_desc,appendix_id,create_time,update_time ) VALUES( ?,?,?,?,? ) 
2018-07-15 16:24:32.161 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.insertSelective  : ==> Parameters: 试卷一(String), 试卷一(String), 6928(Long), 2018-07-15 16:24:31.141(Timestamp), 2018-07-15 16:24:31.141(Timestamp)
2018-07-15 16:24:32.190 DEBUG 7680 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.insertSelective  : <==    Updates: 1
2018-07-15 16:24:38.103 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:24:38.104 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:24:38.129 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:24:38.133 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:24:38.134 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-15 16:24:38.159 DEBUG 7680 --- [http-nio-8080-exec-6] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 1
2018-07-15 16:26:34.817 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.insertSelective                : ==>  Preparing: INSERT INTO t_attachment_info ( appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-15 16:26:34.820 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.insertSelective                : ==> Parameters: null, 拓尔思员工2017年度评估(String), 1531643188313(String), doc(String), E://resources/appendix/1531643188313(String), 30(Integer), 2018-07-15 16:26:34.546(Timestamp)
2018-07-15 16:26:34.845 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.insertSelective                : <==    Updates: 1
2018-07-15 16:26:34.846 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.insertSelective!selectKey      : ==>  Executing: SELECT LAST_INSERT_ID() 
2018-07-15 16:26:34.871 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.insertSelective!selectKey      : <==      Total: 1
2018-07-15 16:26:34.873 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.PaperInfoMapper.insertSelective  : ==>  Preparing: INSERT INTO t_paper_info ( paper_name,paper_desc,appendix_id,create_time,update_time ) VALUES( ?,?,?,?,? ) 
2018-07-15 16:26:34.877 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.PaperInfoMapper.insertSelective  : ==> Parameters: 试卷一(String), 试卷一11(String), 6929(Long), 2018-07-15 16:26:34.546(Timestamp), 2018-07-15 16:26:34.546(Timestamp)
2018-07-15 16:26:34.903 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.PaperInfoMapper.insertSelective  : <==    Updates: 1
2018-07-15 16:27:29.256 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:27:29.257 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:27:29.282 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:27:29.284 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:27:29.286 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-15 16:27:29.313 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 2
2018-07-15 16:27:48.531 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.A.insertSelective                : ==>  Preparing: INSERT INTO t_attachment_info ( appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-15 16:27:48.532 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.A.insertSelective                : ==> Parameters: null, 拓尔思员工2017年度评估(String), 1531643260642(String), doc(String), E://resources/appendix/1531643260642(String), 30(Integer), 2018-07-15 16:27:47.771(Timestamp)
2018-07-15 16:27:48.657 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.A.insertSelective                : <==    Updates: 1
2018-07-15 16:27:48.658 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.A.insertSelective!selectKey      : ==>  Executing: SELECT LAST_INSERT_ID() 
2018-07-15 16:27:48.683 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.A.insertSelective!selectKey      : <==      Total: 1
2018-07-15 16:27:48.685 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.insertSelective  : ==>  Preparing: INSERT INTO t_paper_info ( paper_name,paper_desc,appendix_id,create_time,update_time ) VALUES( ?,?,?,?,? ) 
2018-07-15 16:27:48.687 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.insertSelective  : ==> Parameters: 试试(String), 是很低(String), 6930(Long), 2018-07-15 16:27:47.771(Timestamp), 2018-07-15 16:27:47.771(Timestamp)
2018-07-15 16:27:48.822 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.insertSelective  : <==    Updates: 1
2018-07-15 16:27:49.076 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:27:49.077 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:27:49.102 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:27:49.103 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:27:49.104 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-15 16:27:49.129 DEBUG 7680 --- [http-nio-8080-exec-3] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 3
2018-07-15 16:28:52.111  WARN 7680 --- [http-nio-8080-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2018-07-15 16:29:49.030  INFO 7680 --- [http-nio-8080-exec-9] com.yanda.service.impl.PaperServiceImpl  : 删除试题，清空试题缓存数据...
2018-07-15 16:29:49.055 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,paper_name,paper_desc,appendix_id,create_time,update_time FROM t_paper_info WHERE id = ? 
2018-07-15 16:29:49.056 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 1(Integer)
2018-07-15 16:29:49.082 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-15 16:29:49.113 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 16:29:49.113 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 6928(Long)
2018-07-15 16:29:49.141 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 16:29:49.142 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 16:29:49.143 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.deleteByPrimaryKey             : ==> Parameters: 6928(Long)
2018-07-15 16:29:49.167 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.A.deleteByPrimaryKey             : <==    Updates: 1
2018-07-15 16:29:49.220 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_paper_info WHERE id = ? 
2018-07-15 16:29:49.221 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 1(Integer)
2018-07-15 16:29:49.247 DEBUG 7680 --- [http-nio-8080-exec-9] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-15 16:29:49.316 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:29:49.317 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:29:49.342 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:29:49.343 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:29:49.344 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-15 16:29:49.372 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 2
2018-07-15 16:29:57.797 DEBUG 7680 --- [http-nio-8080-exec-1] c.y.m.g.P.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_paper_info SET paper_name = ?,paper_desc = ?,appendix_id = ?,create_time = ?,update_time = ? WHERE id = ? 
2018-07-15 16:29:57.799 DEBUG 7680 --- [http-nio-8080-exec-1] c.y.m.g.P.updateByPrimaryKeySelective    : ==> Parameters: 试卷一(String), 试卷一112(String), 6929(Long), 2018-07-15 16:26:34.0(Timestamp), 2018-07-15 16:29:57.515(Timestamp), 2(Integer)
2018-07-15 16:29:57.826 DEBUG 7680 --- [http-nio-8080-exec-1] c.y.m.g.P.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-15 16:29:57.910 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:29:57.912 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:29:57.936 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:29:57.937 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:29:57.937 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-15 16:29:57.963 DEBUG 7680 --- [http-nio-8080-exec-2] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 2
2018-07-15 16:56:57.185 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-15 16:56:57.187 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-15 16:56:57.219 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:56:57.224 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time from t_paper_info WHERE ( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-15 16:56:57.226 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: %%(String), %%(String), 4(Integer)
2018-07-15 16:56:57.257 DEBUG 7680 --- [http-nio-8080-exec-10] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 2
2018-07-15 16:57:09.139  INFO 9176 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9176 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 16:57:09.142 DEBUG 9176 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 16:57:09.142  INFO 9176 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 16:57:09.363  INFO 9176 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 15 16:57:09 CST 2018]; root of context hierarchy
2018-07-15 16:57:11.017  INFO 9176 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 16:57:11.606  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.607  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.607  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.607  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.607  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.608  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.608  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.608  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.608  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.609  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.610  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.610  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.610  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.611  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.611  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.611  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.612  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.612  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.612  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.612  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.612  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.613  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.613  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.613  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 16:57:11.613  WARN 9176 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 16:57:11.645  WARN 9176 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 16:57:12.485  INFO 9176 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2e458d21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:57:12.801  INFO 9176 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$4925256b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:57:12.832  INFO 9176 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:57:12.838  INFO 9176 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$7757c33f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 16:57:18.401  INFO 9176 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 16:57:18.414  INFO 9176 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 16:57:18.416  INFO 9176 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 16:57:18.552  INFO 9176 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 16:57:18.552  INFO 9176 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9195 ms
2018-07-15 16:57:18.869  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 16:57:18.870  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 16:57:18.870  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 16:57:18.871  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 16:57:18.871  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 16:57:18.871  INFO 9176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 16:57:21.337  INFO 9176 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 16:57:24.959  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 15 16:57:09 CST 2018]; root of context hierarchy
2018-07-15 16:57:25.087  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.089  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:57:25.090  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:57:25.090  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:57:25.091  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 16:57:25.091  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.093  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:57:25.093  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 16:57:25.093  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 16:57:25.094  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.094  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:57:25.096  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.096  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.096  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.097  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.097  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.098  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.102  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:57:25.102  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 16:57:25.103  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:57:25.103  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.103  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:57:25.104  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.104  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:57:25.106  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 16:57:25.106  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 16:57:25.107  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.110  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.110  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.110  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:57:25.111  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.111  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.112  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.112  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.112  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.113  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.113  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.114  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.115  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:57:25.118  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.118  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.118  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.119  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:57:25.119  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.119  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.120  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.120  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 16:57:25.120  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.121  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.123  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.123  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.124  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.124  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.131  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:57:25.131  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:57:25.132  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.132  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:57:25.132  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.133  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.135  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.135  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.135  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.136  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.139  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.140  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 16:57:25.140  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 16:57:25.141  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.142  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.143  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.143  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.147  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.148  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 16:57:25.148  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.149  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:57:25.149  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.149  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:57:25.150  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.150  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 16:57:25.150  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 16:57:25.151  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.151  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.152  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.154  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 16:57:25.154  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.154  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.155  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.155  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.156  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:57:25.157  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 16:57:25.157  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.159  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 16:57:25.159  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.160  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 16:57:25.160  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.160  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.160  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 16:57:25.161  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.161  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 16:57:25.161  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 16:57:25.163  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 16:57:25.164  INFO 9176 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 16:57:25.251  INFO 9176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:57:25.251  INFO 9176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:57:25.340  INFO 9176 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 16:57:26.710  INFO 9176 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 16:57:26.714  INFO 9176 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 16:57:26.724  INFO 9176 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 16:57:26.853  INFO 9176 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 16:57:26.862  INFO 9176 --- [main] com.yanda.Application                    : Started Application in 18.026 seconds (JVM running for 18.391)
2018-07-15 16:57:36.711  INFO 9176 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 16:57:36.712  INFO 9176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 16:57:36.803  INFO 9176 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2018-07-15 16:57:37.805  INFO 9176 --- [http-nio-8080-exec-4] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 16:57:38.046  INFO 9176 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-15 16:57:38.825 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 16:57:38.869 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 16:57:38.915 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:57:38.918 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 16:57:38.919 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 16:57:38.952 DEBUG 9176 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 16:58:45.550  INFO 9176 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 16:58:45.581 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 16:58:45.581 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 16:58:45.605 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 16:58:45.606 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 16:58:45.608 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 16:58:45.634 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 17:28:18.007  INFO 9176 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 17:28:37.466 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 17:28:37.467 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 17:28:37.491 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 17:28:37.494 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 17:28:37.495 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 17:28:37.521 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 17:31:49.416 ERROR 9176 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 数据类型转换失败：传入的附件ID=[undefined]不是number类型

java.lang.NumberFormatException: For input string: "undefined"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_51]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_51]
	at com.yanda.controller.AttachmentController.readFile(AttachmentController.java:196) ~[classes/:na]
	at com.yanda.controller.AttachmentController$$FastClassBySpringCGLIB$$ea86d919.invoke(<generated>) [classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.AttachmentController$$EnhancerBySpringCGLIB$$78da683c.readFile(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-15 17:32:49.206 ERROR 9176 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 数据类型转换失败：传入的附件ID=[undefined]不是number类型

java.lang.NumberFormatException: For input string: "undefined"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_51]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_51]
	at com.yanda.controller.AttachmentController.readFile(AttachmentController.java:196) ~[classes/:na]
	at com.yanda.controller.AttachmentController$$FastClassBySpringCGLIB$$ea86d919.invoke(<generated>) [classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.AttachmentController$$EnhancerBySpringCGLIB$$78da683c.readFile(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-15 17:35:45.067  INFO 9176 --- [http-nio-8080-exec-6] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 17:35:52.195  INFO 9176 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 17:35:52.471 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 17:35:52.471 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 17:35:52.507 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 17:35:52.510 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 17:35:52.511 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 17:35:52.536 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 17:36:04.207 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 17:36:04.208 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 17:36:04.231 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 17:36:04.234 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 17:36:04.235 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 17:36:04.263 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 17:36:28.268 ERROR 9176 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 数据类型转换失败：传入的附件ID=[undefined]不是number类型

java.lang.NumberFormatException: For input string: "undefined"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_51]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_51]
	at com.yanda.controller.AttachmentController.readFile(AttachmentController.java:196) ~[classes/:na]
	at com.yanda.controller.AttachmentController$$FastClassBySpringCGLIB$$ea86d919.invoke(<generated>) [classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.AttachmentController$$EnhancerBySpringCGLIB$$78da683c.readFile(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-15 17:37:54.031  INFO 9176 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 17:37:54.062 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 17:37:54.063 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 17:37:54.090 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 17:37:54.091 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 17:37:54.092 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 17:37:54.124 DEBUG 9176 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 17:38:05.571  INFO 9176 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[6929]的信息
2018-07-15 17:38:05.572 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 17:38:05.572 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 6929(Long)
2018-07-15 17:38:05.598 DEBUG 9176 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 17:41:48.293  INFO 9176 --- [http-nio-8080-exec-8] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[6930]的信息
2018-07-15 17:41:48.321 DEBUG 9176 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-15 17:41:48.322 DEBUG 9176 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 6930(Long)
2018-07-15 17:41:48.351 DEBUG 9176 --- [http-nio-8080-exec-8] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-15 17:44:52.335  INFO 9176 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-15 17:44:52.363 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-15 17:44:52.363 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-15 17:44:52.389 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-15 17:44:52.390 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-15 17:44:52.391 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-15 17:44:52.421 DEBUG 9176 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-15 18:35:32.797  INFO 4932 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4932 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 18:35:32.806 DEBUG 4932 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 18:35:32.807  INFO 4932 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 18:35:33.462  INFO 4932 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:35:33 CST 2018]; root of context hierarchy
2018-07-15 18:35:36.529  INFO 4932 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 18:35:37.832  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.833  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.834  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.836  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.838  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.838  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.839  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.840  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.841  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.841  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.844  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.846  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.847  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.848  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.849  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.849  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.849  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.849  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.850  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.850  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.850  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.850  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.851  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.851  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:35:37.852  WARN 4932 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 18:35:37.965  WARN 4932 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 18:35:39.370  INFO 4932 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eaac8dfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:35:39.884  INFO 4932 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$58c2644] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:35:39.921  INFO 4932 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:35:39.929  INFO 4932 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$33bec418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:35:45.871  INFO 4932 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 18:35:45.901  INFO 4932 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 18:35:45.904  INFO 4932 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 18:35:46.147  INFO 4932 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 18:35:46.147  INFO 4932 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12695 ms
2018-07-15 18:35:46.677  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 18:35:46.679  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 18:35:46.679  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 18:35:46.679  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 18:35:46.680  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 18:35:46.681  INFO 4932 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 18:35:50.579  INFO 4932 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 18:35:54.489  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:35:33 CST 2018]; root of context hierarchy
2018-07-15 18:35:54.678  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:35:54.680  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:35:54.681  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:35:54.682  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:35:54.683  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:35:54.684  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.685  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.689  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:35:54.690  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:35:54.690  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 18:35:54.691  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:35:54.691  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:35:54.694  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.756  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.756  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.757  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.758  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.758  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.763  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:35:54.764  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:35:54.764  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:35:54.765  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.766  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:35:54.766  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:54.767  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:35:54.768  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 18:35:54.769  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 18:35:54.770  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.136  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.137  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.137  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:35:55.138  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.138  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.139  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.140  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.141  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.142  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.142  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.143  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.143  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:35:55.147  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.147  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.148  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.511  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:35:55.511  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.511  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.512  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.512  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.513  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.513  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:35:55.515  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.516  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.516  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.517  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.522  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:35:55.523  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:35:55.524  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:35:55.524  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.524  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.525  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.527  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.527  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.528  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:55.529  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.891  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.892  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 18:35:55.892  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 18:35:55.893  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.895  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.896  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.896  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.901  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.904  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:35:55.906  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.906  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:35:55.907  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.908  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:55.909  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 18:35:55.909  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 18:35:55.911  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:35:56.297  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.298  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.299  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.308  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 18:35:56.308  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.309  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.310  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.310  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.312  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:35:56.314  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:35:56.314  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.320  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 18:35:56.322  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:56.323  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:35:56.324  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:35:56.324  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.325  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:35:56.706  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.707  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:35:56.707  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:35:56.711  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 18:35:56.711  INFO 4932 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:35:56.839  INFO 4932 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:35:56.839  INFO 4932 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:35:56.972  INFO 4932 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:35:59.676  INFO 4932 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 18:35:59.680  INFO 4932 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 18:35:59.695  INFO 4932 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 18:35:59.880  INFO 4932 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 18:35:59.889  INFO 4932 --- [main] com.yanda.Application                    : Started Application in 27.864 seconds (JVM running for 29.22)
2018-07-15 18:43:26.724  INFO 7816 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7816 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 18:43:26.792 DEBUG 7816 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 18:43:26.793  INFO 7816 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 18:43:27.527  INFO 7816 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:43:27 CST 2018]; root of context hierarchy
2018-07-15 18:43:30.871  INFO 7816 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 18:43:31.770  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.771  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.771  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.772  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.772  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.772  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.773  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.773  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.773  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.774  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.774  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.774  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.775  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.775  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.775  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.776  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.777  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.777  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.777  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.778  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.779  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.779  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.779  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.780  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:43:31.781  WARN 7816 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 18:43:31.840  WARN 7816 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 18:43:33.519  INFO 7816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8aa19d5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:43:34.217  INFO 7816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a58135a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:43:34.258  INFO 7816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:43:34.261  INFO 7816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d3b3d37a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:43:40.392  INFO 7816 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 18:43:40.419  INFO 7816 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 18:43:40.422  INFO 7816 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 18:43:40.731  INFO 7816 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 18:43:40.732  INFO 7816 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 13212 ms
2018-07-15 18:43:41.397  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 18:43:41.399  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 18:43:41.399  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 18:43:41.399  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 18:43:41.400  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 18:43:41.400  INFO 7816 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 18:43:57.615  INFO 7816 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 18:44:01.816  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:43:27 CST 2018]; root of context hierarchy
2018-07-15 18:44:02.025  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.027  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:44:02.028  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:44:02.029  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:44:02.030  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:44:02.031  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:44:02.031  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.034  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:44:02.036  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:44:02.037  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 18:44:02.038  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.038  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:44:02.041  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.222  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.223  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.223  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.224  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.224  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.229  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:44:02.230  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:44:02.230  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:44:02.231  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.231  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:44:02.232  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:44:02.233  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.236  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 18:44:02.237  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 18:44:02.238  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.240  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.241  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.241  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:44:02.242  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.665  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.666  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.667  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.667  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.669  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.670  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.671  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.672  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:44:02.676  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.677  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.677  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:44:02.678  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:44:02.679  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:02.679  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.057  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.058  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.058  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:44:03.059  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.060  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.061  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.062  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.062  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.068  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:44:03.068  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:44:03.069  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.069  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:44:03.069  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.070  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.072  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.072  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.073  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.074  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.459  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.460  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 18:44:03.460  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 18:44:03.461  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.462  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.463  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.463  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.466  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.467  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:44:03.467  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.468  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:44:03.469  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.469  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.470  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 18:44:03.470  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 18:44:03.470  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:44:03.844  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.845  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.846  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.848  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 18:44:03.848  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.849  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.849  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.850  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.851  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:44:03.852  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:44:03.852  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.854  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 18:44:03.855  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.855  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:44:03.856  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:44:03.856  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.857  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:44:03.857  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:03.858  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:44:04.271  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:44:04.276  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 18:44:04.277  INFO 7816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:44:04.404  INFO 7816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:44:04.405  INFO 7816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:44:04.543  INFO 7816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:44:08.417  INFO 7816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 18:44:08.422  INFO 7816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 18:44:08.439  INFO 7816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 18:44:08.735  INFO 7816 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 18:44:08.747  INFO 7816 --- [main] com.yanda.Application                    : Started Application in 42.94 seconds (JVM running for 45.364)
2018-07-15 18:45:57.657  INFO 7816 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 18:45:57.658  INFO 7816 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 18:45:57.740  INFO 7816 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2018-07-15 18:46:11.410  INFO 7816 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-15 18:46:12.144 DEBUG 7816 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-15 18:46:12.612 DEBUG 7816 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-15 18:46:12.662 DEBUG 7816 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-15 18:46:14.797 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-15 18:46:14.798 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-15 18:46:14.824 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-15 18:46:14.828 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-15 18:46:14.829 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-15 18:46:14.859 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-15 18:46:14.859 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-15 18:46:14.884 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-15 18:46:14.884 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-15 18:46:14.885 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-15 18:46:14.908 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-15 18:46:14.909 DEBUG 7816 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-15 18:46:25.812 ERROR 7816 --- [http-nio-8080-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-8] Exception processing template "attach/getUrl": Error resolving template "attach/getUrl", template might not exist or might not be accessible by any of the configured Template Resolvers
2018-07-15 18:46:25.824 ERROR 7816 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[.[dispatcherServlet]      : Servlet.service() for servlet [dispatcherServlet] in context with path [/yanda] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "attach/getUrl", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause

org.thymeleaf.exceptions.TemplateInputException: Error resolving template "attach/getUrl", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246) ~[thymeleaf-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104) ~[thymeleaf-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060) ~[thymeleaf-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011) ~[thymeleaf-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335) ~[thymeleaf-spring4-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190) ~[thymeleaf-spring4-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) ~[classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-15 18:48:55.522  INFO 16472 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16472 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 18:48:56.503 DEBUG 16472 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 18:48:56.504  INFO 16472 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 18:48:56.909  INFO 16472 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:48:56 CST 2018]; root of context hierarchy
2018-07-15 18:48:59.157  INFO 16472 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 18:48:59.870  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.870  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.871  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.871  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.872  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.872  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.872  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.872  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.873  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.873  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.873  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.873  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.874  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.874  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.874  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.874  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:48:59.875  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.069  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.069  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.069  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.070  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.070  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.070  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.070  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 18:49:00.071  WARN 16472 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 18:49:00.113  WARN 16472 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 18:49:02.023  INFO 16472 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4fdf9f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:49:02.500  INFO 16472 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$bfdd9241] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:49:02.559  INFO 16472 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:49:02.567  INFO 16472 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ee103015] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 18:49:08.623  INFO 16472 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 18:49:08.652  INFO 16472 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 18:49:08.654  INFO 16472 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 18:49:08.930  INFO 16472 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 18:49:08.931  INFO 16472 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12028 ms
2018-07-15 18:49:09.412  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 18:49:09.413  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 18:49:09.413  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 18:49:09.413  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 18:49:09.414  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 18:49:09.414  INFO 16472 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 18:49:16.581  INFO 16472 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 18:49:20.411  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 18:48:56 CST 2018]; root of context hierarchy
2018-07-15 18:49:20.589  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:49:20.592  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:49:20.593  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 18:49:20.593  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:49:20.594  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:49:20.594  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.595  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.597  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:49:20.598  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 18:49:20.599  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 18:49:20.600  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:49:20.600  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:49:20.603  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.603  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.604  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.846  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.847  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.848  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.853  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:49:20.854  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 18:49:20.854  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:49:20.855  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.855  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:49:20.856  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.857  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:49:20.859  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:20.860  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 18:49:20.861  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 18:49:20.863  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.131  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.132  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:49:21.133  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.134  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.135  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.136  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.136  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.137  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.138  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.138  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.139  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:49:21.142  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.143  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.143  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.419  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:49:21.420  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.420  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.421  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.421  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.422  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.423  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 18:49:21.425  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.425  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.426  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.426  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.432  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:49:21.433  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:49:21.434  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.434  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.435  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.435  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:49:21.693  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.694  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.694  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:21.695  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.698  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.699  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 18:49:21.699  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 18:49:21.700  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.702  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.702  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.703  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.706  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.706  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 18:49:21.707  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.708  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:49:21.708  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.964  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.964  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.965  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.965  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:49:21.966  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 18:49:21.966  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 18:49:21.967  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.969  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 18:49:21.970  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.971  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.971  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.972  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:21.973  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:49:21.974  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 18:49:21.974  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:22.238  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 18:49:22.240  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:22.241  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 18:49:22.241  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 18:49:22.242  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:22.242  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 18:49:22.243  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 18:49:22.243  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:22.243  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 18:49:22.246  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 18:49:22.247  INFO 16472 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 18:49:22.359  INFO 16472 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:49:22.359  INFO 16472 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:49:22.480  INFO 16472 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 18:49:24.987  INFO 16472 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 18:49:24.990  INFO 16472 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 18:49:25.000  INFO 16472 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 18:49:25.161  INFO 16472 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 18:49:25.172  INFO 16472 --- [main] com.yanda.Application                    : Started Application in 30.304 seconds (JVM running for 38.383)
2018-07-15 18:49:53.494  INFO 16472 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 18:49:53.497  INFO 16472 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 18:49:53.573  INFO 16472 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2018-07-15 19:00:22.443  INFO 16576 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16576 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-15 19:00:22.514 DEBUG 16576 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-15 19:00:22.515  INFO 16576 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-15 19:00:22.988  INFO 16576 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 19:00:22 CST 2018]; root of context hierarchy
2018-07-15 19:00:25.292  INFO 16576 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-15 19:00:25.959  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.959  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.960  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.960  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.960  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.960  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.960  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.961  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.961  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.961  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.961  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.961  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.962  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.962  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.962  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.962  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:25.963  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.045  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.045  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.046  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.046  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.046  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.046  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.046  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-15 19:00:26.047  WARN 16576 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-15 19:00:26.089  WARN 16576 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-15 19:00:27.352  INFO 16576 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$12798ea7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 19:00:27.762  INFO 16576 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$2d5926f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 19:00:27.797  INFO 16576 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 19:00:27.804  INFO 16576 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$5b8bc4c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-15 19:00:33.620  INFO 16576 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-15 19:00:33.646  INFO 16576 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-15 19:00:33.647  INFO 16576 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-15 19:00:33.871  INFO 16576 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-15 19:00:33.871  INFO 16576 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10889 ms
2018-07-15 19:00:34.341  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-15 19:00:34.342  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-15 19:00:34.343  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-15 19:00:34.343  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-15 19:00:34.343  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-15 19:00:34.344  INFO 16576 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-15 19:00:37.349  INFO 16576 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-15 19:00:42.062  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 15 19:00:22 CST 2018]; root of context hierarchy
2018-07-15 19:00:42.241  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.243  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 19:00:42.244  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 19:00:42.244  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 19:00:42.244  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 19:00:42.245  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-15 19:00:42.246  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.249  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 19:00:42.250  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-15 19:00:42.250  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-15 19:00:42.251  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 19:00:42.251  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.254  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.255  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.311  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.312  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.312  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.313  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.318  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 19:00:42.318  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-15 19:00:42.319  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 19:00:42.319  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.320  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 19:00:42.320  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.321  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 19:00:42.322  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.323  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-15 19:00:42.324  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-15 19:00:42.327  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.398  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.399  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 19:00:42.399  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.400  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.401  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.401  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.402  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.403  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.404  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.404  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.405  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 19:00:42.408  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.409  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.409  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.410  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 19:00:42.491  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.492  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.493  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.494  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-15 19:00:42.494  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.495  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.497  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.497  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.498  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.498  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.504  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 19:00:42.505  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 19:00:42.505  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.506  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 19:00:42.506  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.580  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.583  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.584  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.584  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.585  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.588  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.588  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-15 19:00:42.589  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-15 19:00:42.590  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.591  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.592  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.592  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.596  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.597  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-15 19:00:42.598  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.598  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.662  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 19:00:42.663  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-15 19:00:42.663  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.664  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-15 19:00:42.664  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-15 19:00:42.665  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.665  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.666  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.668  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-15 19:00:42.669  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.670  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.670  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.671  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.672  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.673  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-15 19:00:42.673  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-15 19:00:42.675  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-15 19:00:42.744  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.744  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-15 19:00:42.744  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.745  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-15 19:00:42.745  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.746  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-15 19:00:42.746  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.747  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-15 19:00:42.751  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-15 19:00:42.752  INFO 16576 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-15 19:00:42.863  INFO 16576 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 19:00:42.863  INFO 16576 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 19:00:42.980  INFO 16576 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-15 19:00:45.614  INFO 16576 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-15 19:00:45.618  INFO 16576 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-15 19:00:45.632  INFO 16576 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-15 19:00:45.798  INFO 16576 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-15 19:00:45.809  INFO 16576 --- [main] com.yanda.Application                    : Started Application in 23.992 seconds (JVM running for 26.878)
2018-07-15 19:01:25.433  INFO 16576 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-15 19:01:25.433  INFO 16576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-15 19:01:25.528  INFO 16576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2018-07-16 10:46:37.729  INFO 14792 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 14792 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-16 10:46:37.845 DEBUG 14792 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-16 10:46:37.849  INFO 14792 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-16 10:46:39.120  INFO 14792 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 16 10:46:39 CST 2018]; root of context hierarchy
2018-07-16 10:46:44.165  INFO 14792 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-16 10:46:45.498  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.499  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.499  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.499  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.500  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.501  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.501  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.502  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.505  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.505  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.505  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.506  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.506  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.507  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.507  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.507  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.507  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.507  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.508  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.508  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.508  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.508  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.511  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.512  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 10:46:45.513  WARN 14792 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-16 10:46:45.582  WARN 14792 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-16 10:46:46.942  INFO 14792 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e513c324] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 10:46:47.349  INFO 14792 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$fff35b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 10:46:47.380  INFO 14792 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 10:46:47.383  INFO 14792 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$2e25f942] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 10:46:53.251  INFO 14792 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-16 10:46:53.273  INFO 14792 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-16 10:46:53.275  INFO 14792 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-16 10:46:53.532  INFO 14792 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-16 10:46:53.532  INFO 14792 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 14427 ms
2018-07-16 10:46:53.912  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-16 10:46:53.967  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-16 10:46:53.968  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-16 10:46:53.968  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-16 10:46:53.968  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-16 10:46:53.969  INFO 14792 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-16 10:46:56.396  INFO 14792 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-16 10:46:59.698  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 16 10:46:39 CST 2018]; root of context hierarchy
2018-07-16 10:46:59.849  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-16 10:46:59.851  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 10:46:59.852  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-16 10:46:59.853  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 10:46:59.854  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 10:46:59.854  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 10:46:59.855  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 10:46:59.857  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-16 10:46:59.858  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-16 10:46:59.859  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-16 10:46:59.860  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 10:46:59.860  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 10:46:59.863  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-16 10:46:59.863  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-16 10:46:59.863  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-16 10:46:59.864  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.141  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.142  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.145  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-16 10:47:00.146  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-16 10:47:00.146  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 10:47:00.146  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.147  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 10:47:00.147  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 10:47:00.148  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.149  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-16 10:47:00.150  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-16 10:47:00.150  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.153  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.153  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.437  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-16 10:47:00.438  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.439  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.439  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.439  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.440  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.441  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.441  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.442  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.442  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-16 10:47:00.446  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.446  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.447  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.447  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 10:47:00.736  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.736  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.737  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.737  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.737  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-16 10:47:00.738  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.739  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.740  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.740  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.740  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.744  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 10:47:00.745  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.745  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.745  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 10:47:00.745  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 10:47:00.746  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.747  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.747  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.748  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:00.748  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.750  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:00.750  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-16 10:47:00.751  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-16 10:47:01.067  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.068  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.069  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.069  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.074  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.075  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-16 10:47:01.075  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.075  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.076  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.076  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.076  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 10:47:01.076  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.077  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.077  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-16 10:47:01.078  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-16 10:47:01.362  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-16 10:47:01.364  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.364  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.365  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.365  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.365  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-16 10:47:01.367  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-16 10:47:01.367  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-16 10:47:01.367  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.370  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-16 10:47:01.370  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:01.371  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 10:47:01.371  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-16 10:47:01.371  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 10:47:01.371  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 10:47:01.372  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.372  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.372  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 10:47:01.376  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-16 10:47:01.667  INFO 14792 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 10:47:01.757  INFO 14792 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 10:47:01.757  INFO 14792 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 10:47:01.838  INFO 14792 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 10:47:03.337  INFO 14792 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-16 10:47:03.340  INFO 14792 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-16 10:47:03.353  INFO 14792 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-16 10:47:03.504  INFO 14792 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-16 10:47:03.512  INFO 14792 --- [main] com.yanda.Application                    : Started Application in 27.012 seconds (JVM running for 28.093)
2018-07-16 10:54:46.225  INFO 14792 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-16 10:54:46.226  INFO 14792 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-16 10:54:46.255  INFO 14792 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-07-16 10:54:46.547  INFO 14792 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-16 10:54:47.176 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-16 10:54:47.199 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-16 10:54:47.239 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-16 10:54:47.242 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-16 10:54:47.243 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-16 10:54:47.273 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-16 10:54:47.274 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-16 10:54:47.301 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-16 10:54:47.301 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-16 10:54:47.302 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-16 10:54:47.329 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-16 10:54:47.329 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-16 10:54:48.605 ERROR 14792 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-16 10:54:48.639 ERROR 14792 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-16 10:54:48.652 ERROR 14792 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-16 10:54:48.682 ERROR 14792 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-16 10:54:48.682 ERROR 14792 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-16 10:54:51.717  INFO 14792 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 10:54:51.801 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 10:54:51.802 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 10:54:51.830 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:54:51.833 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 10:54:51.834 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 10:54:51.868 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 10:56:57.233  INFO 14792 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 10:56:57.270 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 10:56:57.271 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 10:56:57.299 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:56:57.300 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 10:56:57.301 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 10:56:57.334 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 10:57:29.469 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 10:57:29.470 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 10:57:29.498 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:57:29.499 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 10:57:29.499 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 10:57:29.528 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 10:57:42.949  INFO 14792 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 10:57:42.952 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 10:57:42.952 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 10:57:42.980 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:57:42.981 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 10:57:42.982 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 10:57:43.014 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 10:57:46.853 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 10:57:46.854 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 10:57:46.882 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:57:46.884 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 10:57:46.885 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 10:57:46.918 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 10:58:49.639  INFO 14792 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 10:58:49.670 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 10:58:49.671 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 10:58:49.699 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:58:49.701 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 10:58:49.702 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 10:58:49.738 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 10:58:50.891 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 10:58:50.892 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 10:58:50.920 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:58:50.922 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 10:58:50.922 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 10:58:50.951 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 10:59:42.311  INFO 14792 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 10:59:42.313 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 10:59:42.314 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 10:59:42.342 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:59:42.345 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 10:59:42.345 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 10:59:42.378 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 10:59:46.841 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 10:59:46.841 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 10:59:46.870 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 10:59:46.870 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 10:59:46.871 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 10:59:46.901 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 11:00:27.540  INFO 14792 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:00:27.543 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:00:27.543 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:00:27.573 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:00:27.574 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:00:27.576 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:00:27.612 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 11:00:28.793 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 11:00:28.793 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 11:00:28.821 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:00:28.822 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 11:00:28.822 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 11:00:28.851 DEBUG 14792 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 11:00:42.601 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-16 11:00:42.601 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-16 11:00:42.646 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:00:42.647 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-16 11:00:42.647 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-16 11:00:42.676 DEBUG 14792 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-16 11:00:48.764 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,exp_time,nick_name,is_forever ) VALUES( ?,?,?,?,?,?,?,? ) 
2018-07-16 11:00:48.768 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==> Parameters: 20180716103615(String), 123(String), 1(Integer), 2018-07-16 11:00:48.76(Timestamp), 2018-07-16 11:00:48.76(Timestamp), 2018-07-17 11:00:48.76(Timestamp), (String), true(Boolean)
2018-07-16 11:00:48.799 DEBUG 14792 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-16 11:00:48.871  INFO 14792 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:00:48.876 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:00:48.877 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:00:48.906 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:00:48.907 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:00:48.908 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:00:48.939 DEBUG 14792 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 11:01:38.748 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-16 11:01:38.749 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1036(Integer)
2018-07-16 11:01:38.779 DEBUG 14792 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-16 11:01:38.802  INFO 14792 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:01:38.804 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:01:38.804 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:01:38.833 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:01:38.834 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:01:38.835 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:01:38.868 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 11:05:43.117  INFO 14792 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:05:53.695 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-16 11:05:53.698 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-16 11:05:53.730 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-16 11:05:53.732 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-16 11:05:53.733 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-16 11:05:53.766 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-16 11:05:53.767 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-16 11:05:53.794 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-16 11:05:53.796 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-16 11:05:53.798 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-16 11:05:53.826 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-16 11:05:53.827 DEBUG 14792 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-16 11:05:54.736  INFO 14792 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-16 11:05:54.737 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-16 11:05:54.737 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-16 11:05:54.738 ERROR 14792 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-16 11:05:54.764 DEBUG 14792 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-16 11:05:54.793 ERROR 14792 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-16 11:05:54.811 ERROR 14792 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-16 11:05:54.815 ERROR 14792 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-16 11:05:54.822 ERROR 14792 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-16 11:06:02.302 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:06:02.302 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:06:02.326 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:06:02.327 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:06:02.327 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:06:02.355 DEBUG 14792 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 11:06:35.007  INFO 14792 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:06:35.011 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:06:35.012 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:06:35.035 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:06:35.036 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:06:35.037 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:06:35.063 DEBUG 14792 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 11:08:16.214  INFO 14792 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-16 11:08:16.240 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-16 11:08:16.241 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-16 11:08:16.264 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-16 11:08:16.265 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-16 11:08:16.266 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-16 11:08:16.292 DEBUG 14792 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-16 17:15:49.619  INFO 9468 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9468 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-16 17:15:49.964 DEBUG 9468 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-16 17:15:49.965  INFO 9468 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-16 17:15:50.408  INFO 9468 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 16 17:15:50 CST 2018]; root of context hierarchy
2018-07-16 17:15:52.370  INFO 9468 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-16 17:15:52.980  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.980  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.980  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.981  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.981  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.981  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.982  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.982  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.982  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.982  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.983  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.983  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.983  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.983  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.984  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.984  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.984  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.985  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.985  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.985  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.985  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.986  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.986  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.986  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-16 17:15:52.986  WARN 9468 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-16 17:15:53.018  WARN 9468 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-16 17:15:53.884  INFO 9468 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f32c4d7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 17:15:54.230  INFO 9468 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e0be5c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 17:15:54.264  INFO 9468 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 17:15:54.270  INFO 9468 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3c3e839b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-16 17:15:59.990  INFO 9468 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-16 17:16:00.021  INFO 9468 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-16 17:16:00.023  INFO 9468 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-16 17:16:00.231  INFO 9468 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-16 17:16:00.231  INFO 9468 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9828 ms
2018-07-16 17:16:00.642  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-16 17:16:00.643  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-16 17:16:00.643  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-16 17:16:00.643  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-16 17:16:00.644  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-16 17:16:00.644  INFO 9468 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-16 17:16:02.773  INFO 9468 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-16 17:16:05.928  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Mon Jul 16 17:15:50 CST 2018]; root of context hierarchy
2018-07-16 17:16:06.054  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.055  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 17:16:06.056  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 17:16:06.057  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 17:16:06.057  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.058  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-16 17:16:06.058  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.060  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-16 17:16:06.061  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-16 17:16:06.061  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-16 17:16:06.061  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.062  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 17:16:06.064  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.064  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.064  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.065  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.065  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.065  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.069  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-16 17:16:06.069  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-16 17:16:06.070  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 17:16:06.070  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.070  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 17:16:06.071  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.071  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 17:16:06.072  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-16 17:16:06.073  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-16 17:16:06.073  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.076  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.077  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.077  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-16 17:16:06.077  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.078  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.078  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.078  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.079  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.079  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.080  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.080  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.081  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-16 17:16:06.084  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.084  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.084  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.085  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-16 17:16:06.085  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-16 17:16:06.086  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.086  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.086  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.087  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.087  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.087  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.089  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.089  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.089  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.089  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.094  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.095  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.095  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.095  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.095  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.096  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.098  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.098  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.098  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.099  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.101  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.101  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-16 17:16:06.102  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-16 17:16:06.102  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.103  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.103  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.104  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.107  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.108  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-16 17:16:06.108  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.109  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 17:16:06.109  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.110  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-16 17:16:06.110  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-16 17:16:06.110  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-16 17:16:06.111  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.111  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.111  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.112  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.114  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-16 17:16:06.114  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.115  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.115  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.115  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.117  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-16 17:16:06.117  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-16 17:16:06.117  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.120  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-16 17:16:06.121  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.121  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-16 17:16:06.121  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.122  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.122  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-16 17:16:06.123  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.123  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-16 17:16:06.124  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-16 17:16:06.127  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-16 17:16:06.128  INFO 9468 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-16 17:16:06.233  INFO 9468 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 17:16:06.233  INFO 9468 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 17:16:06.377  INFO 9468 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-16 17:16:07.995  INFO 9468 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-16 17:16:07.999  INFO 9468 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-16 17:16:08.006  INFO 9468 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-16 17:16:08.151  INFO 9468 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-16 17:16:08.159  INFO 9468 --- [main] com.yanda.Application                    : Started Application in 18.835 seconds (JVM running for 19.226)
2018-07-16 17:19:51.566  INFO 9468 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-16 17:19:51.567  INFO 9468 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-16 17:19:51.616  INFO 9468 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-16 17:20:10.922  INFO 9468 --- [http-nio-8080-exec-9] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-16 17:20:11.522 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:20:11.548 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:20:11.589 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:21:25.522  INFO 9468 --- [http-nio-8080-exec-5] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:21:25.621 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:21:25.621 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:21:25.650 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:21:25.652 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-16 17:21:25.652 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-16 17:21:25.684 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:23:09.142 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:23:09.142 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:23:09.172 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:24:37.952  INFO 9468 --- [http-nio-8080-exec-10] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:24:38.398 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:24:38.399 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:24:38.429 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:24:38.431 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:24:38.433 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:24:38.470 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:24:44.527 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:24:44.528 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:24:44.558 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:25:31.124  INFO 9468 --- [http-nio-8080-exec-5] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:25:31.128 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:25:31.128 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:25:31.158 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:25:31.160 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:25:31.161 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:25:31.196 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:25:37.415 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:25:37.416 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:25:37.448 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:25:43.394 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:25:43.396 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:25:43.425 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:27:06.969  INFO 9468 --- [http-nio-8080-exec-3] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:27:07.000 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:27:07.001 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:27:07.031 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:27:07.032 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:27:07.032 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:27:07.063 DEBUG 9468 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:27:28.298 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:27:28.299 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:27:28.330 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:27:33.170 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:27:33.171 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:27:33.200 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:28:20.665  INFO 9468 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:28:20.667 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:28:20.668 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:28:20.696 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:28:20.697 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:28:20.698 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:28:20.728 DEBUG 9468 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:29:10.026 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:29:10.028 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:29:10.061 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:29:33.628  INFO 9468 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:29:33.630 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:29:33.631 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:29:33.660 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:29:33.660 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:29:33.661 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:29:33.690 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:29:37.729 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:29:37.730 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:29:37.760 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:30:19.127  INFO 9468 --- [http-nio-8080-exec-4] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:30:19.132 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:30:19.133 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:30:19.161 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:30:19.163 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:30:19.164 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:30:19.196 DEBUG 9468 --- [http-nio-8080-exec-4] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:30:21.876 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:30:21.877 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:30:21.907 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:30:25.998 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:30:25.999 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:30:26.031 DEBUG 9468 --- [http-nio-8080-exec-6] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:30:29.856 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:30:29.857 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:30:29.887 DEBUG 9468 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:30:36.099 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:30:36.100 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:30:36.129 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:33:04.111  INFO 9468 --- [http-nio-8080-exec-5] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:33:04.142 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:33:04.142 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:33:04.171 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:33:04.173 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:33:04.178 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:33:04.209 DEBUG 9468 --- [http-nio-8080-exec-5] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:33:31.514  INFO 9468 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:33:31.515 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:33:31.515 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:33:31.543 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:33:31.544 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:33:31.545 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:33:31.575 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:33:34.666 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:33:34.667 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:33:34.697 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:33:40.598 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:33:40.599 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:33:40.628 DEBUG 9468 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-16 17:36:18.080  INFO 9468 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-16 17:36:18.109 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-16 17:36:18.110 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-16 17:36:18.137 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-16 17:36:18.138 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-16 17:36:18.139 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-16 17:36:18.167 DEBUG 9468 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-16 17:36:20.405 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:36:20.407 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 15:39:17.0(Timestamp)
2018-07-16 17:36:20.438 DEBUG 9468 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 2
2018-07-16 17:36:25.349 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( create_time > ? ) 
2018-07-16 17:36:25.350 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 2018-07-16 16:34:21.0(Timestamp)
2018-07-16 17:36:25.379 DEBUG 9468 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 0
2018-07-21 09:53:02.577  INFO 10840 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 10840 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-21 09:53:02.726 DEBUG 10840 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-21 09:53:02.727  INFO 10840 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-21 09:53:04.051  INFO 10840 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 09:53:04 CST 2018]; root of context hierarchy
2018-07-21 09:53:06.921  INFO 10840 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-21 09:53:07.609  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.609  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.609  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.610  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.610  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.610  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.611  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.611  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.611  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.611  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.612  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.612  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.612  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.613  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.613  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.613  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.613  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.692  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.692  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.693  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.693  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.693  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.693  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.693  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:53:07.694  WARN 10840 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-21 09:53:07.740  WARN 10840 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-21 09:53:09.425  INFO 10840 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1445ff76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:53:09.851  INFO 10840 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$2f2597c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:53:09.888  INFO 10840 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:53:09.894  INFO 10840 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$5d583594] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:53:15.761  INFO 10840 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-21 09:53:15.793  INFO 10840 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-21 09:53:15.796  INFO 10840 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-21 09:53:16.046  INFO 10840 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-21 09:53:16.046  INFO 10840 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12006 ms
2018-07-21 09:53:16.640  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-21 09:53:16.641  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-21 09:53:16.642  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-21 09:53:16.642  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-21 09:53:16.643  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-21 09:53:16.643  INFO 10840 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-21 09:53:20.663  INFO 10840 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-21 09:53:26.063  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 09:53:04 CST 2018]; root of context hierarchy
2018-07-21 09:53:26.266  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.268  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.269  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:53:26.269  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:53:26.269  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.270  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:53:26.271  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:53:26.274  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 09:53:26.275  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 09:53:26.276  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-21 09:53:26.277  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.277  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:53:26.280  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.281  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.306  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.307  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.308  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.308  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.314  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 09:53:26.314  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 09:53:26.315  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:53:26.315  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.316  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:53:26.317  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.317  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:53:26.319  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-21 09:53:26.320  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-21 09:53:26.321  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.324  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.364  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.365  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 09:53:26.366  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.367  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.368  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.368  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.369  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.370  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.371  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.371  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.373  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 09:53:26.377  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.378  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.379  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.380  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:53:26.381  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.426  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.426  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.427  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.427  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 09:53:26.428  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.428  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.430  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.431  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.432  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.432  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.438  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.439  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.439  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.440  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.440  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.481  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.483  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.483  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.484  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.485  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.487  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.487  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-21 09:53:26.487  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-21 09:53:26.488  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.490  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.491  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.491  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.495  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.495  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 09:53:26.496  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.496  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.592  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.593  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:53:26.593  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.594  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:53:26.595  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.595  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.596  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-21 09:53:26.596  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-21 09:53:26.599  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.600  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.601  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-21 09:53:26.601  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.602  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.603  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.604  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:53:26.649  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:53:26.653  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-21 09:53:26.654  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.655  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-21 09:53:26.655  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.656  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.656  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:53:26.657  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.657  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 09:53:26.658  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:53:26.662  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-21 09:53:26.662  INFO 10840 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:53:26.800  INFO 10840 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:53:26.801  INFO 10840 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:53:26.944  INFO 10840 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:53:29.547  INFO 10840 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-21 09:53:29.551  INFO 10840 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-21 09:53:29.561  INFO 10840 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-21 09:53:29.740  INFO 10840 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-21 09:53:29.750  INFO 10840 --- [main] com.yanda.Application                    : Started Application in 28.482 seconds (JVM running for 30.092)
2018-07-21 09:54:25.202  INFO 10840 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-21 09:54:25.202  INFO 10840 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-21 09:54:25.260  INFO 10840 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-07-21 09:54:34.402  INFO 10840 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-21 09:54:34.966 DEBUG 10840 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-21 09:54:35.212 DEBUG 10840 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-21 09:54:35.248 DEBUG 10840 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-21 09:54:35.304 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-21 09:54:35.308 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-21 09:54:35.332 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-21 09:54:35.335 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 09:54:35.336 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 09:54:35.361 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 09:54:35.362 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 09:54:35.385 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-21 09:54:35.386 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-21 09:54:35.386 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-21 09:54:35.409 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-21 09:54:35.409 DEBUG 10840 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-21 09:55:19.232 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE ( card_num = ? and card_password = ? ) 
2018-07-21 09:55:19.235 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.selectOneByExample             : ==> Parameters: 20180721104115(String), 123456(String)
2018-07-21 09:55:19.265 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-21 09:55:24.248 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 09:55:24.254 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 09:55:24.301 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 09:55:24.307 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 09:55:24.334 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-21 09:55:24.338 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-21 09:55:24.339 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-21 09:55:24.362 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-21 09:55:24.364 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-21 09:55:29.099 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ?, is_forever = ? 
2018-07-21 09:55:29.129 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.upsertSelective                : ==> Parameters: 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 09:55:28.145(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean), 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 09:55:28.145(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean)
2018-07-21 09:55:29.154 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-21 09:55:30.355 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 09:55:30.362 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 09:55:30.401 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 09:55:30.404 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 09:55:30.439 DEBUG 10840 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 2
2018-07-21 09:56:30.127  INFO 12852 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 12852 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-21 09:56:30.135 DEBUG 12852 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-21 09:56:30.136  INFO 12852 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-21 09:56:30.594  INFO 12852 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 09:56:30 CST 2018]; root of context hierarchy
2018-07-21 09:56:32.776  INFO 12852 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-21 09:56:33.459  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.459  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.460  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.460  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.460  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.461  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.461  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.461  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.462  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.462  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.462  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.463  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.463  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.463  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.464  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.464  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.465  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.465  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.465  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.465  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.466  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.466  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.466  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.466  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 09:56:33.466  WARN 12852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-21 09:56:33.506  WARN 12852 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-21 09:56:34.612  INFO 12852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d8698e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:56:35.016  INFO 12852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$24b801d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:56:35.050  INFO 12852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:56:35.058  INFO 12852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$52ea9fac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 09:56:40.719  INFO 12852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-21 09:56:40.734  INFO 12852 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-21 09:56:40.736  INFO 12852 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-21 09:56:40.868  INFO 12852 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-21 09:56:40.868  INFO 12852 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10280 ms
2018-07-21 09:56:41.182  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-21 09:56:41.183  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-21 09:56:41.183  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-21 09:56:41.183  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-21 09:56:41.184  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-21 09:56:41.184  INFO 12852 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-21 09:56:43.020  INFO 12852 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-21 09:56:46.783  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 09:56:30 CST 2018]; root of context hierarchy
2018-07-21 09:56:46.949  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.952  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:56:46.953  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:56:46.953  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:56:46.954  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 09:56:46.954  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:46.955  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.958  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 09:56:46.959  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 09:56:46.960  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-21 09:56:46.960  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:56:46.961  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.963  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.964  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.965  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.966  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.966  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.967  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.972  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 09:56:46.974  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 09:56:46.975  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:56:46.976  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.977  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:56:46.978  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:56:46.978  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.980  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-21 09:56:46.980  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-21 09:56:46.981  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.983  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.984  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.984  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 09:56:46.985  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.985  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.986  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.987  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.987  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.988  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.989  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.990  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.991  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 09:56:46.996  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.996  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.997  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.998  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 09:56:46.998  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:46.999  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 09:56:46.999  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.000  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 09:56:47.000  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.001  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.001  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.003  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.003  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.003  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.004  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.009  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.010  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.010  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.011  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.011  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.011  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.013  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.014  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.015  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.016  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.018  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.019  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-21 09:56:47.019  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-21 09:56:47.020  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.021  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.022  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.024  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.028  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.029  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 09:56:47.029  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.029  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.030  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.030  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.030  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-21 09:56:47.031  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-21 09:56:47.031  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:56:47.031  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.032  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.032  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:56:47.034  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.034  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.035  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.035  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.036  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-21 09:56:47.037  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.037  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:56:47.038  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-21 09:56:47.042  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-21 09:56:47.043  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.044  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-21 09:56:47.044  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 09:56:47.045  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.045  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.045  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 09:56:47.046  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 09:56:47.046  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.050  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-21 09:56:47.051  INFO 12852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 09:56:47.172  INFO 12852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:56:47.172  INFO 12852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:56:47.293  INFO 12852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 09:56:49.640  INFO 12852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-21 09:56:49.644  INFO 12852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-21 09:56:49.655  INFO 12852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-21 09:56:49.836  INFO 12852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-21 09:56:49.846  INFO 12852 --- [main] com.yanda.Application                    : Started Application in 20.241 seconds (JVM running for 20.726)
2018-07-21 09:57:01.007  INFO 12852 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-21 09:57:01.007  INFO 12852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-21 09:57:01.040  INFO 12852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-07-21 09:57:05.758  INFO 12852 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-21 09:57:06.429 DEBUG 12852 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE ( card_num = ? and card_password = ? ) 
2018-07-21 09:57:06.626 DEBUG 12852 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 20180721104115(String), 123456(String)
2018-07-21 09:57:06.785 DEBUG 12852 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-21 09:57:46.026 DEBUG 12852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE ( card_num = ? and card_password = ? ) 
2018-07-21 09:57:46.029 DEBUG 12852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==> Parameters: 20180721104115(String), 123456(String)
2018-07-21 09:57:46.058 DEBUG 12852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-21 09:59:07.519 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE ( card_num = ? and card_password = ? ) 
2018-07-21 09:59:07.520 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 20180721104115(String), 123456(String)
2018-07-21 09:59:07.548 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-21 09:59:07.579 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 09:59:07.580 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 09:59:07.607 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 09:59:07.607 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 09:59:07.634 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-21 09:59:07.634 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-21 09:59:07.634 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-21 09:59:07.658 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-21 09:59:07.659 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-21 09:59:07.681 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ?, is_forever = ? 
2018-07-21 09:59:07.685 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==> Parameters: 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 09:59:07.659(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean), 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 09:59:07.659(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean)
2018-07-21 09:59:07.722 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-21 09:59:07.723 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 09:59:07.724 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 09:59:07.752 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 09:59:07.753 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 09:59:07.777 DEBUG 12852 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : <====      Total: 2
2018-07-21 10:00:45.503  INFO 7644 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7644 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-21 10:00:45.508 DEBUG 7644 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-21 10:00:45.508  INFO 7644 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-21 10:00:45.924  INFO 7644 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 10:00:45 CST 2018]; root of context hierarchy
2018-07-21 10:00:48.160  INFO 7644 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-21 10:00:48.825  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.826  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.826  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.827  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.827  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.827  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.827  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.828  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.828  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.828  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.828  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.829  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.829  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.829  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.829  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.829  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.830  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.830  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.830  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.831  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.831  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.831  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.831  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.831  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-21 10:00:48.832  WARN 7644 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-21 10:00:48.877  WARN 7644 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-21 10:00:49.976  INFO 7644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f42d2401] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 10:00:50.368  INFO 7644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$f0cbc4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 10:00:50.400  INFO 7644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 10:00:50.407  INFO 7644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3d3f5a1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-21 10:00:56.058  INFO 7644 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-21 10:00:56.073  INFO 7644 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-21 10:00:56.075  INFO 7644 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-21 10:00:56.204  INFO 7644 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-21 10:00:56.204  INFO 7644 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10287 ms
2018-07-21 10:00:56.554  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-21 10:00:56.555  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-21 10:00:56.556  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-21 10:00:56.556  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-21 10:00:56.556  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-21 10:00:56.557  INFO 7644 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-21 10:00:59.200  INFO 7644 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-21 10:01:03.047  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 21 10:00:45 CST 2018]; root of context hierarchy
2018-07-21 10:01:03.214  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.216  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 10:01:03.216  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 10:01:03.217  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 10:01:03.218  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.218  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.219  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-21 10:01:03.221  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 10:01:03.222  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-21 10:01:03.222  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-21 10:01:03.223  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.223  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 10:01:03.225  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.226  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.226  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.227  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.229  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.230  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.234  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 10:01:03.235  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-21 10:01:03.235  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 10:01:03.235  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.236  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 10:01:03.236  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 10:01:03.237  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.238  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-21 10:01:03.239  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-21 10:01:03.240  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.242  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.242  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.243  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 10:01:03.243  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.244  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.245  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.246  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.247  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.248  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.249  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.249  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.250  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 10:01:03.253  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.253  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.254  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.254  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-21 10:01:03.255  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-21 10:01:03.255  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.255  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.256  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.256  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.256  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.257  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.259  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.259  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.259  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.260  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.266  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.266  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.267  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.267  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.267  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.268  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.270  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.271  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.272  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.273  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.276  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.277  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-21 10:01:03.278  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-21 10:01:03.279  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.282  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.282  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.283  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.287  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.288  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-21 10:01:03.289  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.289  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.290  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.290  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.291  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.291  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-21 10:01:03.292  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-21 10:01:03.293  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-21 10:01:03.293  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 10:01:03.294  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.296  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.296  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.297  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.297  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.298  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-21 10:01:03.299  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.300  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-21 10:01:03.300  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-21 10:01:03.302  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-21 10:01:03.303  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.303  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-21 10:01:03.304  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-21 10:01:03.304  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.304  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-21 10:01:03.304  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.305  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.305  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-21 10:01:03.308  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-21 10:01:03.308  INFO 7644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-21 10:01:03.422  INFO 7644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 10:01:03.422  INFO 7644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 10:01:03.545  INFO 7644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-21 10:01:05.787  INFO 7644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-21 10:01:05.790  INFO 7644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-21 10:01:05.801  INFO 7644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-21 10:01:06.040  INFO 7644 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-21 10:01:06.048  INFO 7644 --- [main] com.yanda.Application                    : Started Application in 20.922 seconds (JVM running for 21.506)
2018-07-21 10:01:35.896  INFO 7644 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-21 10:01:35.896  INFO 7644 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-21 10:01:35.938  INFO 7644 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-21 10:01:36.576  INFO 7644 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-21 10:01:37.147 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE ( card_num = ? and card_password = ? ) 
2018-07-21 10:01:37.191 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 20180721104115(String), 123456(String)
2018-07-21 10:01:37.235 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-21 10:01:37.253 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 10:01:37.253 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 10:01:37.279 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 10:01:37.279 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 10:01:37.301 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-21 10:01:37.302 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-21 10:01:37.302 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-21 10:01:37.323 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-21 10:01:37.323 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-21 10:01:37.333 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ?, is_forever = ? 
2018-07-21 10:01:37.337 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 10:01:37.324(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean), 1043(Integer), 20180721104115(String), 123456(String), 1(Integer), 2018-07-21 09:37:40.0(Timestamp), 2018-07-21 10:01:37.324(Timestamp), 2018-07-22 09:37:40.0(Timestamp), 38(Integer), 克劳德(String), true(Boolean)
2018-07-21 10:01:37.360 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-21 10:01:37.361 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-21 10:01:37.361 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-21 10:01:37.384 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-21 10:01:37.385 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-21 10:01:37.408 DEBUG 7644 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 2
2018-07-21 10:01:37.411 ERROR 7644 --- [http-nio-8080-exec-1] com.yanda.aop.TokenValidAop              : 校验token异常:org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.executor.ExecutorException: Statement returned more than one row, where no more than one was expected.
2018-07-25 17:41:46.911  INFO 11284 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11284 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 17:41:47.023 DEBUG 11284 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 17:41:47.023  INFO 11284 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 17:41:47.656  INFO 11284 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:41:47 CST 2018]; root of context hierarchy
2018-07-25 17:41:49.954  INFO 11284 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 17:41:50.569  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.570  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.570  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.571  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.571  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.571  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.571  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.571  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.572  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.572  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.572  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.573  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.573  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.573  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.573  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.574  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.574  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.574  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.574  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.575  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.575  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.575  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.575  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.576  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:41:50.576  WARN 11284 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 17:41:50.625  WARN 11284 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 17:41:52.122  INFO 11284 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$967f0914] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:41:52.551  INFO 11284 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b15ea15e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:41:52.590  INFO 11284 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:41:52.593  INFO 11284 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$df913f32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:41:58.550  INFO 11284 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 17:41:58.576  INFO 11284 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 17:41:58.578  INFO 11284 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 17:41:58.815  INFO 11284 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 17:41:58.816  INFO 11284 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11167 ms
2018-07-25 17:41:59.278  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 17:41:59.279  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 17:41:59.279  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 17:41:59.280  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 17:41:59.280  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 17:41:59.280  INFO 11284 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 17:42:02.034  INFO 11284 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 17:42:05.925  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:41:47 CST 2018]; root of context hierarchy
2018-07-25 17:42:06.147  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.150  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.151  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.151  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:42:06.152  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:42:06.152  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:42:06.153  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:42:06.155  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:42:06.155  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:42:06.156  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 17:42:06.157  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:42:06.157  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.159  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.160  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.160  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.161  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.162  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.163  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.168  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:42:06.168  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:42:06.169  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:42:06.169  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.169  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:42:06.170  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:42:06.170  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.172  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 17:42:06.172  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 17:42:06.173  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.175  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.176  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.176  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:42:06.177  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.177  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.178  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.178  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.178  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.179  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.180  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.180  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.182  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:42:06.186  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.187  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.188  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.188  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:42:06.189  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.190  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.190  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.191  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.192  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:42:06.193  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.193  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.195  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.196  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.197  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.197  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.205  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.206  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.207  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.207  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.207  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.208  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.210  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.211  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.212  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.214  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.216  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.217  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 17:42:06.217  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 17:42:06.219  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.221  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.221  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.222  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.226  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.226  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:42:06.227  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.228  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.229  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.229  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:42:06.230  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.230  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 17:42:06.231  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.231  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:42:06.232  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 17:42:06.232  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.235  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.235  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.236  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 17:42:06.237  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.238  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.240  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:42:06.241  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:42:06.241  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.247  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 17:42:06.248  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.248  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 17:42:06.249  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:42:06.249  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:42:06.250  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.252  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.253  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.254  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:42:06.261  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 17:42:06.263  INFO 11284 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:42:06.472  INFO 11284 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:42:06.473  INFO 11284 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:42:06.621  INFO 11284 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:42:08.976  INFO 11284 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 17:42:08.980  INFO 11284 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 17:42:08.991  INFO 11284 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 17:42:09.178  INFO 11284 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 17:42:09.186  INFO 11284 --- [main] com.yanda.Application                    : Started Application in 22.908 seconds (JVM running for 24.032)
2018-07-25 17:42:31.111  INFO 11284 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 17:42:31.111  INFO 11284 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 17:42:31.189  INFO 11284 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2018-07-25 17:42:32.084  INFO 11284 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 17:42:33.073 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ?) OR (paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-25 17:42:33.132 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 2(Integer), %%(String), %%(String)
2018-07-25 17:42:33.188 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:42:33.194 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time, paper_type from t_paper_info WHERE ( paper_type = ? ) or( paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-25 17:42:33.198 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: 2(Integer), %%(String), %%(String), 10(Integer)
2018-07-25 17:42:33.251 DEBUG 11284 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 4
2018-07-25 17:43:48.960  INFO 17520 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17520 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 17:43:48.969 DEBUG 17520 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 17:43:48.970  INFO 17520 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 17:43:49.470  INFO 17520 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:43:49 CST 2018]; root of context hierarchy
2018-07-25 17:43:51.885  INFO 17520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 17:43:52.700  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.700  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.700  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.701  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.701  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.701  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.702  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.702  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.702  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.702  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.703  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.703  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.703  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.704  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.704  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.705  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.705  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.706  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.706  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.706  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.706  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.706  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.707  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.707  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:43:52.707  WARN 17520 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 17:43:52.756  WARN 17520 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 17:43:53.919  INFO 17520 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cc75329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:43:54.453  INFO 17520 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$27a6eb73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:43:54.515  INFO 17520 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:43:54.524  INFO 17520 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$55d98947] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:44:00.504  INFO 17520 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 17:44:00.534  INFO 17520 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 17:44:00.536  INFO 17520 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 17:44:00.877  INFO 17520 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 17:44:00.878  INFO 17520 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11422 ms
2018-07-25 17:44:01.392  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 17:44:01.393  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 17:44:01.393  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 17:44:01.394  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 17:44:01.394  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 17:44:01.394  INFO 17520 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 17:44:04.643  INFO 17520 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 17:44:08.902  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:43:49 CST 2018]; root of context hierarchy
2018-07-25 17:44:09.071  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:44:09.074  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.074  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:44:09.075  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.075  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:44:09.076  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:44:09.077  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.079  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:44:09.080  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:44:09.081  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 17:44:09.082  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.082  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:44:09.085  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.085  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.086  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.086  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.087  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.087  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.093  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:44:09.094  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:44:09.095  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:44:09.096  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.097  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:44:09.097  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:44:09.098  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.100  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 17:44:09.101  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 17:44:09.102  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.105  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.106  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.107  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:44:09.108  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.108  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.108  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.109  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.109  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.110  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.110  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.111  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.112  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:44:09.115  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.115  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.116  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.116  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:44:09.116  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:44:09.117  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.117  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.117  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.118  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.118  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.119  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.121  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.122  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.123  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.123  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.129  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.129  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.130  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.130  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.131  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.131  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.134  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.135  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.136  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.137  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.140  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.140  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 17:44:09.141  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 17:44:09.142  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.143  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.144  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.145  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.149  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.150  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:44:09.150  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.151  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:44:09.152  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.152  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.153  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.153  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.154  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:44:09.154  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 17:44:09.154  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.155  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 17:44:09.157  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 17:44:09.158  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.159  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.159  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.160  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.161  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.162  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:44:09.163  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:44:09.166  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 17:44:09.167  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.167  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 17:44:09.168  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:44:09.168  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.168  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:44:09.169  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.170  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.170  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:44:09.174  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 17:44:09.175  INFO 17520 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:44:09.288  INFO 17520 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:44:09.288  INFO 17520 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:44:09.404  INFO 17520 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:44:11.771  INFO 17520 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 17:44:11.775  INFO 17520 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 17:44:11.789  INFO 17520 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 17:44:11.959  INFO 17520 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 17:44:11.969  INFO 17520 --- [main] com.yanda.Application                    : Started Application in 23.671 seconds (JVM running for 24.557)
2018-07-25 17:44:15.135  INFO 17520 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 17:44:15.135  INFO 17520 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 17:44:15.201  INFO 17520 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2018-07-25 17:44:15.890  INFO 17520 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 17:44:16.676 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ? AND paper_name LIKE ?) OR (paper_desc LIKE ?) 
2018-07-25 17:44:16.792 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 2(Integer), %%(String), %%(String)
2018-07-25 17:44:16.850 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:44:16.855 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time, paper_type from t_paper_info WHERE ( paper_type = ? and paper_name like ? ) or( paper_desc like ? ) LIMIT ? 
2018-07-25 17:44:16.856 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: 2(Integer), %%(String), %%(String), 10(Integer)
2018-07-25 17:44:16.889 DEBUG 17520 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 4
2018-07-25 17:54:46.204  INFO 6680 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6680 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 17:54:46.212 DEBUG 6680 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 17:54:46.212  INFO 6680 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 17:54:46.655  INFO 6680 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:54:46 CST 2018]; root of context hierarchy
2018-07-25 17:54:48.721  INFO 6680 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 17:54:49.323  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.323  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.323  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.323  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.324  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.324  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.324  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.324  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.324  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.325  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.326  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.326  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.326  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.326  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.326  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.327  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.327  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.327  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.328  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:54:49.328  WARN 6680 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 17:54:49.361  WARN 6680 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 17:54:50.358  INFO 6680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f130b4dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:54:50.740  INFO 6680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$c104d26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:54:50.770  INFO 6680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:54:50.775  INFO 6680 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3a42eafa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:54:56.496  INFO 6680 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 17:54:56.518  INFO 6680 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 17:54:56.520  INFO 6680 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 17:54:56.746  INFO 6680 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 17:54:56.747  INFO 6680 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10098 ms
2018-07-25 17:54:57.247  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 17:54:57.248  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 17:54:57.249  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 17:54:57.249  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 17:54:57.250  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 17:54:57.250  INFO 6680 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 17:54:59.728  INFO 6680 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 17:55:03.436  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:54:46 CST 2018]; root of context hierarchy
2018-07-25 17:55:03.593  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:55:03.595  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:55:03.596  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.596  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:55:03.597  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:55:03.597  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.598  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.600  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:55:03.601  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:55:03.602  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 17:55:03.602  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.603  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:55:03.605  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.606  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.607  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.607  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.607  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.608  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.614  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:55:03.614  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:55:03.615  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:55:03.616  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.617  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:55:03.617  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.618  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:55:03.620  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 17:55:03.621  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 17:55:03.622  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.625  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.626  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.626  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:55:03.627  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.627  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.628  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.629  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.630  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.631  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.631  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.632  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.633  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:55:03.637  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.638  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.638  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.639  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:55:03.639  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.640  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.640  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.641  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.641  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.642  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.642  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:55:03.644  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.645  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.646  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.646  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.650  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.651  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.651  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.652  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.652  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.652  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.654  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.654  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.655  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.656  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.658  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.659  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 17:55:03.659  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 17:55:03.660  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.661  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.662  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.662  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.667  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.667  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:55:03.667  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.668  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.668  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:55:03.668  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.669  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:55:03.669  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.670  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 17:55:03.670  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 17:55:03.670  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.671  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.672  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.673  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.674  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 17:55:03.674  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.674  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.676  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.676  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:55:03.677  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:55:03.680  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 17:55:03.680  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.681  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 17:55:03.681  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:55:03.681  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.682  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:55:03.682  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.682  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.683  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:55:03.686  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 17:55:03.686  INFO 6680 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:55:03.814  INFO 6680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:55:03.815  INFO 6680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:55:03.935  INFO 6680 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:55:06.218  INFO 6680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 17:55:06.222  INFO 6680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 17:55:06.235  INFO 6680 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 17:55:06.387  INFO 6680 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 17:55:06.397  INFO 6680 --- [main] com.yanda.Application                    : Started Application in 20.762 seconds (JVM running for 21.329)
2018-07-25 17:55:14.668  INFO 6680 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 17:55:14.668  INFO 6680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 17:55:14.726  INFO 6680 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-07-25 17:55:15.212  INFO 6680 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 17:55:16.076 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ?) OR (paper_name LIKE ? AND paper_desc LIKE ?) 
2018-07-25 17:55:16.112 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 2(Integer), %%(String), %%(String)
2018-07-25 17:55:16.157 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:55:16.162 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time, paper_type from t_paper_info WHERE ( paper_type = ? ) or( paper_name like ? and paper_desc like ? ) LIMIT ? 
2018-07-25 17:55:16.163 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: 2(Integer), %%(String), %%(String), 10(Integer)
2018-07-25 17:55:16.195 DEBUG 6680 --- [http-nio-8080-exec-1] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 10
2018-07-25 17:58:11.628  INFO 12264 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 12264 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 17:58:11.637 DEBUG 12264 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 17:58:11.637  INFO 12264 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 17:58:12.162  INFO 12264 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:58:12 CST 2018]; root of context hierarchy
2018-07-25 17:58:14.766  INFO 12264 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 17:58:15.603  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.603  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.604  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.604  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.604  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.605  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.605  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.605  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.609  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.611  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.611  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.612  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.613  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.615  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.616  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.616  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.616  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.617  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.617  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.617  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.618  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.619  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.622  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.624  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 17:58:15.624  WARN 12264 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 17:58:15.681  WARN 12264 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 17:58:17.063  INFO 12264 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$290c5f3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:58:17.574  INFO 12264 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$43ebf789] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:58:17.609  INFO 12264 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:58:17.616  INFO 12264 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$721e955d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 17:58:23.643  INFO 12264 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 17:58:23.665  INFO 12264 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 17:58:23.667  INFO 12264 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 17:58:23.888  INFO 12264 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 17:58:23.888  INFO 12264 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11732 ms
2018-07-25 17:58:24.378  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 17:58:24.379  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 17:58:24.380  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 17:58:24.380  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 17:58:24.380  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 17:58:24.381  INFO 12264 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 17:58:37.757  INFO 12264 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 17:58:46.243  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 17:58:12 CST 2018]; root of context hierarchy
2018-07-25 17:58:46.402  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:58:46.404  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:58:46.404  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:46.405  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 17:58:46.405  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:58:46.405  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:46.406  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:46.408  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:58:46.409  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 17:58:46.409  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 17:58:46.410  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:58:46.410  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:58:46.412  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.307  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.308  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.308  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.309  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.310  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.315  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:58:47.315  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 17:58:47.316  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:58:47.316  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.317  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:58:47.317  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.318  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:58:47.320  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 17:58:47.321  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 17:58:47.322  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.324  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.325  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.803  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:58:47.803  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.804  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.805  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.805  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.806  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.807  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.808  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.808  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:47.809  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:58:47.813  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.814  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.814  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:58:47.815  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 17:58:48.307  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:48.308  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.308  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.309  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.309  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 17:58:48.310  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.310  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.312  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.312  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.312  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.313  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.317  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:48.318  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:48.318  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.318  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:48.319  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.319  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.321  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.321  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:48.814  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.816  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.818  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.819  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 17:58:48.820  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 17:58:48.821  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.822  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.822  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.823  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.827  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.828  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 17:58:48.828  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.829  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 17:58:48.829  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.830  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 17:58:48.830  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:58:48.830  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:48.831  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:58:49.316  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.317  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.317  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.319  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.320  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.321  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 17:58:49.321  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.322  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.323  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.325  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:58:49.326  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 17:58:49.328  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 17:58:49.328  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:49.329  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 17:58:49.329  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 17:58:49.329  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:49.330  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.795  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 17:58:49.796  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.796  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 17:58:49.799  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 17:58:49.800  INFO 12264 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 17:58:49.908  INFO 12264 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:58:49.908  INFO 12264 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:58:50.018  INFO 12264 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 17:58:52.382  INFO 12264 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 17:58:52.385  INFO 12264 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 17:58:52.393  INFO 12264 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 17:58:52.549  INFO 12264 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 17:58:52.560  INFO 12264 --- [main] com.yanda.Application                    : Started Application in 41.643 seconds (JVM running for 42.636)
2018-07-25 17:59:27.855  INFO 12264 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 17:59:27.855  INFO 12264 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 17:59:27.901  INFO 12264 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-25 17:59:28.261  INFO 12264 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 17:59:28.810 DEBUG 12264 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ? AND paper_name LIKE ?) OR (paper_type = ? AND paper_desc LIKE ?) 
2018-07-25 17:59:28.831 DEBUG 12264 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 2(Integer), %%(String), 2(Integer), %%(String)
2018-07-25 17:59:28.866 DEBUG 12264 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:59:46.673 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ? AND paper_name LIKE ?) OR (paper_type = ? AND paper_desc LIKE ?) 
2018-07-25 17:59:46.674 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 1(Integer), %%(String), 1(Integer), %%(String)
2018-07-25 17:59:46.697 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:59:46.701 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time, paper_type from t_paper_info WHERE ( paper_type = ? and paper_name like ? ) or( paper_type = ? and paper_desc like ? ) LIMIT ? 
2018-07-25 17:59:46.702 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: 1(Integer), %%(String), 1(Integer), %%(String), 10(Integer)
2018-07-25 17:59:46.732 DEBUG 12264 --- [http-nio-8080-exec-4] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 10
2018-07-25 17:59:56.977 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_paper_info WHERE (paper_type = ? AND paper_name LIKE ?) OR (paper_type = ? AND paper_desc LIKE ?) 
2018-07-25 17:59:56.978 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 1(Integer), %%(String), 1(Integer), %%(String)
2018-07-25 17:59:57.003 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-25 17:59:57.004 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.selectByExample  : ==>  Preparing: select id, paper_name, paper_desc, appendix_id, create_time, update_time, paper_type from t_paper_info WHERE ( paper_type = ? and paper_name like ? ) or( paper_type = ? and paper_desc like ? ) LIMIT ? 
2018-07-25 17:59:57.005 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.selectByExample  : ==> Parameters: 1(Integer), %%(String), 1(Integer), %%(String), 10(Integer)
2018-07-25 17:59:57.034 DEBUG 12264 --- [http-nio-8080-exec-5] c.y.m.g.PaperInfoMapper.selectByExample  : <==      Total: 10
2018-07-25 21:01:24.260  INFO 12708 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 12708 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 21:01:24.291 DEBUG 12708 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 21:01:24.291  INFO 12708 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 21:01:24.854  INFO 12708 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:01:24 CST 2018]; root of context hierarchy
2018-07-25 21:01:27.401  INFO 12708 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 21:01:28.097  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.097  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.097  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.097  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.097  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:01:28.113  WARN 12708 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 21:01:28.160  WARN 12708 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 21:01:29.410  INFO 12708 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$94049d8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:01:29.828  INFO 12708 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$aee435d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:01:29.875  INFO 12708 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:01:29.875  INFO 12708 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$dd16d3a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:01:35.719  INFO 12708 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 21:01:35.748  INFO 12708 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 21:01:35.764  INFO 12708 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 21:01:36.014  INFO 12708 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 21:01:36.014  INFO 12708 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11176 ms
2018-07-25 21:01:36.561  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 21:01:36.561  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 21:01:36.576  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 21:01:36.576  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 21:01:36.576  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 21:01:36.576  INFO 12708 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 21:01:39.733  INFO 12708 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 21:01:44.878  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:01:24 CST 2018]; root of context hierarchy
2018-07-25 21:01:45.142  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.146  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.147  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:01:45.148  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:01:45.149  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:01:45.150  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:01:45.150  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.153  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:01:45.154  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:01:45.155  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 21:01:45.155  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.156  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:01:45.158  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.159  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.160  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.161  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.163  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.163  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.169  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:01:45.169  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:01:45.170  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:01:45.171  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.171  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.172  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:01:45.173  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:01:45.175  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.175  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 21:01:45.176  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 21:01:45.181  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.182  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.183  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:01:45.184  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.185  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.185  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.186  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.187  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.188  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.189  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.189  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.190  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:01:45.195  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.195  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.196  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.197  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.197  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.198  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.199  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.199  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:01:45.200  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.201  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.202  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:01:45.204  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.205  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.205  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.206  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.212  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.213  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.214  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.214  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.215  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.215  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.218  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.219  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.220  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.221  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.225  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.225  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 21:01:45.226  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 21:01:45.228  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.233  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.235  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.236  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.241  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.242  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:01:45.243  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.245  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 21:01:45.246  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 21:01:45.248  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:01:45.248  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.250  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.251  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.252  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.253  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:01:45.254  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.257  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.258  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.259  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.260  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.263  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 21:01:45.265  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.266  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:01:45.267  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:01:45.271  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 21:01:45.272  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.272  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 21:01:45.273  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:01:45.273  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.274  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:01:45.274  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.275  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.276  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:01:45.285  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 21:01:45.286  INFO 12708 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:01:45.470  INFO 12708 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:01:45.470  INFO 12708 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:01:45.621  INFO 12708 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:01:48.398  INFO 12708 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 21:01:48.406  INFO 12708 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 21:01:48.406  INFO 12708 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 21:01:48.563  INFO 12708 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 21:01:48.563  INFO 12708 --- [main] com.yanda.Application                    : Started Application in 24.943 seconds (JVM running for 25.622)
2018-07-25 21:02:01.535  INFO 12708 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 21:02:01.535  INFO 12708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 21:02:01.586  INFO 12708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-25 21:02:02.061  INFO 12708 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 21:02:02.716 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-25 21:02:02.751 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-25 21:02:02.934 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-25 21:02:02.938 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-25 21:02:02.939 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-25 21:02:02.947 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-25 21:02:02.947 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-25 21:02:02.998 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-25 21:02:02.999 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-25 21:02:02.999 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-25 21:02:03.112 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-25 21:02:03.113 DEBUG 12708 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-25 21:02:04.726 ERROR 12708 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-25 21:02:04.745  INFO 12708 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-25 21:02:04.747 DEBUG 12708 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-25 21:02:04.747 DEBUG 12708 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-25 21:02:04.767 ERROR 12708 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-25 21:02:04.768 ERROR 12708 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-25 21:02:04.815 ERROR 12708 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-25 21:02:04.917 DEBUG 12708 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-25 21:02:05.011 ERROR 12708 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-25 21:02:09.096  INFO 12708 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:02:09.138 DEBUG 12708 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:02:09.138 DEBUG 12708 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:02:09.149 DEBUG 12708 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:02:09.150 DEBUG 12708 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:02:09.151 DEBUG 12708 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:02:09.398  INFO 12708 --- [http-nio-8080-exec-8] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-25 21:02:09.446  INFO 12708 --- [http-nio-8080-exec-8] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-25 21:02:09.460 ERROR 12708 --- [http-nio-8080-exec-8] com.yanda.aop.TokenValidAop              : 校验token异常:

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'is_forever' in 'field list'
### The error may exist in file [E:\StudyDemo\yanda\target\classes\mapper\generated\VipCardInfoMapper.xml]
### The error may involve com.yanda.mapper.generated.VipCardInfoMapper.selectByExample-Inline
### The error occurred while setting parameters
### SQL: select                      card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time,      user_id, nick_name, is_forever         from t_vip_card_info                         WHERE (  card_num like ? )                        order by update_time desc LIMIT ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'is_forever' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'is_forever' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231) ~[spring-jdbc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) ~[spring-jdbc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73) ~[mybatis-spring-1.3.1.jar:1.3.1]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) ~[mybatis-spring-1.3.1.jar:1.3.1]
	at com.sun.proxy.$Proxy80.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) ~[mybatis-spring-1.3.1.jar:1.3.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) ~[mybatis-3.4.5.jar:3.4.5]
	at com.sun.proxy.$Proxy115.selectByExample(Unknown Source) ~[na:na]
	at com.yanda.service.impl.VipCardServiceImpl.getList(VipCardServiceImpl.java:36) ~[classes/:na]
	at com.yanda.controller.VipCardController.listBanners(VipCardController.java:54) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$39ebd06f.listBanners(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'is_forever' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_51]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[na:1.8.0_51]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) ~[mysql-connector-java-5.1.41.jar:5.1.41]
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493) ~[druid-1.0.5.jar:1.0.5]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.4.5.jar:3.4.5]
	at com.sun.proxy.$Proxy127.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.4.5.jar:3.4.5]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:136) ~[pagehelper-5.1.2.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.4.5.jar:3.4.5]
	at com.sun.proxy.$Proxy125.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.5.jar:3.4.5]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) ~[mybatis-3.4.5.jar:3.4.5]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ~[mybatis-spring-1.3.1.jar:1.3.1]
	... 93 common frames omitted

2018-07-25 21:03:37.824  INFO 11864 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11864 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 21:03:37.832 DEBUG 11864 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 21:03:37.833  INFO 11864 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 21:03:38.310  INFO 11864 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:03:38 CST 2018]; root of context hierarchy
2018-07-25 21:03:40.453  INFO 11864 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 21:03:41.076  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.077  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.077  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.078  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.078  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.078  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.078  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.078  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.079  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.079  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.079  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.079  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.079  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.080  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.080  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.080  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.081  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.082  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:03:41.082  WARN 11864 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 21:03:41.115  WARN 11864 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 21:03:42.094  INFO 11864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$39ea674a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:03:42.427  INFO 11864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$54c9ff94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:03:42.462  INFO 11864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:03:42.465  INFO 11864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$82fc9d68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:03:48.231  INFO 11864 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 21:03:48.256  INFO 11864 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 21:03:48.259  INFO 11864 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 21:03:48.512  INFO 11864 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 21:03:48.512  INFO 11864 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10209 ms
2018-07-25 21:03:48.980  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 21:03:48.981  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 21:03:48.982  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 21:03:48.982  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 21:03:48.982  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 21:03:48.983  INFO 11864 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 21:03:51.497  INFO 11864 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 21:03:54.893  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:03:38 CST 2018]; root of context hierarchy
2018-07-25 21:03:55.055  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.057  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.058  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:03:55.058  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:03:55.059  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.059  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:03:55.060  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:03:55.062  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:03:55.063  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:03:55.064  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 21:03:55.064  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:03:55.065  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.068  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.069  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.070  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.070  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.071  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.072  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.078  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:03:55.079  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:03:55.080  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:03:55.080  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.081  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:03:55.082  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.082  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:03:55.085  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.086  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 21:03:55.087  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 21:03:55.090  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.090  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.092  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:03:55.093  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.094  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.094  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.095  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.095  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.097  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.098  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.098  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.100  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:03:55.104  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.105  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.105  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.106  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.107  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.107  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.108  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.108  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:03:55.109  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.110  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.111  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:03:55.113  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.113  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.114  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.114  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.120  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.121  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.121  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.121  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.122  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.122  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.124  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.125  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.126  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.127  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.130  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.131  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 21:03:55.131  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 21:03:55.132  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.134  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.135  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.135  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.140  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.141  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:03:55.141  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.142  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.142  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.143  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.143  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 21:03:55.144  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.144  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 21:03:55.145  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.145  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:03:55.146  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:03:55.148  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.149  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.150  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.150  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.151  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 21:03:55.152  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.153  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:03:55.154  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:03:55.157  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 21:03:55.157  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.158  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 21:03:55.158  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:03:55.159  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.159  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:03:55.159  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.160  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:03:55.160  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.163  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 21:03:55.163  INFO 11864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:03:55.266  INFO 11864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:03:55.267  INFO 11864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:03:55.384  INFO 11864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:03:57.497  INFO 11864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 21:03:57.500  INFO 11864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 21:03:57.508  INFO 11864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 21:03:57.623  INFO 11864 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 21:03:57.634  INFO 11864 --- [main] com.yanda.Application                    : Started Application in 20.47 seconds (JVM running for 21.117)
2018-07-25 21:04:07.137  INFO 11864 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 21:04:07.138  INFO 11864 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 21:04:07.204  INFO 11864 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2018-07-25 21:04:07.404  INFO 11864 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:04:07.542  INFO 11864 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 21:04:07.863 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:04:07.898 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:04:07.920 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:04:07.923 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:04:07.924 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:04:07.956 DEBUG 11864 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 21:04:16.847 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-25 21:04:16.847 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-25 21:04:16.849 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:04:16.851 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-25 21:04:16.851 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-25 21:04:16.854 DEBUG 11864 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-25 21:04:28.632 DEBUG 11864 --- [http-nio-8080-exec-3] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,nick_name,is_forever ) VALUES( ?,?,?,?,?,?,? ) 
2018-07-25 21:04:28.633 DEBUG 11864 --- [http-nio-8080-exec-3] c.y.m.g.V.insertSelective                : ==> Parameters: 20180725105354(String), 123(String), 1(Integer), 2018-07-25 21:04:28.627(Timestamp), 2018-07-25 21:04:28.627(Timestamp), (String), false(Boolean)
2018-07-25 21:04:28.768 DEBUG 11864 --- [http-nio-8080-exec-3] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-25 21:04:28.800  INFO 11864 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:04:28.803 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:04:28.804 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:04:28.807 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:04:28.809 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:04:28.810 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:04:28.816 DEBUG 11864 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 21:04:43.100  INFO 11864 --- [http-nio-8080-exec-5] com.yanda.service.impl.UserServiceImpl   : 用户数据列表将从数据库中获取...
2018-07-25 21:04:43.106 DEBUG 11864 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_user_info WHERE (user_name LIKE ?) OR (nick_name LIKE ?) 
2018-07-25 21:04:43.107 DEBUG 11864 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : ==> Parameters: %kea%(String), %kea%(String)
2018-07-25 21:04:43.108 DEBUG 11864 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:04:47.365 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-25 21:04:47.366 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1040(Integer)
2018-07-25 21:04:47.368 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-25 21:04:47.369 DEBUG 11864 --- [http-nio-8080-exec-6] com.yanda.service.impl.UserServiceImpl   : 清空用户ID为【38]的登录状态
2018-07-25 21:04:47.374 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.U.selectByPrimaryKeySelective    : ==>  Preparing: select user_name from t_user_info where user_id = ? 
2018-07-25 21:04:47.374 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.U.selectByPrimaryKeySelective    : ==> Parameters: 38(Integer)
2018-07-25 21:04:47.376 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.U.selectByPrimaryKeySelective    : <==      Total: 1
2018-07-25 21:04:47.410 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-25 21:04:47.411 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1040(Integer)
2018-07-25 21:04:47.543 DEBUG 11864 --- [http-nio-8080-exec-6] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-25 21:04:47.566  INFO 11864 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:04:47.571 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:04:47.573 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:04:47.574 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:04:47.575 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:04:47.575 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:04:47.579 DEBUG 11864 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 21:04:53.593 ERROR 11864 --- [http-nio-8080-exec-8] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.NullPointerException: null
	at com.yanda.controller.VipCardController.isVipExpire(VipCardController.java:316) ~[classes/:na]
	at com.yanda.controller.VipCardController.update(VipCardController.java:211) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$86d9320c.update(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-25 21:23:22.886  INFO 6548 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6548 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 21:23:22.895 DEBUG 6548 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 21:23:22.896  INFO 6548 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 21:23:23.334  INFO 6548 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:23:23 CST 2018]; root of context hierarchy
2018-07-25 21:23:25.258  INFO 6548 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 21:23:25.828  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.828  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.828  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.829  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.830  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.830  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.830  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.831  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.831  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.831  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.832  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.832  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.832  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.832  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.832  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.833  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.833  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.833  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.833  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:23:25.833  WARN 6548 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 21:23:25.878  WARN 6548 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 21:23:26.817  INFO 6548 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dc661e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:23:27.201  INFO 6548 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$58a5fa2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:23:27.230  INFO 6548 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:23:27.237  INFO 6548 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$86d89800] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:23:32.956  INFO 6548 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 21:23:32.982  INFO 6548 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 21:23:32.984  INFO 6548 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 21:23:33.212  INFO 6548 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 21:23:33.213  INFO 6548 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9884 ms
2018-07-25 21:23:33.700  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 21:23:33.701  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 21:23:33.702  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 21:23:33.702  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 21:23:33.702  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 21:23:33.703  INFO 6548 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 21:23:36.233  INFO 6548 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 21:23:39.743  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 21:23:23 CST 2018]; root of context hierarchy
2018-07-25 21:23:39.909  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.912  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:39.913  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:23:39.913  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:23:39.914  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:23:39.914  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:23:39.915  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.918  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:23:39.919  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:23:39.920  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 21:23:39.921  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:23:39.921  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.924  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.925  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.926  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.927  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.928  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.929  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.934  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:23:39.935  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:23:39.935  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:23:39.935  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.936  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:23:39.936  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.937  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:23:39.940  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 21:23:39.941  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 21:23:39.941  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.944  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.945  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.946  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:23:39.946  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.947  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.947  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.947  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.948  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.949  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.950  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.950  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.951  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:23:39.954  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.955  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.955  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.956  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:23:39.956  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.957  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:23:39.957  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.958  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.958  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.959  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.959  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:39.961  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.962  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.962  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.963  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.968  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:39.968  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:39.969  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.969  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:39.969  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.970  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.972  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.973  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.974  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:39.976  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.978  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.978  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 21:23:39.979  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 21:23:39.979  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.980  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.981  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.981  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.985  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.986  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:23:39.987  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.987  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.988  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.988  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:23:39.989  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:23:39.989  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.990  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 21:23:39.990  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 21:23:39.991  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.991  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.994  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.994  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.995  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 21:23:39.996  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.996  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.998  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:39.999  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:23:39.999  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:23:40.002  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 21:23:40.003  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:40.004  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 21:23:40.004  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:23:40.005  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:40.005  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:23:40.006  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:40.006  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:23:40.007  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:40.011  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 21:23:40.012  INFO 6548 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:23:40.133  INFO 6548 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:23:40.133  INFO 6548 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:23:40.264  INFO 6548 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:23:42.424  INFO 6548 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 21:23:42.426  INFO 6548 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 21:23:42.434  INFO 6548 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 21:23:42.554  INFO 6548 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 21:23:42.563  INFO 6548 --- [main] com.yanda.Application                    : Started Application in 20.256 seconds (JVM running for 21.114)
2018-07-25 21:23:48.761  INFO 6548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 21:23:48.761  INFO 6548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 21:23:48.808  INFO 6548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2018-07-25 21:23:49.058  INFO 6548 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:23:49.214  INFO 6548 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 21:23:49.692 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:23:49.732 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:23:49.754 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:23:49.759 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:23:49.760 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:23:49.770 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 21:24:00.612  INFO 6548 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:24:00.617 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:24:00.618 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:24:00.620 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:24:00.622 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:24:00.623 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:24:00.630 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 21:24:15.537 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_vip_card_info SET card_num = ?,purchase_days = ?,update_time = ?,is_forever = ? WHERE card_id = ? 
2018-07-25 21:24:15.538 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.updateByPrimaryKeySelective    : ==> Parameters: 20180725105354(String), 3(Integer), 2018-07-25 21:24:15.533(Timestamp), false(Boolean), 1053(Integer)
2018-07-25 21:24:15.672 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-25 21:24:15.693  INFO 6548 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 21:24:15.696 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 21:24:15.696 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 21:24:15.697 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 21:24:15.698 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 21:24:15.698 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 21:24:15.705 DEBUG 6548 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 21:25:12.784  INFO 6548 --- [http-nio-8080-exec-5] com.yanda.service.impl.UserServiceImpl   : 用户数据列表将从数据库中获取...
2018-07-26 21:25:12.805 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_user_info WHERE (user_name LIKE ?) OR (nick_name LIKE ?) 
2018-07-26 21:25:12.806 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : ==> Parameters: %克劳德%(String), %克劳德%(String)
2018-07-26 21:25:12.808 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.U.selectByExample_COUNT          : <==      Total: 1
2018-07-26 21:25:12.810 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( user_name like ? ) or( nick_name like ? ) LIMIT ? 
2018-07-26 21:25:12.811 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: %克劳德%(String), %克劳德%(String), 1000(Integer)
2018-07-26 21:25:12.814 DEBUG 6548 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-26 21:26:11.033  INFO 6548 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 21:26:11.037 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 21:26:11.037 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 21:26:11.038 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 21:26:11.040 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 21:26:11.041 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 21:26:11.046 DEBUG 6548 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 21:26:45.162  INFO 6548 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 21:26:45.165 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 21:26:45.166 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 21:26:45.167 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 21:26:45.169 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 21:26:45.170 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 21:26:45.175 DEBUG 6548 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 21:26:54.231 DEBUG 6548 --- [http-nio-8080-exec-10] com.yanda.service.impl.UserServiceImpl   : 清空用户ID为【38]的登录状态
2018-07-26 21:26:54.236 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByPrimaryKeySelective    : ==>  Preparing: select user_name from t_user_info where user_id = ? 
2018-07-26 21:26:54.236 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByPrimaryKeySelective    : ==> Parameters: 38(Integer)
2018-07-26 21:26:54.238 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.U.selectByPrimaryKeySelective    : <==      Total: 1
2018-07-26 21:26:54.274 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.V.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_vip_card_info SET card_num = ?,purchase_days = ?,update_time = ?,exp_time = ?,user_id = ?,nick_name = ? WHERE card_id = ? 
2018-07-26 21:26:54.276 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.V.updateByPrimaryKeySelective    : ==> Parameters: 20180725105354(String), 3(Integer), 2018-07-26 21:26:54.23(Timestamp), 2018-07-29 21:26:54.23(Timestamp), 38(Integer), 克劳德(String), 1053(Integer)
2018-07-26 21:26:54.396 DEBUG 6548 --- [http-nio-8080-exec-10] c.y.m.g.V.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-26 21:26:54.453  INFO 6548 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 21:26:54.461 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 21:26:54.463 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 21:26:54.465 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 21:26:54.468 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 21:26:54.469 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 21:26:54.476 DEBUG 6548 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 21:27:09.849 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 21:27:09.850 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1053(Integer)
2018-07-26 21:27:09.860 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 21:27:09.862 DEBUG 6548 --- [http-nio-8080-exec-2] com.yanda.service.impl.UserServiceImpl   : 清空用户ID为【38]的登录状态
2018-07-26 21:27:09.863 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.U.selectByPrimaryKeySelective    : ==>  Preparing: select user_name from t_user_info where user_id = ? 
2018-07-26 21:27:09.865 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.U.selectByPrimaryKeySelective    : ==> Parameters: 38(Integer)
2018-07-26 21:27:09.866 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.U.selectByPrimaryKeySelective    : <==      Total: 1
2018-07-26 21:27:09.893 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 21:27:09.895 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1053(Integer)
2018-07-26 21:27:09.924 DEBUG 6548 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 21:27:09.978  INFO 6548 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 21:27:09.981 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 21:27:09.981 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 21:27:09.982 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 21:27:09.984 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 21:27:09.986 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 21:27:09.992 DEBUG 6548 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 21:28:22.339  INFO 15892 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 15892 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 21:28:22.344 DEBUG 15892 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 21:28:22.345  INFO 15892 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 21:28:22.588  INFO 15892 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 21:28:22 CST 2018]; root of context hierarchy
2018-07-26 21:28:24.015  INFO 15892 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 21:28:27.607  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.608  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.609  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.609  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.609  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.610  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.610  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.610  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.610  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.611  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.611  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.611  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.612  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.612  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.612  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.612  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.613  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.613  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.613  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.614  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.614  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.614  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.614  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.614  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 21:28:27.615  WARN 15892 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 21:28:27.655  WARN 15892 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 21:28:28.668  INFO 15892 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cc75329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:28:29.015  INFO 15892 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$27a6eb73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:28:29.051  INFO 15892 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:28:29.054  INFO 15892 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$55d98947] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 21:28:34.801  INFO 15892 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 21:28:34.827  INFO 15892 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 21:28:34.831  INFO 15892 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 21:28:35.047  INFO 15892 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 21:28:35.047  INFO 15892 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in -86387536 ms
2018-07-25 21:28:35.497  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 21:28:35.498  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 21:28:35.499  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 21:28:35.499  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 21:28:35.499  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 21:28:35.499  INFO 15892 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 21:28:38.102  INFO 15892 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 21:28:41.587  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 21:28:22 CST 2018]; root of context hierarchy
2018-07-25 21:28:41.749  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:28:41.751  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:28:41.751  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.752  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:28:41.753  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.753  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 21:28:41.754  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.756  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:28:41.758  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 21:28:41.759  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 21:28:41.759  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.760  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:28:41.763  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.763  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.764  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.764  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.765  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.765  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.771  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:28:41.771  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 21:28:41.772  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:28:41.772  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.773  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:28:41.773  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.774  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:28:41.775  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.776  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 21:28:41.777  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 21:28:41.779  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.780  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.781  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:28:41.781  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.782  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.783  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.783  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.784  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.785  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.786  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.787  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.788  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:28:41.792  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.793  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.793  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.794  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.794  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.795  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.795  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.796  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.796  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 21:28:41.797  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 21:28:41.798  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.800  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.800  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.801  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.802  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.808  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.808  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.809  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.809  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.810  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.810  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.812  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.813  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.814  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.815  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.817  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.818  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 21:28:41.818  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 21:28:41.819  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.821  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.822  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.822  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.826  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.827  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 21:28:41.827  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.828  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.828  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.829  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:28:41.829  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.830  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 21:28:41.830  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 21:28:41.831  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.831  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.831  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:28:41.833  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.834  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.834  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.835  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.836  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 21:28:41.837  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.838  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:28:41.838  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 21:28:41.841  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 21:28:41.842  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.842  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 21:28:41.843  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 21:28:41.843  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.844  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 21:28:41.844  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.845  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 21:28:41.845  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.849  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 21:28:41.850  INFO 15892 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 21:28:41.958  INFO 15892 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:28:41.959  INFO 15892 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:28:42.094  INFO 15892 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 21:28:44.363  INFO 15892 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 21:28:44.366  INFO 15892 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 21:28:44.374  INFO 15892 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 21:28:44.482  INFO 15892 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 21:28:44.489  INFO 15892 --- [main] com.yanda.Application                    : Started Application in -86377.514 seconds (JVM running for 20.021)
2018-07-25 23:15:53.208  INFO 10392 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 10392 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-25 23:15:53.217 DEBUG 10392 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-25 23:15:53.217  INFO 10392 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-25 23:15:53.807  INFO 10392 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 23:15:53 CST 2018]; root of context hierarchy
2018-07-25 23:15:56.994  INFO 10392 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-25 23:15:58.008  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.009  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.009  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.009  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.010  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.010  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.010  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.010  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.010  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.011  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.011  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.011  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.011  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.012  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.012  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.013  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.013  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.013  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.013  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.013  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.014  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.014  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.014  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.015  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-25 23:15:58.015  WARN 10392 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-25 23:15:58.051  WARN 10392 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-25 23:15:59.370  INFO 10392 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$967f0914] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 23:15:59.875  INFO 10392 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b15ea15e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 23:15:59.907  INFO 10392 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 23:15:59.914  INFO 10392 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$df913f32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-25 23:16:05.702  INFO 10392 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-25 23:16:05.728  INFO 10392 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-25 23:16:05.730  INFO 10392 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-25 23:16:05.947  INFO 10392 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-25 23:16:05.948  INFO 10392 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12146 ms
2018-07-25 23:16:06.468  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-25 23:16:06.470  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-25 23:16:06.470  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-25 23:16:06.470  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-25 23:16:06.470  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-25 23:16:06.471  INFO 10392 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-25 23:16:12.192  INFO 10392 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-25 23:16:18.130  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Wed Jul 25 23:15:53 CST 2018]; root of context hierarchy
2018-07-25 23:16:18.215  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.216  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 23:16:18.217  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:18.217  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 23:16:18.217  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-25 23:16:18.217  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 23:16:18.218  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.219  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 23:16:18.220  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-25 23:16:18.220  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-25 23:16:18.221  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.221  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 23:16:18.223  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.252  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.253  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.253  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.253  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.253  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.257  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 23:16:18.257  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-25 23:16:18.257  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 23:16:18.258  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.258  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 23:16:18.258  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.259  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 23:16:18.260  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.260  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-25 23:16:18.261  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-25 23:16:18.401  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.402  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.403  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 23:16:18.403  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.403  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.404  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.404  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.405  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.405  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.406  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.406  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.407  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 23:16:18.409  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.410  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.560  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.561  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.561  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.561  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-25 23:16:18.561  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:18.561  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.562  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.562  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.562  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-25 23:16:18.563  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.564  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.564  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.564  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.718  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:18.718  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:18.718  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:18.719  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.719  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.719  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.720  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.720  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:18.720  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.721  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.722  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.722  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-25 23:16:18.722  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-25 23:16:18.723  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.723  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.724  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.864  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.866  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.866  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-25 23:16:18.866  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.867  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 23:16:18.867  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.867  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-25 23:16:18.867  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-25 23:16:18.867  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-25 23:16:18.868  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.868  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.868  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.868  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:18.869  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-25 23:16:18.870  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.021  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.022  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.022  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.024  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-25 23:16:19.024  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-25 23:16:19.025  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.028  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-25 23:16:19.028  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:19.028  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-25 23:16:19.029  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-25 23:16:19.029  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.029  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-25 23:16:19.030  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:19.030  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.031  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:19.031  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-25 23:16:19.034  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-25 23:16:19.035  INFO 10392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-25 23:16:19.461  INFO 10392 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 23:16:19.462  INFO 10392 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 23:16:19.582  INFO 10392 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-25 23:16:22.563  INFO 10392 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-25 23:16:22.566  INFO 10392 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-25 23:16:22.577  INFO 10392 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-25 23:16:22.705  INFO 10392 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-25 23:16:22.715  INFO 10392 --- [main] com.yanda.Application                    : Started Application in 30.227 seconds (JVM running for 31.202)
2018-07-25 23:17:42.229  INFO 10392 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-25 23:17:42.230  INFO 10392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-25 23:17:42.291  INFO 10392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-07-25 23:17:42.613  INFO 10392 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:42.814  INFO 10392 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-25 23:17:43.402 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:43.451 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:43.482 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:43.488 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:43.489 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:43.500 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:44.620  INFO 10392 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:44.625 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:44.625 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:44.627 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:44.628 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:44.629 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:44.637 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:46.204  INFO 10392 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:46.209 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:46.210 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:46.211 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:46.212 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:46.213 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:46.217 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:47.603  INFO 10392 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:47.608 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:47.608 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:47.609 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:47.611 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:47.612 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:47.617 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:48.588  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:48.591 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:48.592 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:48.593 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:48.594 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:48.595 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:48.600 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:49.561  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:49.566 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:49.567 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:49.569 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:49.571 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:49.572 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:49.577 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:50.528  INFO 10392 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:50.531 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:50.532 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:50.534 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:50.535 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:50.536 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:50.540 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:51.540  INFO 10392 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:51.544 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:51.545 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:51.546 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:51.549 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:51.550 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:51.557 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:52.529  INFO 10392 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:52.533 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:52.533 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:52.535 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:52.537 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:52.537 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:52.541 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:53.618  INFO 10392 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:53.622 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:53.623 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:53.624 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:53.625 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:53.625 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:53.630 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:54.723  INFO 10392 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:54.726 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:54.727 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:54.728 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:54.730 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:54.730 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:54.733 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:55.607  INFO 10392 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:55.610 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:55.610 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:55.612 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:55.613 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:55.614 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:55.618 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:56.384  INFO 10392 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:56.387 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:56.388 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:56.389 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:56.390 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:56.391 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:56.394 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:57.401  INFO 10392 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:57.405 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:57.406 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:57.408 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:57.410 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:57.411 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:57.415 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:58.122  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:58.127 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:58.127 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:58.129 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:58.130 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:58.131 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:58.134 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:17:59.082  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:17:59.087 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:17:59.088 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:17:59.090 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:17:59.091 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:17:59.093 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:17:59.096 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:18:00.105  INFO 10392 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:18:00.109 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:18:00.109 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:18:00.111 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:18:00.112 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:18:00.112 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:18:00.116 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:18:45.501 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-25 23:18:45.502 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-25 23:18:45.505 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-25 23:18:45.510 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-25 23:18:45.511 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-25 23:18:45.516 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-25 23:18:45.517 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-25 23:18:45.518 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-25 23:18:45.519 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-25 23:18:45.519 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-25 23:18:45.522 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-25 23:18:45.523 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-25 23:18:47.322 ERROR 10392 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-25 23:18:47.368 ERROR 10392 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-25 23:18:47.374 ERROR 10392 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-25 23:18:47.381 ERROR 10392 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-25 23:18:47.381 ERROR 10392 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-25 23:18:49.806  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:18:49.809 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:18:49.810 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:18:49.811 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:18:49.814 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:18:49.815 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:18:49.817 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:26:14.066  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:26:14.077 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:26:14.078 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:26:14.079 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:26:14.080 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:26:14.081 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:26:14.084 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:36:15.743 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-25 23:36:15.745 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-25 23:36:15.748 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-25 23:36:15.749 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-25 23:36:15.749 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-25 23:36:15.751 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-25 23:36:15.752 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-25 23:36:15.752 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-25 23:36:15.753 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-25 23:36:15.753 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-25 23:36:15.754 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-25 23:36:15.754 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-25 23:36:16.433 ERROR 10392 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-25 23:36:16.453 ERROR 10392 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-25 23:36:16.467 ERROR 10392 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-25 23:36:16.473 ERROR 10392 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-25 23:36:16.488 ERROR 10392 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-25 23:36:18.008  INFO 10392 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:36:18.010 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:36:18.010 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:36:18.010 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:36:18.011 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:36:18.011 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:36:18.012 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:40:51.293  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:40:51.299 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:40:51.300 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:40:51.302 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:40:51.303 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:40:51.304 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:40:51.306 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:41:34.803  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:41:34.810 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:41:34.811 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:41:34.812 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:41:34.814 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:41:34.814 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:41:34.817 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:41:42.592  INFO 10392 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:41:42.594 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:41:42.595 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:41:42.595 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:41:42.596 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:41:42.596 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:41:42.597 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:45:15.707 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-25 23:45:15.708 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-25 23:45:15.712 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-25 23:45:15.713 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-25 23:45:15.713 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-25 23:45:15.715 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-25 23:45:15.715 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-25 23:45:15.717 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-25 23:45:15.717 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-25 23:45:15.718 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-25 23:45:15.719 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-25 23:45:15.720 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-25 23:45:16.467 ERROR 10392 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-25 23:45:16.516 ERROR 10392 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-25 23:45:16.525 ERROR 10392 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-25 23:45:16.526 ERROR 10392 --- [http-nio-8080-exec-10] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-25 23:45:16.546 ERROR 10392 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-25 23:45:18.527  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:45:18.529 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:45:18.529 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:45:18.530 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:45:18.530 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:45:18.530 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:45:18.531 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:48:43.224 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-25 23:48:43.225 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-25 23:48:43.228 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-25 23:48:43.229 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-25 23:48:43.229 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-25 23:48:43.231 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-25 23:48:43.231 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-25 23:48:43.233 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-25 23:48:43.234 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-25 23:48:43.234 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-25 23:48:43.235 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-25 23:48:43.236 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-25 23:48:44.001 ERROR 10392 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-25 23:48:44.038 ERROR 10392 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-25 23:48:44.041 ERROR 10392 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-25 23:48:44.044 ERROR 10392 --- [http-nio-8080-exec-9] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-25 23:48:44.060 ERROR 10392 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-25 23:48:46.369  INFO 10392 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:48:46.373 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:48:46.373 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:48:46.375 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:48:46.377 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:48:46.377 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:48:46.379 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:54:48.784  INFO 10392 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:54:48.790 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:54:48.791 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:54:48.792 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:54:48.794 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:54:48.794 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:54:48.797 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:54:54.053  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:54:54.056 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:54:54.057 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:54:54.058 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:54:54.059 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:54:54.060 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:54:54.062 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-25 23:58:45.641  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-25 23:58:45.648 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-25 23:58:45.649 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-25 23:58:45.651 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-25 23:58:45.654 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-25 23:58:45.654 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-25 23:58:45.658 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:00:00.010  INFO 10392 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-26 00:00:00]
2018-07-26 00:00:26.429  INFO 10392 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:00:26.435 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:00:26.436 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:00:26.439 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:00:26.441 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:00:26.442 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:00:26.445 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:01:50.475  INFO 10392 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:01:50.480 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:01:50.482 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:01:50.484 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:01:50.487 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:01:50.487 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:01:50.490 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:03:47.627  INFO 10392 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:03:47.633 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:03:47.634 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:03:47.636 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:03:47.638 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:03:47.639 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:03:47.641 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:04:12.442  INFO 10392 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:04:12.448 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:04:12.448 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:04:12.450 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:04:12.452 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:04:12.453 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:04:12.457 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:04:18.183  INFO 10392 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:04:18.188 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:04:18.188 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:04:18.191 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:04:18.193 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:04:18.194 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:04:18.197 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:04:24.746  INFO 10392 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:04:24.750 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:04:24.750 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:04:24.752 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:04:24.755 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:04:24.756 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:04:24.759 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:05:48.468  INFO 10392 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:05:48.475 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:05:48.475 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:05:48.477 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:05:48.479 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:05:48.480 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:05:48.484 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:06:12.777  INFO 10392 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:06:12.781 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:06:12.782 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:06:12.784 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:06:12.786 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:06:12.786 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:06:12.789 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:06:18.035  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:06:18.039 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:06:18.039 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:06:18.040 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:06:18.042 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:06:18.043 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:06:18.046 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:07:47.965  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:07:47.970 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:07:47.970 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:07:47.973 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:07:47.976 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:07:47.978 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:07:47.982 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:10:19.938  INFO 10392 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:10:19.943 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:10:19.944 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:10:19.945 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:10:19.948 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:10:19.948 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:10:19.953 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:10:59.569  INFO 10392 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:10:59.576 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:10:59.577 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:10:59.579 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:10:59.582 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:10:59.583 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:10:59.587 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:12:03.230  INFO 10392 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:12:03.237 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:12:03.238 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:12:03.239 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:12:03.242 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:12:03.243 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:12:03.246 DEBUG 10392 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:13:28.280  INFO 10392 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:13:28.285 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:13:28.286 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:13:28.288 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:13:28.290 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:13:28.290 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:13:28.293 DEBUG 10392 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:14:01.563  INFO 10392 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:14:01.567 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:14:01.568 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:14:01.571 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:14:01.574 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:14:01.575 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:14:01.577 DEBUG 10392 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:14:41.019  INFO 10392 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:14:41.023 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:14:41.024 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:14:41.026 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:14:41.030 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:14:41.031 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-26 00:14:41.034 DEBUG 10392 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-26 00:20:27.369  INFO 10392 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:20:27.374 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:20:27.375 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:20:27.377 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:20:27.379 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:20:27.379 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:20:27.383 DEBUG 10392 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 00:20:51.520  INFO 10392 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:20:51.523 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:20:51.524 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:20:51.525 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:20:51.528 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:20:51.528 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:20:51.545 DEBUG 10392 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 00:22:11.133  INFO 10392 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:22:11.137 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:22:11.138 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:22:11.138 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:22:11.139 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:22:11.139 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:22:11.141 DEBUG 10392 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 00:25:32.140  INFO 10392 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:25:32.143 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:25:32.143 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:25:32.144 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:25:32.145 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:25:32.145 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:25:32.148 DEBUG 10392 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 00:26:10.931 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:26:10.934 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:26:10.937 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:26:10.945 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:26:10.947 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:26:10.952 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:26:13.879 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,create_time,update_time,is_forever ) VALUES( ?,?,?,?,? ) 
2018-07-26 00:26:13.892 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105353(String), 123(String), 2018-07-26 00:26:11.194(Timestamp), 2018-07-26 00:26:11.194(Timestamp), true(Boolean)
2018-07-26 00:26:13.897 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:26:14.883 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:26:14.887 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:26:14.893 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:26:14.902 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:26:14.904 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:26:14.909 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:26:16.429 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,create_time,update_time,is_forever ) VALUES( ?,?,?,?,? ) 
2018-07-26 00:26:16.449 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105510(String), 123(String), 2018-07-26 00:26:15.065(Timestamp), 2018-07-26 00:26:15.065(Timestamp), true(Boolean)
2018-07-26 00:26:16.452 DEBUG 10392 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:26:37.358  INFO 10392 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:26:37.361 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:26:37.361 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:26:37.362 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:26:37.364 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:26:37.365 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:26:37.367 DEBUG 10392 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 00:27:12.718  INFO 15732 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 15732 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 00:27:12.722 DEBUG 15732 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 00:27:12.723  INFO 15732 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 00:27:13.005  INFO 15732 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 00:27:13 CST 2018]; root of context hierarchy
2018-07-26 00:27:14.464  INFO 15732 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 00:27:15.061  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.062  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.062  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.062  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.062  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.063  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.063  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.063  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.063  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.064  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.064  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.064  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.064  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.065  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.065  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.065  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.066  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.066  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.066  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.066  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.066  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.067  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.067  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.067  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:27:15.067  WARN 15732 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 00:27:15.100  WARN 15732 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 00:27:16.124  INFO 15732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d430fecc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:27:16.505  INFO 15732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$ef109716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:27:16.538  INFO 15732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:27:16.546  INFO 15732 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1d4334ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:27:22.327  INFO 15732 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 00:27:22.351  INFO 15732 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 00:27:22.353  INFO 15732 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 00:27:22.558  INFO 15732 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 00:27:22.559  INFO 15732 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9558 ms
2018-07-26 00:27:23.061  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 00:27:23.062  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 00:27:23.063  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 00:27:23.063  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 00:27:23.064  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 00:27:23.064  INFO 15732 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 00:27:25.560  INFO 15732 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 00:27:29.270  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 00:27:13 CST 2018]; root of context hierarchy
2018-07-26 00:27:29.418  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.421  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:27:29.421  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:27:29.422  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.422  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:27:29.423  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:27:29.423  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.426  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 00:27:29.427  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 00:27:29.428  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 00:27:29.429  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:27:29.429  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.432  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.433  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.433  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.434  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.434  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.435  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.440  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 00:27:29.441  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 00:27:29.442  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:27:29.442  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.443  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:27:29.444  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.444  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:27:29.446  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.447  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 00:27:29.448  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 00:27:29.451  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.452  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.452  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 00:27:29.453  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.454  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.454  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.455  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.455  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.457  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.457  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.458  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.459  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 00:27:29.463  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.464  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.465  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.465  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.466  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.466  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.467  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:27:29.468  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.468  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 00:27:29.469  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.470  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.472  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.472  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.473  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.473  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.479  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.480  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.481  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.481  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.482  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.482  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.484  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.485  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.486  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.488  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.491  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.491  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 00:27:29.492  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 00:27:29.493  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.495  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.496  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.496  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.501  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.502  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 00:27:29.503  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.503  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.504  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.504  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:27:29.505  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.506  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.507  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 00:27:29.507  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 00:27:29.508  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:27:29.508  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.510  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.511  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.512  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 00:27:29.513  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.513  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.515  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:27:29.515  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:27:29.515  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.519  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 00:27:29.519  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.520  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 00:27:29.520  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 00:27:29.521  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.521  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.522  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.523  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:27:29.523  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:27:29.523  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.527  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 00:27:29.527  INFO 15732 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:27:29.645  INFO 15732 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:27:29.645  INFO 15732 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:27:29.753  INFO 15732 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:27:31.896  INFO 15732 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 00:27:31.900  INFO 15732 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 00:27:31.909  INFO 15732 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 00:27:32.045  INFO 15732 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 00:27:32.054  INFO 15732 --- [main] com.yanda.Application                    : Started Application in 19.655 seconds (JVM running for 20.123)
2018-07-26 00:27:37.816  INFO 15732 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 00:27:37.817  INFO 15732 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 00:27:37.862  INFO 15732 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-26 00:27:38.105  INFO 15732 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:27:38.252  INFO 15732 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 00:27:38.548 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:27:38.567 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:27:38.581 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:27:38.584 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:27:38.585 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:27:38.593 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 00:27:43.025 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 00:27:43.026 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1055(Integer)
2018-07-26 00:27:43.029 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 00:27:43.031 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 00:27:43.031 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1055(Integer)
2018-07-26 00:27:43.163 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 00:27:43.212  INFO 15732 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:27:43.220 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:27:43.221 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:27:43.226 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:27:43.230 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:27:43.231 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:27:43.241 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 15
2018-07-26 00:27:45.315 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 00:27:45.316 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1054(Integer)
2018-07-26 00:27:45.319 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 00:27:45.320 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 00:27:45.321 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1054(Integer)
2018-07-26 00:27:45.352 DEBUG 15732 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 00:27:45.386  INFO 15732 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:27:45.395 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:27:45.397 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:27:45.398 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:27:45.399 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:27:45.400 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:27:45.409 DEBUG 15732 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 00:28:04.018 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:04.019 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:04.020 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.021 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:04.021 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:04.023 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:04.029 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:04.031 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105323(String), 123(String), 3(Integer), 2018-07-26 00:28:04.023(Timestamp), 2018-07-26 00:28:04.023(Timestamp), true(Boolean)
2018-07-26 00:28:04.035 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:04.038 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:04.039 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:04.041 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.044 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:04.046 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:04.048 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:04.050 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:04.052 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105748(String), 123(String), 3(Integer), 2018-07-26 00:28:04.048(Timestamp), 2018-07-26 00:28:04.048(Timestamp), true(Boolean)
2018-07-26 00:28:04.054 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:04.056 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:04.057 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:04.057 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.058 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:04.059 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:04.060 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:04.061 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:04.062 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105761(String), 123(String), 3(Integer), 2018-07-26 00:28:04.061(Timestamp), 2018-07-26 00:28:04.061(Timestamp), true(Boolean)
2018-07-26 00:28:04.063 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:04.068 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:04.068 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:04.069 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.071 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:04.071 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:04.074 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:04.075 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:04.076 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105775(String), 123(String), 3(Integer), 2018-07-26 00:28:04.075(Timestamp), 2018-07-26 00:28:04.075(Timestamp), true(Boolean)
2018-07-26 00:28:04.077 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:04.079 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:04.081 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:04.084 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.087 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:04.088 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:04.089 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:04.090 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:04.092 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105790(String), 123(String), 3(Integer), 2018-07-26 00:28:04.09(Timestamp), 2018-07-26 00:28:04.09(Timestamp), true(Boolean)
2018-07-26 00:28:04.093 DEBUG 15732 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:04.244  INFO 15732 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:28:04.250 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:28:04.251 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:28:04.252 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:04.253 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:28:04.254 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:28:04.259 DEBUG 15732 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 19
2018-07-26 00:28:48.086 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:48.087 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:48.088 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.089 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:48.089 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:48.090 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:48.091 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:48.092 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105790(String), 1(String), 1(Integer), 2018-07-26 00:28:48.09(Timestamp), 2018-07-26 00:28:48.09(Timestamp), true(Boolean)
2018-07-26 00:28:48.093 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:48.095 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:48.095 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:48.096 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.097 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:48.097 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:48.099 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:48.100 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:48.101 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106299(String), 1(String), 1(Integer), 2018-07-26 00:28:48.099(Timestamp), 2018-07-26 00:28:48.099(Timestamp), true(Boolean)
2018-07-26 00:28:48.103 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:48.105 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:48.105 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:48.106 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.108 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:48.108 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:48.110 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:48.112 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:48.114 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106211(String), 1(String), 1(Integer), 2018-07-26 00:28:48.111(Timestamp), 2018-07-26 00:28:48.111(Timestamp), true(Boolean)
2018-07-26 00:28:48.116 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:48.119 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:48.120 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:48.123 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.126 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:48.127 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:48.128 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:48.129 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:48.130 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106228(String), 1(String), 1(Integer), 2018-07-26 00:28:48.128(Timestamp), 2018-07-26 00:28:48.128(Timestamp), true(Boolean)
2018-07-26 00:28:48.131 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:48.133 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:28:48.133 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:28:48.134 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.134 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:28:48.135 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:28:48.136 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:28:48.139 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:28:48.139 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106237(String), 1(String), 1(Integer), 2018-07-26 00:28:48.137(Timestamp), 2018-07-26 00:28:48.137(Timestamp), true(Boolean)
2018-07-26 00:28:48.141 DEBUG 15732 --- [http-nio-8080-exec-8] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:28:48.569  INFO 15732 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:28:48.573 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:28:48.574 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:28:48.577 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:28:48.578 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:28:48.578 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:28:48.582 DEBUG 15732 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:29:29.208  INFO 15732 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:29:29.217 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:29:29.218 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:29:29.221 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:29:29.223 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:29:29.224 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:29:29.240 DEBUG 15732 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:29:32.823  INFO 15732 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:29:32.827 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:29:32.827 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:29:32.829 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:29:32.830 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:29:32.831 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:29:32.839 DEBUG 15732 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:29:43.900  INFO 15732 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:29:43.904 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:29:43.905 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:29:43.906 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:29:43.907 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:29:43.907 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:29:43.912 DEBUG 15732 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:30:08.461  INFO 15732 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:30:08.466 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:30:08.467 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:30:08.468 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:30:08.470 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:30:08.470 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:30:08.476 DEBUG 15732 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:32:23.454  INFO 12496 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 12496 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 00:32:23.473 DEBUG 12496 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 00:32:23.474  INFO 12496 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 00:32:23.968  INFO 12496 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 00:32:23 CST 2018]; root of context hierarchy
2018-07-26 00:32:26.891  INFO 12496 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 00:32:27.662  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.662  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.662  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.662  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.663  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.663  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.663  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.664  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.664  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.664  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.664  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.664  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.665  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.665  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.665  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.666  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.666  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.666  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.667  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.667  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.667  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.668  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.668  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.668  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 00:32:27.669  WARN 12496 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 00:32:27.714  WARN 12496 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 00:32:28.965  INFO 12496 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$613bbced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:32:29.391  INFO 12496 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$7c1b5537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:32:29.429  INFO 12496 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:32:29.437  INFO 12496 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$aa4df30b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 00:32:35.221  INFO 12496 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 00:32:35.247  INFO 12496 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 00:32:35.248  INFO 12496 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 00:32:35.458  INFO 12496 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 00:32:35.458  INFO 12496 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11497 ms
2018-07-26 00:32:36.120  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 00:32:36.122  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 00:32:36.122  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 00:32:36.122  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 00:32:36.123  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 00:32:36.123  INFO 12496 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 00:32:44.394  INFO 12496 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 00:32:59.618  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 00:32:23 CST 2018]; root of context hierarchy
2018-07-26 00:32:59.793  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 00:32:59.795  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:32:59.796  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:32:59.797  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:32:59.797  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:32:59.798  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 00:32:59.800  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 00:32:59.802  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 00:32:59.803  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 00:32:59.803  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 00:32:59.804  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:32:59.804  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 00:32:59.807  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 00:32:59.808  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 00:32:59.809  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 00:32:59.810  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.278  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.279  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.284  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 00:33:00.285  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 00:33:00.286  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:33:00.287  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.287  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:33:00.288  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:33:00.288  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.291  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 00:33:00.292  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 00:33:00.292  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.296  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.296  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.752  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 00:33:00.753  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.754  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.755  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.755  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.756  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.757  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.758  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.758  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:00.759  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 00:33:00.764  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.765  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.766  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:33:00.766  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 00:33:01.217  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 00:33:01.218  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.218  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.219  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.220  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:01.220  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.220  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.222  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.222  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.223  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.223  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.227  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:01.228  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.228  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.228  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:01.229  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:01.687  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.689  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.689  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.690  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:01.691  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.694  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.694  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 00:33:01.694  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 00:33:01.695  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.697  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.697  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.697  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.702  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.702  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 00:33:01.703  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.703  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.704  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:01.704  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.146  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:33:02.147  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.148  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 00:33:02.148  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:33:02.149  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 00:33:02.149  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.151  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.152  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.153  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.153  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.154  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 00:33:02.155  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.156  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:33:02.156  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 00:33:02.160  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 00:33:02.161  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:02.161  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 00:33:02.162  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 00:33:02.162  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 00:33:02.163  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.625  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:02.626  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.626  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:02.627  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 00:33:02.630  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 00:33:02.631  INFO 12496 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 00:33:02.751  INFO 12496 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:33:02.751  INFO 12496 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:33:02.872  INFO 12496 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 00:33:05.186  INFO 12496 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 00:33:05.189  INFO 12496 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 00:33:05.198  INFO 12496 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 00:33:05.319  INFO 12496 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 00:33:05.328  INFO 12496 --- [main] com.yanda.Application                    : Started Application in 42.587 seconds (JVM running for 43.615)
2018-07-26 00:33:33.670  INFO 12496 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 00:33:33.671  INFO 12496 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 00:33:33.744  INFO 12496 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-26 00:33:35.686  INFO 12496 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 00:33:35.882  INFO 12496 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 00:33:36.426 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 00:33:36.464 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 00:33:36.484 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:36.489 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 00:33:36.490 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 00:33:36.507 DEBUG 12496 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 24
2018-07-26 00:33:50.917 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:33:50.917 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:33:50.918 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:50.920 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:33:50.921 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:33:50.923 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:33:50.933 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:33:50.935 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106224(String), 123(String), 1(Integer), 2018-07-26 00:33:50.924(Timestamp), 2018-07-26 00:33:50.924(Timestamp), true(Boolean)
2018-07-26 00:33:51.067 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:33:52.070 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:33:52.071 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:33:52.072 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:52.073 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:33:52.074 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:33:52.076 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:33:52.077 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:33:52.079 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106777(String), 123(String), 1(Integer), 2018-07-26 00:33:52.077(Timestamp), 2018-07-26 00:33:52.077(Timestamp), true(Boolean)
2018-07-26 00:33:52.129 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:33:53.132 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:33:53.132 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:33:53.133 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:53.134 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:33:53.135 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:33:53.137 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:33:53.138 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:33:53.139 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106837(String), 123(String), 1(Integer), 2018-07-26 00:33:53.137(Timestamp), 2018-07-26 00:33:53.137(Timestamp), true(Boolean)
2018-07-26 00:33:53.188 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:33:54.191 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:33:54.191 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:33:54.192 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:54.194 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:33:54.194 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:33:54.197 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:33:54.199 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:33:54.200 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106998(String), 123(String), 1(Integer), 2018-07-26 00:33:54.198(Timestamp), 2018-07-26 00:33:54.198(Timestamp), true(Boolean)
2018-07-26 00:33:54.246 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 00:33:55.249 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 00:33:55.250 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 00:33:55.251 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 00:33:55.252 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 00:33:55.253 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 00:33:55.255 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 00:33:55.258 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 00:33:55.259 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726107057(String), 123(String), 1(Integer), 2018-07-26 00:33:55.257(Timestamp), 2018-07-26 00:33:55.257(Timestamp), true(Boolean)
2018-07-26 00:33:55.308 DEBUG 12496 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:26:26.063  INFO 4752 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4752 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 15:26:26.179 DEBUG 4752 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 15:26:26.180  INFO 4752 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 15:26:27.459  INFO 4752 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 15:26:27 CST 2018]; root of context hierarchy
2018-07-26 15:26:32.700  INFO 4752 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 15:26:34.053  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.054  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.054  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.055  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.055  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.055  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.055  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.056  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.056  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.059  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.059  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.060  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.060  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.060  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.061  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.061  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.061  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.061  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.063  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.075  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.080  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.104  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.104  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.105  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:26:34.105  WARN 4752 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 15:26:34.285  WARN 4752 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 15:26:35.826  INFO 4752 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fb88178c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:26:36.319  INFO 4752 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$1667afd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:26:36.351  INFO 4752 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:26:36.356  INFO 4752 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$449a4daa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:26:42.311  INFO 4752 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 15:26:42.395  INFO 4752 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 15:26:42.405  INFO 4752 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 15:26:42.828  INFO 4752 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 15:26:42.829  INFO 4752 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 15378 ms
2018-07-26 15:26:43.810  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 15:26:43.812  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 15:26:43.812  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 15:26:43.813  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 15:26:43.813  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 15:26:43.813  INFO 4752 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 15:26:48.604  INFO 4752 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 15:26:53.555  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 15:26:27 CST 2018]; root of context hierarchy
2018-07-26 15:26:53.764  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.767  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:26:53.768  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.769  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.770  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:26:53.771  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:26:53.771  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:26:53.776  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 15:26:53.777  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 15:26:53.777  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 15:26:53.778  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.779  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:26:53.782  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.782  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.783  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.784  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.785  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.785  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.790  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 15:26:53.791  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 15:26:53.792  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:26:53.793  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.793  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:26:53.794  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.794  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:26:53.797  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 15:26:53.798  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 15:26:53.799  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.802  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.804  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.805  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 15:26:53.806  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.807  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.808  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.809  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.810  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.811  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.812  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.813  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.813  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 15:26:53.817  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.817  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.817  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.819  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:26:53.820  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.821  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.822  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.823  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.823  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.824  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 15:26:53.824  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.826  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.827  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.828  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.832  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.839  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.840  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.841  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.847  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.851  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.851  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.854  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.855  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.856  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.857  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.871  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.872  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 15:26:53.872  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 15:26:53.874  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.876  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.877  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.878  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.894  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.898  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 15:26:53.899  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.900  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.900  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.901  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.903  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 15:26:53.903  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.919  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 15:26:53.920  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:26:53.921  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:26:53.924  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.960  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.964  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.965  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.965  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.966  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 15:26:53.969  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.970  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:26:53.971  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:26:53.977  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 15:26:53.979  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.980  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 15:26:53.981  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 15:26:53.994  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.994  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.995  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.998  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:26:53.999  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:53.999  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:26:54.004  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 15:26:54.006  INFO 4752 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:26:54.252  INFO 4752 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:26:54.252  INFO 4752 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:26:54.420  INFO 4752 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:26:57.517  INFO 4752 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 15:26:57.522  INFO 4752 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 15:26:57.532  INFO 4752 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 15:26:57.679  INFO 4752 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 15:26:57.687  INFO 4752 --- [main] com.yanda.Application                    : Started Application in 33.076 seconds (JVM running for 35.333)
2018-07-26 15:27:09.310  INFO 4752 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 15:27:09.310  INFO 4752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 15:27:09.383  INFO 4752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-26 15:27:10.060  INFO 4752 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 15:27:11.628 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-26 15:27:11.682 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-26 15:27:11.834 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-26 15:27:11.841 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-26 15:27:11.842 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-26 15:27:11.850 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-26 15:27:11.851 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-26 15:27:11.894 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-26 15:27:11.895 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-26 15:27:11.896 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-26 15:27:12.010 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-26 15:27:12.010 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-26 15:27:13.640  INFO 4752 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-26 15:27:13.642 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 15:27:13.643 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-26 15:27:13.797 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:27:13.884 ERROR 4752 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 15:27:13.958  INFO 4752 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3385]的信息
2018-07-26 15:27:13.958  INFO 4752 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3372]的信息
2018-07-26 15:27:13.958  INFO 4752 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3312]的信息
2018-07-26 15:27:13.959 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 15:27:13.958  INFO 4752 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3371]的信息
2018-07-26 15:27:13.959 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3385(Long)
2018-07-26 15:27:13.970 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 15:27:13.971 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3372(Long)
2018-07-26 15:27:13.980 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 15:27:13.986 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3312(Long)
2018-07-26 15:27:13.996 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 15:27:13.997 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3371(Long)
2018-07-26 15:27:14.052 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:27:14.052 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:27:14.056 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:27:14.058 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:27:14.100 ERROR 4752 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-26 15:27:14.103 ERROR 4752 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-26 15:27:14.104 ERROR 4752 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 15:27:14.105 ERROR 4752 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-26 15:27:16.459  INFO 4752 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:27:17.058 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:27:17.060 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:27:17.064 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:27:17.068 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:27:17.068 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:27:17.114 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:32:30.412  INFO 4752 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:32:30.437 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:32:30.438 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:32:30.439 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:32:30.441 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:32:30.441 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:32:30.452 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:33:03.649  INFO 4752 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:33:03.654 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:33:03.655 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:33:03.657 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:33:03.659 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:33:03.660 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:33:03.669 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:33:08.016  INFO 4752 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:33:08.022 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:33:08.024 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:33:08.028 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:33:08.033 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:33:08.034 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:33:08.045 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:33:51.556  INFO 4752 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:33:51.560 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:33:51.561 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:33:51.562 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:33:51.564 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:33:51.564 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:33:51.587 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:41:29.617  INFO 4752 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:41:29.623 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:41:29.624 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:41:29.627 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:41:29.629 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:41:29.630 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:41:29.638 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:42:29.207  INFO 4752 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:42:29.210 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:42:29.211 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:42:29.212 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:42:29.214 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:42:29.215 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:42:29.222 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:42:41.703  INFO 4752 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:42:41.705 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:42:41.705 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:42:41.706 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:42:41.707 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:42:41.708 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:42:41.710 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:43:04.404  INFO 4752 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:43:04.406 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:43:04.406 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:43:04.407 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:43:04.408 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:43:04.408 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:43:04.411 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:43:08.877  INFO 4752 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:43:08.880 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:43:08.881 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:43:08.882 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:43:08.883 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:43:08.884 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:43:08.887 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:43:40.994  INFO 4752 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:43:40.996 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:43:40.996 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:43:40.997 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:43:40.998 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:43:40.998 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:43:41.003 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:44:50.707  INFO 4752 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:44:50.712 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:44:50.713 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:44:50.714 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:44:50.715 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:44:50.716 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:44:50.721 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:45:01.303  INFO 4752 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:45:01.307 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:45:01.307 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:45:01.308 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:45:01.309 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:45:01.310 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:45:01.313 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 29
2018-07-26 15:45:15.938 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:15.939 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1070(Integer)
2018-07-26 15:45:15.941 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:15.942 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:15.943 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1070(Integer)
2018-07-26 15:45:16.084 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:16.085 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:16.085 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1069(Integer)
2018-07-26 15:45:16.085 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:16.086 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:16.086 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1069(Integer)
2018-07-26 15:45:16.108 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:16.109 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:16.109 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1068(Integer)
2018-07-26 15:45:16.110 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:16.110 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:16.111 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1068(Integer)
2018-07-26 15:45:16.164 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:16.205  INFO 4752 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:45:16.208 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:45:16.208 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:45:16.209 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:45:16.210 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:45:16.211 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:45:16.214 DEBUG 4752 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 26
2018-07-26 15:45:31.936 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:31.937 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1067(Integer)
2018-07-26 15:45:31.938 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:31.939 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:31.940 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1067(Integer)
2018-07-26 15:45:32.051 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.051 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.051 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1066(Integer)
2018-07-26 15:45:32.052 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.052 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.053 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1066(Integer)
2018-07-26 15:45:32.087 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.087 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.087 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1061(Integer)
2018-07-26 15:45:32.088 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.088 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.088 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1061(Integer)
2018-07-26 15:45:32.116 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.117 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.117 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1062(Integer)
2018-07-26 15:45:32.118 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.118 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.118 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1062(Integer)
2018-07-26 15:45:32.142 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.142 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.143 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1063(Integer)
2018-07-26 15:45:32.148 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.148 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.149 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1063(Integer)
2018-07-26 15:45:32.197 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.197 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.198 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1064(Integer)
2018-07-26 15:45:32.198 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.199 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.199 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1064(Integer)
2018-07-26 15:45:32.263 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.263 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.263 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1065(Integer)
2018-07-26 15:45:32.264 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.264 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.264 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1065(Integer)
2018-07-26 15:45:32.292 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.293 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.293 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1056(Integer)
2018-07-26 15:45:32.293 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.294 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.294 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1056(Integer)
2018-07-26 15:45:32.318 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.318 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.318 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1058(Integer)
2018-07-26 15:45:32.319 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.319 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.320 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1058(Integer)
2018-07-26 15:45:32.353 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.354 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.354 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1057(Integer)
2018-07-26 15:45:32.355 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:45:32.355 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:45:32.355 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1057(Integer)
2018-07-26 15:45:32.384 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:45:32.398  INFO 4752 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:45:32.399 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:45:32.399 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:45:32.400 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:45:32.401 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:45:32.402 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:45:32.403 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:47:29.574  INFO 4752 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:47:29.581 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:47:29.581 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:47:29.583 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:47:29.584 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:47:29.585 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:47:29.588 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:47:34.896  INFO 4752 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:47:34.900 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:47:34.900 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:47:34.901 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:47:34.903 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:47:34.903 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:47:34.905 DEBUG 4752 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:48:15.873  INFO 4752 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:48:15.876 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:48:15.877 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:48:15.878 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:48:15.879 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:48:15.880 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:48:15.883 DEBUG 4752 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:51:01.043  INFO 4752 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:51:01.047 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:51:01.048 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:51:01.049 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:51:01.051 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:51:01.051 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:51:01.054 DEBUG 4752 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:53:02.571  INFO 4752 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:53:02.574 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:53:02.575 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:53:02.576 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:53:02.577 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:53:02.578 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:53:02.580 DEBUG 4752 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:55:28.996  INFO 4752 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:55:28.999 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:55:29.000 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:55:29.001 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:55:29.002 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:55:29.002 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:55:29.004 DEBUG 4752 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:55:48.250 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 15:55:48.251 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 15:55:48.251 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:55:48.252 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 15:55:48.252 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 15:55:48.253 DEBUG 4752 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 15:55:48.364 ERROR 4752 --- [http-nio-8080-exec-7] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.NumberFormatException: For input string: "20180726106053"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Integer.parseInt(Integer.java:583) ~[na:1.8.0_51]
	at java.lang.Integer.valueOf(Integer.java:766) ~[na:1.8.0_51]
	at com.yanda.service.impl.VipCardServiceImpl.batchGenerate(VipCardServiceImpl.java:118) ~[classes/:na]
	at com.yanda.controller.VipCardController.batchAdd(VipCardController.java:112) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$65395a3b.batchAdd(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-26 15:56:10.495  INFO 4752 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:56:10.497 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:56:10.497 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:56:10.497 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:56:10.498 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:56:10.498 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:56:10.499 DEBUG 4752 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:56:36.066  INFO 4752 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:56:36.069 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:56:36.069 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:56:36.070 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:56:36.071 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:56:36.071 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:56:36.072 DEBUG 4752 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:56:43.040 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 15:56:43.040 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 15:56:43.041 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:56:43.042 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 15:56:43.042 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 15:56:43.043 DEBUG 4752 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 15:56:43.049 ERROR 4752 --- [http-nio-8080-exec-9] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.NumberFormatException: For input string: "20180726106044"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Integer.parseInt(Integer.java:583) ~[na:1.8.0_51]
	at java.lang.Integer.valueOf(Integer.java:766) ~[na:1.8.0_51]
	at com.yanda.service.impl.VipCardServiceImpl.batchGenerate(VipCardServiceImpl.java:118) ~[classes/:na]
	at com.yanda.controller.VipCardController.batchAdd(VipCardController.java:112) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$65395a3b.batchAdd(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-26 15:57:19.334  INFO 11736 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11736 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 15:57:19.338 DEBUG 11736 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 15:57:19.338  INFO 11736 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 15:57:19.629  INFO 11736 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 15:57:19 CST 2018]; root of context hierarchy
2018-07-26 15:57:21.970  INFO 11736 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 15:57:22.643  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.644  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.645  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.645  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.646  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.646  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.646  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.646  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.647  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.647  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.647  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.647  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.648  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.648  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.648  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.648  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.649  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.649  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.649  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 15:57:22.650  WARN 11736 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 15:57:22.684  WARN 11736 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 15:57:23.760  INFO 11736 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b33991dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:57:24.146  INFO 11736 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$ce192a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:57:24.173  INFO 11736 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:57:24.181  INFO 11736 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$fc4bc7fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 15:57:29.960  INFO 11736 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 15:57:29.986  INFO 11736 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 15:57:29.989  INFO 11736 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 15:57:30.218  INFO 11736 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 15:57:30.218  INFO 11736 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10594 ms
2018-07-26 15:57:30.772  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 15:57:30.773  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 15:57:30.773  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 15:57:30.774  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 15:57:30.774  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 15:57:30.775  INFO 11736 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 15:57:33.899  INFO 11736 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 15:57:37.849  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 15:57:19 CST 2018]; root of context hierarchy
2018-07-26 15:57:38.006  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:57:38.009  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.010  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:57:38.010  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.011  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:57:38.011  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 15:57:38.012  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.015  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 15:57:38.015  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 15:57:38.016  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 15:57:38.016  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:57:38.017  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.019  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.020  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.020  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.021  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.021  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.022  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.027  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 15:57:38.027  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 15:57:38.028  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:57:38.029  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.029  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:57:38.030  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:57:38.031  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.032  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 15:57:38.033  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 15:57:38.034  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.037  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.038  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.039  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 15:57:38.039  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.040  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.041  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.041  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.042  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.043  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.044  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.044  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.045  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 15:57:38.050  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.051  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.051  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.052  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 15:57:38.053  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.054  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.054  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.055  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.056  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 15:57:38.056  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.057  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.058  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.059  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.059  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.060  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.064  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.065  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.065  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.066  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.066  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.066  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.068  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.069  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.069  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.070  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.072  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.072  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 15:57:38.073  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 15:57:38.074  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.075  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.076  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.076  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.080  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.080  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 15:57:38.081  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.081  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:57:38.082  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.082  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.083  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 15:57:38.083  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 15:57:38.084  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:57:38.084  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.085  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.086  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.087  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 15:57:38.088  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.088  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.089  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.089  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.090  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:57:38.091  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 15:57:38.091  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.093  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 15:57:38.094  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.094  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 15:57:38.095  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 15:57:38.095  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 15:57:38.096  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.096  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.096  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.097  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.097  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 15:57:38.100  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 15:57:38.101  INFO 11736 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 15:57:38.224  INFO 11736 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:57:38.224  INFO 11736 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:57:38.343  INFO 11736 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 15:57:40.603  INFO 11736 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 15:57:40.607  INFO 11736 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 15:57:40.623  INFO 11736 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 15:57:40.770  INFO 11736 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 15:57:40.780  INFO 11736 --- [main] com.yanda.Application                    : Started Application in 21.74 seconds (JVM running for 22.153)
2018-07-26 15:58:44.710  INFO 11736 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 15:58:44.710  INFO 11736 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 15:58:44.761  INFO 11736 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-26 15:58:45.122  INFO 11736 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:58:45.348  INFO 11736 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 15:58:45.876 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:58:45.916 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:58:45.938 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:58:45.942 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:58:45.943 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:58:45.957 DEBUG 11736 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 16
2018-07-26 15:58:59.993 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 15:58:59.993 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 15:58:59.994 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:58:59.995 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 15:58:59.995 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 15:58:59.997 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 15:59:00.007 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 15:59:00.009 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106098(String), 123456(String), 1(Integer), 2018-07-26 15:58:59.998(Timestamp), 2018-07-26 15:58:59.998(Timestamp), false(Boolean)
2018-07-26 15:59:00.170 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:59:00.171 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 15:59:00.172 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106099(String), 123456(String), 1(Integer), 2018-07-26 15:59:00.171(Timestamp), 2018-07-26 15:59:00.171(Timestamp), false(Boolean)
2018-07-26 15:59:00.195 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:59:00.198 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 15:59:00.198 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106100(String), 123456(String), 1(Integer), 2018-07-26 15:59:00.196(Timestamp), 2018-07-26 15:59:00.196(Timestamp), false(Boolean)
2018-07-26 15:59:00.224 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:59:00.225 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 15:59:00.226 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106101(String), 123456(String), 1(Integer), 2018-07-26 15:59:00.225(Timestamp), 2018-07-26 15:59:00.225(Timestamp), false(Boolean)
2018-07-26 15:59:00.290 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:59:00.291 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 15:59:00.292 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726106102(String), 123456(String), 1(Integer), 2018-07-26 15:59:00.291(Timestamp), 2018-07-26 15:59:00.291(Timestamp), false(Boolean)
2018-07-26 15:59:00.356 DEBUG 11736 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 15:59:00.430  INFO 11736 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:59:00.437 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:59:00.438 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:59:00.439 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:59:00.440 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:59:00.440 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 15:59:00.445 DEBUG 11736 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 15:59:34.930  INFO 11736 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:59:34.933 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:59:34.933 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:59:34.934 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:59:34.936 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:59:34.937 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 20(Integer)
2018-07-26 15:59:34.940 DEBUG 11736 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 20
2018-07-26 15:59:46.320 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:59:46.322 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1060(Integer)
2018-07-26 15:59:46.324 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:59:46.326 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:59:46.327 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1060(Integer)
2018-07-26 15:59:46.437 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:59:46.439 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:59:46.440 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1059(Integer)
2018-07-26 15:59:46.442 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 15:59:46.443 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 15:59:46.444 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1059(Integer)
2018-07-26 15:59:46.470 DEBUG 11736 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 15:59:46.505  INFO 11736 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 15:59:46.510 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 15:59:46.510 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 15:59:46.511 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 15:59:46.513 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 15:59:46.514 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 20(Integer)
2018-07-26 15:59:46.521 DEBUG 11736 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 19
2018-07-26 16:00:00.001  INFO 11736 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-26 16:00:00]
2018-07-26 16:02:39.600  INFO 4188 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4188 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 16:02:39.612 DEBUG 4188 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 16:02:39.613  INFO 4188 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 16:02:40.442  INFO 4188 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:02:40 CST 2018]; root of context hierarchy
2018-07-26 16:02:43.529  INFO 4188 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 16:02:44.485  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.486  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.486  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.487  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.487  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.488  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.488  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.488  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.488  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.488  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.489  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.489  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.489  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.490  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.490  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.490  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.490  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.491  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.491  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.491  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.491  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.492  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.492  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.492  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:02:44.492  WARN 4188 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 16:02:44.538  WARN 4188 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 16:02:45.984  INFO 4188 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cc994df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:02:46.436  INFO 4188 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e778e63e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:02:46.475  INFO 4188 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:02:46.479  INFO 4188 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$15ab8412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:02:52.635  INFO 4188 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 16:02:52.663  INFO 4188 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 16:02:52.665  INFO 4188 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 16:02:52.903  INFO 4188 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 16:02:52.904  INFO 4188 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12469 ms
2018-07-26 16:02:53.386  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 16:02:53.387  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 16:02:53.388  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 16:02:53.388  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 16:02:53.388  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 16:02:53.389  INFO 4188 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 16:02:56.219  INFO 4188 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 16:03:01.370  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:02:40 CST 2018]; root of context hierarchy
2018-07-26 16:03:01.536  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.538  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:03:01.538  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.539  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.539  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:03:01.540  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:03:01.540  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:03:01.543  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:03:01.544  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:03:01.544  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 16:03:01.544  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:03:01.545  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.547  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.548  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.573  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.574  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.574  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.575  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.580  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:03:01.581  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:03:01.582  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:03:01.582  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.583  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:03:01.583  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:03:01.584  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.586  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 16:03:01.587  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 16:03:01.588  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.591  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.653  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.654  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:03:01.655  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.655  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.656  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.657  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.657  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.658  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.659  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.660  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.661  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:03:01.666  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.666  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.667  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.726  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:03:01.727  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.728  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:03:01.728  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.729  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.730  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.730  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.731  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.733  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.733  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.734  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.734  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.740  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.740  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.801  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.802  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.802  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.803  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.805  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.805  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.806  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.806  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.808  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.809  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 16:03:01.809  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 16:03:01.809  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.811  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.811  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.811  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.882  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.883  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:03:01.883  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.884  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.884  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.885  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.885  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:03:01.886  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.886  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 16:03:01.887  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:03:01.887  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.888  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 16:03:01.890  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.891  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.891  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.892  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.956  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 16:03:01.958  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.958  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:03:01.959  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:03:01.963  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 16:03:01.964  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.964  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 16:03:01.965  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:03:01.965  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.966  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.966  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:01.967  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:03:01.967  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:03:01.968  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:02.033  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 16:03:02.034  INFO 4188 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:03:02.138  INFO 4188 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:03:02.139  INFO 4188 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:03:02.255  INFO 4188 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:03:04.619  INFO 4188 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 16:03:04.623  INFO 4188 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 16:03:04.636  INFO 4188 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 16:03:04.774  INFO 4188 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 16:03:04.783  INFO 4188 --- [main] com.yanda.Application                    : Started Application in 26.143 seconds (JVM running for 27.381)
2018-07-26 16:03:24.923  INFO 4188 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 16:03:24.924  INFO 4188 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 16:03:25.015  INFO 4188 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2018-07-26 16:03:25.510  INFO 4188 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:03:25.759  INFO 4188 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 16:03:26.351 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:03:26.397 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:03:26.422 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:03:26.427 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:03:26.428 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:03:26.444 DEBUG 4188 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 19
2018-07-26 16:03:35.603 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.604 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1075(Integer)
2018-07-26 16:03:35.607 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:03:35.608 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.609 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1075(Integer)
2018-07-26 16:03:35.718 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:03:35.720 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.720 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1074(Integer)
2018-07-26 16:03:35.722 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:03:35.723 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.723 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1074(Integer)
2018-07-26 16:03:35.758 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:03:35.760 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.761 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1073(Integer)
2018-07-26 16:03:35.763 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:03:35.767 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.769 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1073(Integer)
2018-07-26 16:03:35.824 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:03:35.826 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.829 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1072(Integer)
2018-07-26 16:03:35.831 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:03:35.833 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.833 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1072(Integer)
2018-07-26 16:03:35.890 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:03:35.891 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.892 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1071(Integer)
2018-07-26 16:03:35.896 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:03:35.897 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:03:35.898 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1071(Integer)
2018-07-26 16:03:35.938 DEBUG 4188 --- [http-nio-8080-exec-2] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:03:35.975  INFO 4188 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:03:35.981 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:03:35.982 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:03:35.984 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:03:35.986 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:03:35.987 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:03:35.992 DEBUG 4188 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 16:03:47.608 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:03:47.609 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:03:47.611 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:03:47.613 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:03:47.615 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:03:47.617 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:03:47.629 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:03:47.631 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105318(String), 123456(String), 1(Integer), 2018-07-26 16:03:47.618(Timestamp), 2018-07-26 16:03:47.618(Timestamp), false(Boolean)
2018-07-26 16:03:47.759 DEBUG 4188 --- [http-nio-8080-exec-4] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:03:47.768 ERROR 4188 --- [http-nio-8080-exec-4] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.NumberFormatException: For input string: "20180726105318"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_51]
	at java.lang.Integer.parseInt(Integer.java:583) ~[na:1.8.0_51]
	at java.lang.Integer.valueOf(Integer.java:766) ~[na:1.8.0_51]
	at com.yanda.service.impl.VipCardServiceImpl.batchGenerate(VipCardServiceImpl.java:130) ~[classes/:na]
	at com.yanda.controller.VipCardController.batchAdd(VipCardController.java:112) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$f2e1788f.batchAdd(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-26 16:09:47.579  INFO 9444 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9444 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 16:09:47.589 DEBUG 9444 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 16:09:47.589  INFO 9444 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 16:09:48.210  INFO 9444 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:09:48 CST 2018]; root of context hierarchy
2018-07-26 16:09:51.159  INFO 9444 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 16:09:52.051  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.052  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.052  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.053  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.053  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.053  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.053  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.053  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.054  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.054  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.054  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.055  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.055  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.055  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.056  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.056  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.057  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.057  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.058  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.058  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.058  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.058  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.059  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.059  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:09:52.059  WARN 9444 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 16:09:52.110  WARN 9444 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 16:09:53.393  INFO 9444 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$480ade27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:09:53.807  INFO 9444 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$62ea7671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:09:53.846  INFO 9444 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:09:53.849  INFO 9444 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$911d1445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:09:59.591  INFO 9444 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 16:09:59.608  INFO 9444 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 16:09:59.610  INFO 9444 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 16:09:59.730  INFO 9444 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 16:09:59.731  INFO 9444 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11528 ms
2018-07-26 16:10:00.024  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 16:10:00.025  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 16:10:00.025  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 16:10:00.025  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 16:10:00.025  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 16:10:00.025  INFO 9444 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 16:10:02.497  INFO 9444 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 16:10:08.297  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:09:48 CST 2018]; root of context hierarchy
2018-07-26 16:10:08.480  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.483  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:10:08.484  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:10:08.485  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:10:08.485  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:10:08.486  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.486  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:08.490  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:10:08.491  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:10:08.491  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 16:10:08.491  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.492  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:10:08.494  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.495  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.562  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.563  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.564  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.565  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.570  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:10:08.571  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:10:08.572  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:10:08.572  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.573  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:10:08.573  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.574  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:10:08.576  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.577  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 16:10:08.578  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 16:10:08.581  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.698  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.699  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:10:08.699  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.700  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.701  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.701  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.702  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.703  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.704  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.704  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.705  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:10:08.709  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.710  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.711  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.830  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:08.831  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:10:08.832  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.833  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.833  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.834  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.835  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.836  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:10:08.838  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.839  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.839  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.840  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:10:08.846  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:08.847  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.848  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:08.848  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:09.002  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:09.002  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.005  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:10:09.006  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:09.006  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.008  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.010  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.011  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 16:10:09.011  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 16:10:09.012  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.014  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.015  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.015  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.019  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.020  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:10:09.020  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.021  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.068  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.069  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:10:09.070  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.070  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 16:10:09.071  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:10:09.072  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.072  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 16:10:09.073  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.075  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.076  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.077  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 16:10:09.078  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.078  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.080  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:10:09.081  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:10:09.132  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.135  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 16:10:09.136  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:09.136  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 16:10:09.137  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:10:09.137  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.137  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:10:09.138  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:09.138  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.139  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:09.140  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:10:09.144  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 16:10:09.145  INFO 9444 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:10:09.275  INFO 9444 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:10:09.276  INFO 9444 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:10:09.411  INFO 9444 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:10:11.923  INFO 9444 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 16:10:11.927  INFO 9444 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 16:10:11.937  INFO 9444 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 16:10:12.069  INFO 9444 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 16:10:12.077  INFO 9444 --- [main] com.yanda.Application                    : Started Application in 25.29 seconds (JVM running for 26.182)
2018-07-26 16:10:23.953  INFO 9444 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 16:10:23.954  INFO 9444 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 16:10:24.087  INFO 9444 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 133 ms
2018-07-26 16:10:24.510  INFO 9444 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:10:24.757  INFO 9444 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 16:10:25.314 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:10:25.353 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:10:25.377 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:10:25.383 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:10:25.384 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:10:25.393 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 15
2018-07-26 16:10:37.142 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:10:37.143 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:10:37.144 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:10:37.145 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:10:37.146 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:10:37.149 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:10:37.165 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:10:37.170 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726107750(String), 111111(String), 1(Integer), 2018-07-26 16:10:37.15(Timestamp), 2018-07-26 16:10:37.15(Timestamp), false(Boolean)
2018-07-26 16:10:37.199 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:10:37.200 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:10:37.201 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726107799(String), 111111(String), 1(Integer), 2018-07-26 16:10:37.199(Timestamp), 2018-07-26 16:10:37.199(Timestamp), false(Boolean)
2018-07-26 16:10:37.228 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:10:37.229 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:10:37.231 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726107829(String), 111111(String), 1(Integer), 2018-07-26 16:10:37.229(Timestamp), 2018-07-26 16:10:37.229(Timestamp), false(Boolean)
2018-07-26 16:10:37.254 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:10:37.255 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:10:37.256 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726107954(String), 111111(String), 1(Integer), 2018-07-26 16:10:37.254(Timestamp), 2018-07-26 16:10:37.254(Timestamp), false(Boolean)
2018-07-26 16:10:37.309 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:10:37.311 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:10:37.314 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726108009(String), 111111(String), 1(Integer), 2018-07-26 16:10:37.309(Timestamp), 2018-07-26 16:10:37.309(Timestamp), false(Boolean)
2018-07-26 16:10:37.364 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:10:37.411  INFO 9444 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:10:37.417 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:10:37.418 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:10:37.419 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:10:37.421 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:10:37.422 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:10:37.437 DEBUG 9444 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 20
2018-07-26 16:11:12.635 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.635 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1081(Integer)
2018-07-26 16:11:12.637 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.638 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.639 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1081(Integer)
2018-07-26 16:11:12.750 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.752 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.753 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1080(Integer)
2018-07-26 16:11:12.754 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.755 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.755 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1080(Integer)
2018-07-26 16:11:12.796 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.797 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.801 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1079(Integer)
2018-07-26 16:11:12.805 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.807 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.808 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1079(Integer)
2018-07-26 16:11:12.851 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.852 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.852 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1078(Integer)
2018-07-26 16:11:12.854 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.855 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.856 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1078(Integer)
2018-07-26 16:11:12.882 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.886 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.886 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1077(Integer)
2018-07-26 16:11:12.887 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.888 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.888 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1077(Integer)
2018-07-26 16:11:12.918 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.919 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.919 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1076(Integer)
2018-07-26 16:11:12.920 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:12.921 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:12.921 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1076(Integer)
2018-07-26 16:11:12.947 DEBUG 9444 --- [http-nio-8080-exec-4] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:12.980  INFO 9444 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:11:12.984 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:11:12.984 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:11:12.985 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:11:12.985 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:11:12.986 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:11:12.989 DEBUG 9444 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 16:11:21.024 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:11:21.024 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:11:21.025 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:11:21.025 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:11:21.026 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:11:21.027 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:11:21.029 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:11:21.030 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105328(String), 111111(String), 1(Integer), 2018-07-26 16:11:21.028(Timestamp), 2018-07-26 16:11:21.028(Timestamp), false(Boolean)
2018-07-26 16:11:21.140 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:11:21.141 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:11:21.142 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105340(String), 111111(String), 1(Integer), 2018-07-26 16:11:21.14(Timestamp), 2018-07-26 16:11:21.14(Timestamp), false(Boolean)
2018-07-26 16:11:21.165 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:11:21.166 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:11:21.167 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105466(String), 111111(String), 1(Integer), 2018-07-26 16:11:21.166(Timestamp), 2018-07-26 16:11:21.166(Timestamp), false(Boolean)
2018-07-26 16:11:21.195 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:11:21.197 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:11:21.199 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105595(String), 111111(String), 1(Integer), 2018-07-26 16:11:21.195(Timestamp), 2018-07-26 16:11:21.195(Timestamp), false(Boolean)
2018-07-26 16:11:21.220 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:11:21.221 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:11:21.221 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105620(String), 111111(String), 1(Integer), 2018-07-26 16:11:21.22(Timestamp), 2018-07-26 16:11:21.22(Timestamp), false(Boolean)
2018-07-26 16:11:21.250 DEBUG 9444 --- [http-nio-8080-exec-6] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:11:21.266  INFO 9444 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:11:21.269 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:11:21.269 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:11:21.270 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:11:21.271 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:11:21.271 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:11:21.274 DEBUG 9444 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 19
2018-07-26 16:11:54.498 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.498 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1086(Integer)
2018-07-26 16:11:54.500 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:54.501 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.501 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1086(Integer)
2018-07-26 16:11:54.848 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:54.848 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.849 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1085(Integer)
2018-07-26 16:11:54.849 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:54.850 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.850 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1085(Integer)
2018-07-26 16:11:54.877 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:54.878 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.878 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1084(Integer)
2018-07-26 16:11:54.879 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:54.879 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.879 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1084(Integer)
2018-07-26 16:11:54.914 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:54.914 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.915 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1083(Integer)
2018-07-26 16:11:54.916 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:54.916 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.916 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1083(Integer)
2018-07-26 16:11:54.958 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:54.960 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.961 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1082(Integer)
2018-07-26 16:11:54.965 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:11:54.966 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:11:54.967 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1082(Integer)
2018-07-26 16:11:55.013 DEBUG 9444 --- [http-nio-8080-exec-8] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:11:55.058  INFO 9444 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:11:55.062 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:11:55.063 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:11:55.064 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:11:55.066 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:11:55.067 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:11:55.071 DEBUG 9444 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 16:12:02.932 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:12:02.932 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:12:02.933 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:12:02.935 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:12:02.935 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:12:02.937 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:12:02.938 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:12:02.938 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105337(String), 111111(String), 1(Integer), 2018-07-26 16:12:02.937(Timestamp), 2018-07-26 16:12:02.937(Timestamp), false(Boolean)
2018-07-26 16:12:03.051 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:12:03.055 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:12:03.056 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105352(String), 111111(String), 1(Integer), 2018-07-26 16:12:03.052(Timestamp), 2018-07-26 16:12:03.052(Timestamp), false(Boolean)
2018-07-26 16:12:03.081 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:12:03.082 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:12:03.083 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105481(String), 111111(String), 1(Integer), 2018-07-26 16:12:03.082(Timestamp), 2018-07-26 16:12:03.082(Timestamp), false(Boolean)
2018-07-26 16:12:03.106 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:12:03.107 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:12:03.108 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105507(String), 111111(String), 1(Integer), 2018-07-26 16:12:03.107(Timestamp), 2018-07-26 16:12:03.107(Timestamp), false(Boolean)
2018-07-26 16:12:03.137 DEBUG 9444 --- [http-nio-8080-exec-10] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:12:03.162  INFO 9444 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:12:03.165 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:12:03.166 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:12:03.166 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:12:03.167 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:12:03.168 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:12:03.172 DEBUG 9444 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 18
2018-07-26 16:12:58.513 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:12:58.513 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:12:58.514 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:12:58.515 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:12:58.515 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:12:58.516 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:13:16.682 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:13:16.704 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726108879(String), 111111(String), 1(Integer), 2018-07-26 16:13:11.576(Timestamp), 2018-07-26 16:13:11.576(Timestamp), false(Boolean)
2018-07-26 16:13:17.073 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:13:32.204 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:13:32.207 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726108844(String), 111111(String), 1(Integer), 2018-07-26 16:13:32.203(Timestamp), 2018-07-26 16:13:32.203(Timestamp), false(Boolean)
2018-07-26 16:13:32.337 DEBUG 9444 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:14:00.128  INFO 5688 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 5688 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 16:14:00.132 DEBUG 5688 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 16:14:00.132  INFO 5688 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 16:14:00.396  INFO 5688 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:14:00 CST 2018]; root of context hierarchy
2018-07-26 16:14:02.282  INFO 5688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 16:14:02.946  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.947  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.947  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.947  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.947  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.948  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.948  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.948  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.949  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.949  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.949  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.949  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.950  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.950  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.950  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.950  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.951  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.951  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.951  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.951  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.951  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.952  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.952  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.952  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:14:02.953  WARN 5688 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 16:14:02.993  WARN 5688 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 16:14:04.106  INFO 5688 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c1e128fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:14:04.613  INFO 5688 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$dcc0c144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:14:04.653  INFO 5688 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:14:04.663  INFO 5688 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af35f18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:14:10.666  INFO 5688 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 16:14:10.690  INFO 5688 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 16:14:10.693  INFO 5688 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 16:14:10.947  INFO 5688 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 16:14:10.948  INFO 5688 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10557 ms
2018-07-26 16:14:11.551  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 16:14:11.552  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 16:14:11.553  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 16:14:11.553  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 16:14:11.553  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 16:14:11.554  INFO 5688 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 16:14:14.362  INFO 5688 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 16:14:18.522  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:14:00 CST 2018]; root of context hierarchy
2018-07-26 16:14:18.711  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.714  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:14:18.714  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:14:18.715  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.716  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:14:18.716  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:14:18.717  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.721  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:14:18.722  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:14:18.723  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 16:14:18.723  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.724  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:14:18.728  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.730  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.731  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.731  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.732  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.733  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.740  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:14:18.740  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:14:18.741  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:14:18.742  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.743  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:14:18.743  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.744  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:14:18.747  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.834  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 16:14:18.835  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 16:14:18.839  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.840  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.841  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:14:18.841  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.842  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.843  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.844  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.845  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.847  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.847  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.848  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.848  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:14:18.851  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.852  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.854  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.855  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.856  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:14:18.856  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.857  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.857  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.858  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.858  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.859  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:14:18.862  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.862  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.863  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.863  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.869  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.870  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.871  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.873  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.874  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.875  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.879  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.881  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.883  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.884  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.888  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.889  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 16:14:18.889  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 16:14:18.890  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.892  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.893  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.893  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.897  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.898  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:14:18.899  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.899  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 16:14:18.900  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:14:18.900  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.901  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 16:14:18.901  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.902  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.903  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.904  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:14:18.904  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.907  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.908  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.909  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 16:14:18.909  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.910  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.911  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.912  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:14:18.912  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:14:18.916  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 16:14:18.917  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.918  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 16:14:18.918  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:14:18.918  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.919  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.920  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.920  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:14:18.921  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.921  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:14:18.926  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 16:14:18.926  INFO 5688 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:14:19.054  INFO 5688 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:14:19.054  INFO 5688 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:14:19.194  INFO 5688 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:14:21.881  INFO 5688 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 16:14:21.884  INFO 5688 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 16:14:21.896  INFO 5688 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 16:14:22.033  INFO 5688 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 16:14:22.042  INFO 5688 --- [main] com.yanda.Application                    : Started Application in 22.238 seconds (JVM running for 22.69)
2018-07-26 16:14:27.657  INFO 5688 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 16:14:27.657  INFO 5688 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 16:14:27.705  INFO 5688 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-26 16:14:27.983  INFO 5688 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:14:28.116  INFO 5688 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 16:14:28.358 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:14:28.377 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:14:28.389 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:14:28.391 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:14:28.391 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:14:28.398 DEBUG 5688 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 20
2018-07-26 16:16:39.726  INFO 5688 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:16:39.735 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:16:39.736 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:16:39.737 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:16:39.739 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:16:39.739 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:16:39.745 DEBUG 5688 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 20
2018-07-26 16:16:49.419 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.420 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1090(Integer)
2018-07-26 16:16:49.424 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.425 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.426 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1090(Integer)
2018-07-26 16:16:49.539 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.542 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.543 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1089(Integer)
2018-07-26 16:16:49.545 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.546 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.547 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1089(Integer)
2018-07-26 16:16:49.594 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.595 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.596 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1088(Integer)
2018-07-26 16:16:49.598 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.599 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.600 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1088(Integer)
2018-07-26 16:16:49.650 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.653 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.654 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1087(Integer)
2018-07-26 16:16:49.657 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.658 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.659 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1087(Integer)
2018-07-26 16:16:49.686 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.687 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.688 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1091(Integer)
2018-07-26 16:16:49.690 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.691 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.692 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1091(Integer)
2018-07-26 16:16:49.719 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.721 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_days,create_time,update_time,exp_time,user_id,nick_name,is_forever FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.722 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : ==> Parameters: 1092(Integer)
2018-07-26 16:16:49.723 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByPrimaryKey             : <==      Total: 1
2018-07-26 16:16:49.725 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-26 16:16:49.726 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1092(Integer)
2018-07-26 16:16:49.759 DEBUG 5688 --- [http-nio-8080-exec-3] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-26 16:16:49.804  INFO 5688 --- [http-nio-8080-exec-4] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:16:49.809 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:16:49.809 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:16:49.810 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:16:49.813 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:16:49.813 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:16:49.822 DEBUG 5688 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 14
2018-07-26 16:16:57.724 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:16:57.724 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:16:57.725 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:16:57.727 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:16:57.728 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:16:57.730 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:17:15.611 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:15.617 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105336(String), 111111(String), 1(Integer), 2018-07-26 16:17:12.129(Timestamp), 2018-07-26 16:17:12.129(Timestamp), false(Boolean)
2018-07-26 16:17:15.733 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:24.917 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:24.919 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105425(String), 111111(String), 1(Integer), 2018-07-26 16:17:24.0(Timestamp), 2018-07-26 16:17:24.0(Timestamp), false(Boolean)
2018-07-26 16:17:25.040 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:25.041 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:25.041 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105540(String), 111111(String), 1(Integer), 2018-07-26 16:17:25.04(Timestamp), 2018-07-26 16:17:25.04(Timestamp), false(Boolean)
2018-07-26 16:17:25.069 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:25.070 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:25.071 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726105670(String), 111111(String), 1(Integer), 2018-07-26 16:17:25.07(Timestamp), 2018-07-26 16:17:25.07(Timestamp), false(Boolean)
2018-07-26 16:17:25.125 DEBUG 5688 --- [http-nio-8080-exec-5] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:25.154  INFO 5688 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:17:25.157 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:17:25.158 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:17:25.160 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:17:25.162 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:17:25.163 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:17:25.168 DEBUG 5688 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 18
2018-07-26 16:17:51.445 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 16:17:51.446 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 16:17:51.447 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:17:51.448 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 16:17:51.448 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 16:17:51.450 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 16:17:51.451 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:51.452 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726109650(String), 111111(String), 1(Integer), 2018-07-26 16:17:51.45(Timestamp), 2018-07-26 16:17:51.45(Timestamp), false(Boolean)
2018-07-26 16:17:51.576 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:51.577 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:51.577 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726109776(String), 111111(String), 1(Integer), 2018-07-26 16:17:51.576(Timestamp), 2018-07-26 16:17:51.576(Timestamp), false(Boolean)
2018-07-26 16:17:51.605 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:51.606 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 16:17:51.607 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726109806(String), 111111(String), 1(Integer), 2018-07-26 16:17:51.606(Timestamp), 2018-07-26 16:17:51.606(Timestamp), false(Boolean)
2018-07-26 16:17:51.631 DEBUG 5688 --- [http-nio-8080-exec-7] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 16:17:51.671  INFO 5688 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 16:17:51.674 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 16:17:51.676 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 16:17:51.678 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 16:17:51.680 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 16:17:51.680 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 16:17:51.685 DEBUG 5688 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 16:58:12.814  INFO 11000 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11000 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 16:58:12.818 DEBUG 11000 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 16:58:12.818  INFO 11000 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 16:58:13.196  INFO 11000 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:58:13 CST 2018]; root of context hierarchy
2018-07-26 16:58:15.330  INFO 11000 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 16:58:15.936  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.937  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.937  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.937  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.937  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.937  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.938  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.938  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.938  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.938  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.938  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.939  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.939  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.939  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.940  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.940  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.940  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 16:58:15.941  WARN 11000 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 16:58:15.973  WARN 11000 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 16:58:16.929  INFO 11000 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$455ad2f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:58:17.380  INFO 11000 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$603a6b3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:58:17.417  INFO 11000 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:58:17.425  INFO 11000 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$8e6d0912] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 16:58:23.167  INFO 11000 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 16:58:23.197  INFO 11000 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 16:58:23.199  INFO 11000 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 16:58:23.440  INFO 11000 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 16:58:23.441  INFO 11000 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10251 ms
2018-07-26 16:58:23.964  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 16:58:23.965  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 16:58:23.965  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 16:58:23.966  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 16:58:23.966  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 16:58:23.967  INFO 11000 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 16:58:26.529  INFO 11000 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 16:58:30.317  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 16:58:13 CST 2018]; root of context hierarchy
2018-07-26 16:58:30.497  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:58:30.499  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:58:30.500  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:58:30.501  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 16:58:30.502  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.503  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.503  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.507  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:58:30.508  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 16:58:30.508  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 16:58:30.509  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.510  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:58:30.512  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.513  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.514  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.515  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.515  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.516  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.521  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:58:30.523  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 16:58:30.523  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:58:30.524  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.524  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:58:30.525  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.525  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:58:30.527  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 16:58:30.527  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 16:58:30.528  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.530  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.531  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.531  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:58:30.531  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.532  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.532  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.533  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.533  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.534  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.535  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.536  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.537  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:58:30.541  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.542  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.543  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.543  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 16:58:30.544  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.544  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.545  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.545  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.546  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 16:58:30.547  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.547  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.550  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.551  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.551  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.552  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.556  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.557  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.557  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.557  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.558  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.558  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.560  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.561  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.561  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.562  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.565  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.566  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 16:58:30.566  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 16:58:30.567  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.569  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.570  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.570  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.574  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.575  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 16:58:30.575  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.575  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:58:30.576  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.576  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:58:30.577  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.578  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 16:58:30.578  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 16:58:30.579  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.579  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.580  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.582  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 16:58:30.583  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.584  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.584  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.585  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.586  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:58:30.587  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 16:58:30.587  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.591  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 16:58:30.592  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.592  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 16:58:30.593  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 16:58:30.593  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.594  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 16:58:30.594  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.595  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.595  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 16:58:30.596  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.600  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 16:58:30.602  INFO 11000 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 16:58:30.709  INFO 11000 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:58:30.709  INFO 11000 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:58:30.832  INFO 11000 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 16:58:33.214  INFO 11000 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 16:58:33.217  INFO 11000 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 16:58:33.230  INFO 11000 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 16:58:33.367  INFO 11000 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 16:58:33.377  INFO 11000 --- [main] com.yanda.Application                    : Started Application in 20.866 seconds (JVM running for 21.344)
2018-07-26 16:59:48.932  INFO 11000 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 16:59:48.933  INFO 11000 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 16:59:48.989  INFO 11000 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2018-07-26 16:59:49.318  INFO 11000 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 16:59:49.515 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-26 16:59:49.532 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-26 16:59:49.543 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-26 16:59:49.546 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-26 16:59:49.546 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-26 16:59:49.550 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-26 16:59:49.550 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-26 16:59:49.551 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-26 16:59:49.551 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-26 16:59:49.552 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-26 16:59:49.553 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-26 16:59:49.554 DEBUG 11000 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-26 16:59:50.593 ERROR 11000 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 16:59:50.630 ERROR 11000 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 16:59:50.630 ERROR 11000 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-26 16:59:50.630 ERROR 11000 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-26 16:59:50.640 ERROR 11000 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-26 17:00:07.645  INFO 11000 --- [http-nio-8080-exec-8] com.yanda.service.impl.UserServiceImpl   : 用户数据列表将从数据库中获取...
2018-07-26 17:00:07.694 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.U.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_user_info WHERE (user_name LIKE ?) OR (nick_name LIKE ?) 
2018-07-26 17:00:07.695 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.U.selectByExample_COUNT          : ==> Parameters: %%(String), %%(String)
2018-07-26 17:00:07.696 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.U.selectByExample_COUNT          : <==      Total: 1
2018-07-26 17:00:07.699 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( user_name like ? ) or( nick_name like ? ) LIMIT ? 
2018-07-26 17:00:07.702 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: %%(String), %%(String), 10(Integer)
2018-07-26 17:00:07.707 DEBUG 11000 --- [http-nio-8080-exec-8] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 10
2018-07-26 17:00:55.682  INFO 11000 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 17:00:55.689 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 17:00:55.690 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 17:00:55.691 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 17:00:55.930 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 17:00:55.931 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 17:00:55.936 DEBUG 11000 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 17:02:34.370 ERROR 11000 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 17:02:34.475 ERROR 11000 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 17:02:36.896 ERROR 11000 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 17:02:36.931 ERROR 11000 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 17:02:36.943 ERROR 11000 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-26 17:02:36.943 ERROR 11000 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-26 17:02:36.987 ERROR 11000 --- [http-nio-8080-exec-8] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-26 17:06:57.484 ERROR 11000 --- [http-nio-8080-exec-1] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 17:06:57.584 ERROR 11000 --- [http-nio-8080-exec-2] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 17:06:57.671 ERROR 11000 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-26 17:06:57.708 ERROR 11000 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-26 17:06:57.718 ERROR 11000 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-26 17:06:59.514  INFO 11000 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 17:06:59.522 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 17:06:59.522 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 17:06:59.523 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 17:06:59.524 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 17:06:59.524 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 17:06:59.529 DEBUG 11000 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 17:07:53.426  INFO 11000 --- [http-nio-8080-exec-6] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 17:07:53.429 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 17:07:53.430 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 17:07:53.432 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 17:07:53.433 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 17:07:53.434 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 17:07:53.441 DEBUG 11000 --- [http-nio-8080-exec-6] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 18:52:11.588  INFO 9236 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9236 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 18:52:11.619 DEBUG 9236 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 18:52:11.620  INFO 9236 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 18:52:12.095  INFO 9236 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 18:52:12 CST 2018]; root of context hierarchy
2018-07-26 18:52:14.333  INFO 9236 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 18:52:14.994  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.995  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.995  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.995  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.996  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.996  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.996  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.996  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.997  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.997  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.997  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.997  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.998  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.998  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.998  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.998  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.999  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.999  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:14.999  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.000  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.000  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.000  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.000  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.001  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 18:52:15.001  WARN 9236 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 18:52:15.062  WARN 9236 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 18:52:16.147  INFO 9236 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c1e128fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 18:52:16.653  INFO 9236 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$dcc0c144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 18:52:16.696  INFO 9236 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 18:52:16.703  INFO 9236 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af35f18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 18:52:22.720  INFO 9236 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 18:52:22.767  INFO 9236 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 18:52:22.772  INFO 9236 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 18:52:23.158  INFO 9236 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 18:52:23.159  INFO 9236 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11071 ms
2018-07-26 18:52:23.700  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 18:52:23.701  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 18:52:23.702  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 18:52:23.703  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 18:52:23.704  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 18:52:23.704  INFO 9236 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 18:52:27.074  INFO 9236 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 18:52:32.290  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 18:52:12 CST 2018]; root of context hierarchy
2018-07-26 18:52:32.807  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 18:52:32.811  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.812  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 18:52:32.813  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 18:52:32.815  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 18:52:32.816  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.817  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.821  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 18:52:32.822  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 18:52:32.823  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 18:52:32.824  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 18:52:32.825  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.828  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.829  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.830  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.831  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.832  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.833  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.838  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 18:52:32.839  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 18:52:32.840  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 18:52:32.840  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.841  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 18:52:32.842  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 18:52:32.843  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.846  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 18:52:32.847  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 18:52:32.847  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.851  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.851  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.852  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 18:52:32.853  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.853  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.854  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.855  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.856  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.857  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.858  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.859  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.861  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 18:52:32.867  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.868  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.872  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.873  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 18:52:32.874  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.875  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.875  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.876  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 18:52:32.877  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.877  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.878  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.880  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.881  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.882  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.883  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.892  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.893  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.894  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.894  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.895  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.895  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.898  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.899  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.899  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.901  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.904  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.905  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 18:52:32.905  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 18:52:32.906  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.908  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.909  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.910  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.914  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.915  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 18:52:32.915  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.915  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 18:52:32.916  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.916  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 18:52:32.917  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.917  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 18:52:32.918  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 18:52:32.919  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.919  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.920  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.922  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 18:52:32.922  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.923  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.923  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.923  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.925  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.925  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 18:52:32.925  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 18:52:32.928  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 18:52:32.928  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.929  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 18:52:32.929  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 18:52:32.930  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 18:52:32.930  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.931  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.931  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.932  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.933  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 18:52:32.937  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 18:52:32.937  INFO 9236 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 18:52:33.070  INFO 9236 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 18:52:33.071  INFO 9236 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 18:52:33.267  INFO 9236 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 18:52:35.805  INFO 9236 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 18:52:35.810  INFO 9236 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 18:52:35.820  INFO 9236 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 18:52:35.987  INFO 9236 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 18:52:35.995  INFO 9236 --- [main] com.yanda.Application                    : Started Application in 25.153 seconds (JVM running for 26.597)
2018-07-26 18:52:48.108  INFO 9236 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 18:52:48.109  INFO 9236 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 18:52:48.172  INFO 9236 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2018-07-26 18:52:48.792  INFO 9236 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 18:52:49.456 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-26 18:52:49.492 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-26 18:52:49.606 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-26 18:52:49.615 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-26 18:52:49.617 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-26 18:52:49.629 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-26 18:52:49.630 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-26 18:52:49.693 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-26 18:52:49.694 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-26 18:52:49.694 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-26 18:52:49.788 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-26 18:52:49.789 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-26 18:52:51.198  INFO 9236 --- [http-nio-8080-exec-4] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3312]的信息
2018-07-26 18:52:51.202 DEBUG 9236 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 18:52:51.203 DEBUG 9236 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3312(Long)
2018-07-26 18:52:51.228  INFO 9236 --- [http-nio-8080-exec-5] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3371]的信息
2018-07-26 18:52:51.237  INFO 9236 --- [http-nio-8080-exec-3] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[21]的信息
2018-07-26 18:52:51.243 DEBUG 9236 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 18:52:51.244 DEBUG 9236 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3371(Long)
2018-07-26 18:52:51.260 DEBUG 9236 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 18:52:51.262 DEBUG 9236 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 21(Long)
2018-07-26 18:52:51.375 DEBUG 9236 --- [http-nio-8080-exec-3] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 18:52:51.381 DEBUG 9236 --- [http-nio-8080-exec-5] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 18:52:51.381 DEBUG 9236 --- [http-nio-8080-exec-4] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 18:52:51.481 ERROR 9236 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-26 18:52:51.481 ERROR 9236 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-26 18:52:51.488 ERROR 9236 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-26 18:52:51.526  INFO 9236 --- [http-nio-8080-exec-6] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3372]的信息
2018-07-26 18:52:51.527 DEBUG 9236 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 18:52:51.528 DEBUG 9236 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3372(Long)
2018-07-26 18:52:51.532 DEBUG 9236 --- [http-nio-8080-exec-6] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 18:52:51.538  INFO 9236 --- [http-nio-8080-exec-7] c.y.service.impl.AttachmentServiceImpl   : 从数据库获取附件ID=[3385]的信息
2018-07-26 18:52:51.539 DEBUG 9236 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==>  Preparing: SELECT appendix_id,old_filename,new_filename,file_ext,file_path,file_type,create_time,duration FROM t_attachment_info WHERE appendix_id = ? 
2018-07-26 18:52:51.539 DEBUG 9236 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : ==> Parameters: 3385(Long)
2018-07-26 18:52:51.542 DEBUG 9236 --- [http-nio-8080-exec-7] c.y.m.g.A.selectByPrimaryKey             : <==      Total: 1
2018-07-26 18:52:51.585 ERROR 9236 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-26 18:52:51.590 ERROR 9236 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-26 18:52:53.657  INFO 9236 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 18:52:53.753 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 18:52:53.753 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 18:52:53.762 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 18:52:53.766 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 18:52:53.768 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 18:52:53.789 DEBUG 9236 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 18:55:05.754  INFO 9236 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 18:55:05.770 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 18:55:05.770 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 18:55:05.772 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 18:55:05.774 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 18:55:05.774 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 18:55:05.781 DEBUG 9236 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 18:56:20.112  INFO 9236 --- [http-nio-8080-exec-10] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 18:56:20.116 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 18:56:20.117 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 18:56:20.118 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 18:56:20.119 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 18:56:20.120 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 18:56:20.126 DEBUG 9236 --- [http-nio-8080-exec-10] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 18:57:04.935  INFO 9236 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 18:57:04.937 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 18:57:04.937 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 18:57:04.939 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 18:57:04.940 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 18:57:04.941 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 18:57:04.943 DEBUG 9236 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 19:08:11.123  INFO 4780 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4780 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 19:08:11.134 DEBUG 4780 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 19:08:11.134  INFO 4780 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 19:08:11.773  INFO 4780 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 19:08:11 CST 2018]; root of context hierarchy
2018-07-26 19:08:15.849  INFO 4780 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 19:08:16.612  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.612  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.612  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.613  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.613  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.613  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.613  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.613  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.614  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.614  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.614  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.614  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.615  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.615  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.615  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.616  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.616  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.665  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.665  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.665  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.665  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.665  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.666  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.666  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:08:16.666  WARN 4780 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 19:08:16.707  WARN 4780 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 19:08:17.921  INFO 4780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$997ccdd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:08:18.299  INFO 4780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b45c661c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:08:18.338  INFO 4780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:08:18.346  INFO 4780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e28f03f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:08:24.134  INFO 4780 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 19:08:24.162  INFO 4780 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 19:08:24.165  INFO 4780 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 19:08:24.389  INFO 4780 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 19:08:24.390  INFO 4780 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12622 ms
2018-07-26 19:08:25.014  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 19:08:25.015  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 19:08:25.016  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 19:08:25.016  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 19:08:25.017  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 19:08:25.017  INFO 4780 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 19:08:28.965  INFO 4780 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 19:08:32.550  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 19:08:11 CST 2018]; root of context hierarchy
2018-07-26 19:08:32.740  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.743  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:08:32.744  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:08:32.745  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:08:32.745  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:08:32.746  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.746  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.750  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 19:08:32.751  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 19:08:32.752  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 19:08:32.753  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.753  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:08:32.757  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.757  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.758  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.759  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.760  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.760  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.765  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 19:08:32.766  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 19:08:32.767  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:08:32.767  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.767  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:08:32.768  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:08:32.768  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.770  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 19:08:32.771  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 19:08:32.772  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.776  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.777  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.778  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 19:08:32.779  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.779  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.780  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.781  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.782  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.783  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.784  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.784  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.786  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 19:08:32.790  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.791  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.792  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.793  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:08:32.794  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.795  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.796  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.796  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.797  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.798  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 19:08:32.798  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.800  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.801  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.802  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.802  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.808  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.808  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.809  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.809  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.809  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.810  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.812  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.813  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.814  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.815  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.817  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.818  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 19:08:32.818  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 19:08:32.819  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.821  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.821  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.822  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.827  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.828  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 19:08:32.829  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.830  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.831  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.831  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.832  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:08:32.832  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.833  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.834  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:08:32.834  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 19:08:32.835  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 19:08:32.837  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.838  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.839  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.840  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.840  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 19:08:32.842  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.843  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:08:32.844  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:08:32.848  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 19:08:32.848  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.849  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 19:08:32.849  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 19:08:32.850  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.851  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:08:32.851  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.852  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.852  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.853  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:08:32.857  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 19:08:32.858  INFO 4780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:08:32.988  INFO 4780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:08:32.989  INFO 4780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:08:33.123  INFO 4780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:08:35.523  INFO 4780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 19:08:35.527  INFO 4780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 19:08:35.539  INFO 4780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 19:08:35.691  INFO 4780 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 19:08:35.703  INFO 4780 --- [main] com.yanda.Application                    : Started Application in 25.479 seconds (JVM running for 26.888)
2018-07-26 19:11:03.714  INFO 4780 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 19:11:03.715  INFO 4780 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 19:11:03.804  INFO 4780 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2018-07-26 19:11:04.170  INFO 4780 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 19:11:04.387  INFO 4780 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 19:11:04.990 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 19:11:05.036 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 19:11:05.063 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:11:05.067 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 19:11:05.068 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 19:11:05.083 DEBUG 4780 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 19:11:21.032 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 19:11:21.033 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 19:11:21.034 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:11:21.035 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 19:11:21.036 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 19:11:21.038 DEBUG 4780 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 19:11:21.047 ERROR 4780 --- [http-nio-8080-exec-2] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.ArrayIndexOutOfBoundsException: 52
	at com.yanda.util.StringUtil.generateRandomWordAndNum(StringUtil.java:1438) ~[classes/:na]
	at com.yanda.service.impl.VipCardServiceImpl.batchGenerate(VipCardServiceImpl.java:131) ~[classes/:na]
	at com.yanda.controller.VipCardController.batchAdd(VipCardController.java:118) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$9bbad10c.batchAdd(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-26 19:11:42.998  INFO 4780 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 19:11:43.002 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 19:11:43.002 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 19:11:43.003 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:11:43.004 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 19:11:43.005 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 19:11:43.013 DEBUG 4780 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 19:11:46.929 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 19:11:46.930 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 19:11:46.930 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:11:46.932 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 19:11:46.933 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 19:11:46.935 DEBUG 4780 --- [http-nio-8080-exec-4] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 19:11:46.937 ERROR 4780 --- [http-nio-8080-exec-4] com.yanda.aop.TokenValidAop              : 校验token异常:

java.lang.ArrayIndexOutOfBoundsException: 56
	at com.yanda.util.StringUtil.generateRandomWordAndNum(StringUtil.java:1438) ~[classes/:na]
	at com.yanda.service.impl.VipCardServiceImpl.batchGenerate(VipCardServiceImpl.java:131) ~[classes/:na]
	at com.yanda.controller.VipCardController.batchAdd(VipCardController.java:118) ~[classes/:na]
	at com.yanda.controller.VipCardController$$FastClassBySpringCGLIB$$1cf4468f.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.TokenValidAop.handleControllerMethod(TokenValidAop.java:82) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.aop.ExceptionHandleAop.handleControllerMethod(ExceptionHandleAop.java:77) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) [spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at com.yanda.controller.VipCardController$$EnhancerBySpringCGLIB$$9bbad10c.batchAdd(<generated>) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at com.yanda.web.filter.DOPXssFilter.doFilter(DOPXssFilter.java:36) [classes/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]

2018-07-26 19:11:58.458  INFO 10544 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 10544 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-26 19:11:58.466 DEBUG 10544 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-26 19:11:58.466  INFO 10544 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-26 19:11:58.917  INFO 10544 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 19:11:58 CST 2018]; root of context hierarchy
2018-07-26 19:12:00.986  INFO 10544 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-26 19:12:01.610  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.611  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.612  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.612  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'paperInfoMapper' and 'com.yanda.mapper.generated.PaperInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.612  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.612  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.612  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.613  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-26 19:12:01.614  WARN 10544 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-26 19:12:01.645  WARN 10544 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-26 19:12:02.582  INFO 10544 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$26545890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:12:02.957  INFO 10544 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$4133f0da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:12:02.988  INFO 10544 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:12:02.996  INFO 10544 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6f668eae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-26 19:12:08.731  INFO 10544 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-26 19:12:08.753  INFO 10544 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-26 19:12:08.756  INFO 10544 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-26 19:12:08.979  INFO 10544 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-26 19:12:08.980  INFO 10544 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10070 ms
2018-07-26 19:12:09.477  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-26 19:12:09.478  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-26 19:12:09.479  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-26 19:12:09.479  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-26 19:12:09.479  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-26 19:12:09.480  INFO 10544 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-26 19:12:11.877  INFO 10544 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-26 19:12:15.353  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 26 19:11:58 CST 2018]; root of context hierarchy
2018-07-26 19:12:15.551  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:12:15.553  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:12:15.554  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-26 19:12:15.554  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:12:15.555  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/getUrl],methods=[GET]}" onto public java.lang.Object com.yanda.controller.AttachmentController.getAttachUrl(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.555  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.556  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.559  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 19:12:15.560  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-26 19:12:15.560  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-26 19:12:15.561  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.561  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:12:15.564  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.565  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.566  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.566  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.567  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.567  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.571  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 19:12:15.572  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-26 19:12:15.572  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:12:15.573  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.573  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.573  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:12:15.574  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:12:15.576  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-26 19:12:15.577  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-26 19:12:15.578  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.580  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.581  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.582  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 19:12:15.582  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.583  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.583  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.584  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.585  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.586  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.586  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.587  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.588  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 19:12:15.591  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.592  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.592  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.593  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.593  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-26 19:12:15.593  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.594  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/recent],methods=[GET]}" onto public java.lang.Object com.yanda.controller.MovieController.getRecentMovies(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.594  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.594  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.595  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.595  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-26 19:12:15.597  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.598  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.PaperInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.598  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.599  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/paper/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PaperController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.604  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.604  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.605  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.606  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.606  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.607  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.609  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.609  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.609  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.610  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.612  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.613  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-26 19:12:15.613  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-26 19:12:15.614  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.615  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.616  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.616  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.620  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.621  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-26 19:12:15.621  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.622  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:12:15.622  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-26 19:12:15.622  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-26 19:12:15.623  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.623  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:12:15.624  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.624  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.625  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.625  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.628  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-26 19:12:15.628  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.629  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.629  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.630  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.631  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.632  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:12:15.633  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-26 19:12:15.636  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-26 19:12:15.637  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.638  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws java.lang.Exception
2018-07-26 19:12:15.638  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-26 19:12:15.638  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.639  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.639  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchAdd],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchAdd(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-26 19:12:15.639  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.640  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.640  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-26 19:12:15.644  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-26 19:12:15.644  INFO 10544 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-26 19:12:15.757  INFO 10544 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:12:15.758  INFO 10544 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:12:15.871  INFO 10544 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-26 19:12:17.911  INFO 10544 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-26 19:12:17.913  INFO 10544 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-26 19:12:17.922  INFO 10544 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-26 19:12:18.048  INFO 10544 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-26 19:12:18.057  INFO 10544 --- [main] com.yanda.Application                    : Started Application in 20.189 seconds (JVM running for 20.874)
2018-07-26 19:12:22.554  INFO 10544 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-26 19:12:22.554  INFO 10544 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-26 19:12:22.635  INFO 10544 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2018-07-26 19:12:23.011  INFO 10544 --- [http-nio-8080-exec-1] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 19:12:23.198  INFO 10544 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-26 19:12:23.679 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 19:12:23.716 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 19:12:23.735 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:12:23.740 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 19:12:23.741 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 19:12:23.759 DEBUG 10544 --- [http-nio-8080-exec-1] c.y.m.g.V.selectByExample                : <==      Total: 21
2018-07-26 19:12:31.841 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-26 19:12:31.842 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-26 19:12:31.842 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:12:31.843 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-26 19:12:31.843 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-26 19:12:31.845 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-26 19:12:31.854 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 19:12:31.857 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726109945(String), mZT0Y2(String), 1(Integer), 2018-07-26 19:12:31.845(Timestamp), 2018-07-26 19:12:31.845(Timestamp), false(Boolean)
2018-07-26 19:12:31.899 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 19:12:31.901 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==>  Preparing: INSERT INTO t_vip_card_info ( card_num,card_password,purchase_days,create_time,update_time,is_forever ) VALUES( ?,?,?,?,?,? ) 
2018-07-26 19:12:31.901 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : ==> Parameters: 20180726110000(String), iPyJhu(String), 1(Integer), 2018-07-26 19:12:31.9(Timestamp), 2018-07-26 19:12:31.9(Timestamp), false(Boolean)
2018-07-26 19:12:31.940 DEBUG 10544 --- [http-nio-8080-exec-2] c.y.m.g.V.insertSelective                : <==    Updates: 1
2018-07-26 19:12:31.976  INFO 10544 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-26 19:12:31.982 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-26 19:12:31.982 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-26 19:12:31.983 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-26 19:12:31.984 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name, is_forever from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-26 19:12:31.985 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 50(Integer)
2018-07-26 19:12:31.996 DEBUG 10544 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 23
