2018-07-05 17:55:43.726  INFO 9916 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9916 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 17:55:43.732 DEBUG 9916 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 17:55:43.732  INFO 9916 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 17:55:44.153  INFO 9916 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:55:46.154  INFO 9916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 17:55:46.733  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.739  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.740  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 17:55:46.778  WARN 9916 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:55:47.657  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.037  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.076  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.080  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:53.771  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 17:55:53.797  INFO 9916 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 17:55:53.799  INFO 9916 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9886 ms
2018-07-05 17:55:54.460  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:55:54.461  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:55:57.244  INFO 9916 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 17:56:00.329  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:56:00.612  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.614  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.615  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.621  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.623  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.624  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.632  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.634  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.635  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.638  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.643  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.644  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.648  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.649  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.650  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.651  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.656  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.661  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 17:56:00.667  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.668  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.679  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.680  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 17:56:00.687  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 17:56:00.692  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.696  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.697  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.825  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.826  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.964  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:03.033  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 17:56:03.037  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 17:56:03.046  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 17:56:03.226  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 17:56:03.235  INFO 9916 --- [main] com.yanda.Application                    : Started Application in 20.112 seconds (JVM running for 20.768)
2018-07-05 18:30:13.294  INFO 6504 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6504 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:30:13.314 DEBUG 6504 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:30:13.315  INFO 6504 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:30:13.883  INFO 6504 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:15.992  INFO 6504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.628  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:30:16.674  WARN 6504 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:30:17.665  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$897191c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.011  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a4512a0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.048  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.051  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d283c7de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:23.807  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:30:23.834  INFO 6504 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:30:23.837  INFO 6504 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:30:24.081  INFO 6504 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:30:24.082  INFO 6504 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10205 ms
2018-07-05 18:30:24.563  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:30:27.168  INFO 6504 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:30:30.625  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:30.793  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.795  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.796  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.797  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.799  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.802  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.808  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.815  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.816  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.819  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.821  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.825  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.828  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.829  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.830  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.831  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.833  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.836  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.837  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.841  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.842  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.843  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.847  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.848  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:30:30.849  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:30:30.850  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.852  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.857  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.858  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.863  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.867  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.868  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.869  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:30:30.870  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.874  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.877  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.882  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.883  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:31.125  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:33.513  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:30:33.516  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:30:33.527  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:30:33.673  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:30:33.682  INFO 6504 --- [main] com.yanda.Application                    : Started Application in 21.039 seconds (JVM running for 22.4)
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:31:16.971  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2018-07-05 18:35:02.623  INFO 5156 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 5156 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:35:02.628 DEBUG 5156 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:35:02.629  INFO 5156 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:35:03.027  INFO 5156 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:05.056  INFO 5156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:35:05.633  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:35:05.676  WARN 5156 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:35:06.555  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:06.973  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.026  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.029  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:12.695  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:35:12.723  INFO 5156 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:35:12.725  INFO 5156 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9937 ms
2018-07-05 18:35:13.369  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:35:15.532  INFO 5156 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:35:18.259  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:18.402  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.404  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.405  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.408  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.410  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.411  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.415  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.421  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.422  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.423  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.427  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.431  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.434  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.443  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.445  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.448  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:35:18.450  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.451  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.456  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:35:18.461  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.464  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.465  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.467  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.472  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.474  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.483  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.484  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.489  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.490  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.665  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:20.195  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:35:20.198  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:35:20.206  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:35:20.335  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:35:20.344  INFO 5156 --- [main] com.yanda.Application                    : Started Application in 18.31 seconds (JVM running for 19.081)
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:35:35.888  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-07-05 18:35:59.870  INFO 5156 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 18:36:00.531 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 18:36:00.577 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 18:36:00.626 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 18:36:00.703 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 18:36:00.704 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 18:36:00.730 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 18:36:00.761 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 18:36:00.762 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.785 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 18:36:00.786 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 18:36:00.787 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 19:02:57.883  INFO 17860 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17860 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 19:02:57.897 DEBUG 17860 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 19:02:57.898  INFO 17860 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 19:02:58.370  INFO 17860 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:00.562  INFO 17860 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 19:03:01.153  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 19:03:01.196  WARN 17860 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:03:02.171  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a560ff71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.574  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$c04097bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.610  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.612  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ee73358f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:08.395  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 19:03:08.427  INFO 17860 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 19:03:08.429  INFO 17860 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 19:03:08.668  INFO 17860 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 19:03:08.669  INFO 17860 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10306 ms
2018-07-05 19:03:09.141  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:03:11.808  INFO 17860 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 19:03:15.306  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:15.505  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.508  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.510  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.513  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.518  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.519  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.522  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.523  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.528  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.529  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.530  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.531  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.533  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 19:03:15.537  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 19:03:15.541  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.542  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.545  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.546  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.547  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.548  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.549  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.550  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.555  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.558  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.559  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.560  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.561  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.566  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 19:03:15.568  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.570  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.571  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.572  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.581  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.584  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.585  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.587  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.590  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.591  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.592  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.594  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.598  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.838  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:18.217  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 19:03:18.221  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 19:03:18.231  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 19:03:18.390  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 19:03:18.398  INFO 17860 --- [main] com.yanda.Application                    : Started Application in 21.137 seconds (JVM running for 22.141)
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:03:38.868  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 19:06:56.302  INFO 17860 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 19:06:56.995 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 19:06:57.038 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 19:06:57.512 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 19:06:57.604 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 19:06:57.605 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 19:06:57.628 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 19:06:57.633 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 19:06:57.634 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.683 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 19:06:57.686 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 19:06:57.687 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.709 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 19:06:57.710 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:17:16.748  INFO 20528 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20528 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:17:16.752 DEBUG 20528 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:17:16.753  INFO 20528 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:17:17.175  INFO 20528 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:19.497  INFO 20528 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:17:20.109  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:17:20.149  WARN 20528 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:17:21.177  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.573  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.605  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.609  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:27.460  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:17:27.485  INFO 20528 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:17:27.487  INFO 20528 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:17:27.710  INFO 20528 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:17:27.711  INFO 20528 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10543 ms
2018-07-05 23:17:28.112  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:17:30.380  INFO 20528 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:17:33.287  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:33.437  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.438  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.439  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.440  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.441  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.444  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.445  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.448  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.451  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.452  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.454  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.460  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.461  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.463  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.465  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.472  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.473  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.474  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.482  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.486  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:17:33.488  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.490  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.493  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.494  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.495  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.496  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.500  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.504  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:17:33.506  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.507  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.510  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.514  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.517  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.519  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.523  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.524  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.747  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:35.220  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:17:35.224  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:17:35.235  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:17:35.414  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:17:35.422  INFO 20528 --- [main] com.yanda.Application                    : Started Application in 19.094 seconds (JVM running for 19.475)
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:17:51.083  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-05 23:22:52.404  INFO 16620 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16620 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:22:52.408 DEBUG 16620 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:22:52.409  INFO 16620 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:22:52.833  INFO 16620 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:22:54.821  INFO 16620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:22:55.406  WARN 16620 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:22:56.254  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.610  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.644  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.646  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:23:02.341  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:23:02.368  INFO 16620 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:23:02.370  INFO 16620 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9762 ms
2018-07-05 23:23:03.012  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:23:03.014  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:23:03.016  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:23:05.291  INFO 16620 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:23:08.123  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:23:08.258  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.260  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.261  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.265  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:23:08.267  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.268  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.270  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.277  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.278  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.280  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.281  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.282  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.283  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.284  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:23:08.285  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.291  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.293  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.297  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.301  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.302  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.306  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.307  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.322  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.323  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.328  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.329  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.332  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.333  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.336  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.337  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.520  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:10.092  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:23:10.095  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:23:10.103  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:23:10.233  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:23:10.242  INFO 16620 --- [main] com.yanda.Application                    : Started Application in 18.463 seconds (JVM running for 19.155)
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:23:42.537  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-07-05 23:23:57.229  INFO 16620 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:23:57.764 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:23:57.784 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:23:57.820 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:23:57.856 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:23:57.857 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:23:57.884 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:23:57.913 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:23:57.914 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.967 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:23:57.968 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:56:10.108  INFO 22904 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 22904 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:56:10.114 DEBUG 22904 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:56:10.114  INFO 22904 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:56:10.539  INFO 22904 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:12.569  INFO 22904 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.202  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:56:13.241  WARN 22904 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:56:14.210  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b06fc3f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.562  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$cb4f5c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.595  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.598  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f981fa15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:20.531  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:56:20.556  INFO 22904 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:56:20.558  INFO 22904 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:56:20.773  INFO 22904 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:56:20.774  INFO 22904 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10241 ms
2018-07-05 23:56:21.171  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:56:23.310  INFO 22904 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:56:26.282  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:26.428  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.430  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.432  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.434  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:56:26.436  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.437  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.439  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.440  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.441  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.442  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.452  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:56:26.456  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.467  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.470  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.474  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:56:26.476  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.477  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.482  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:56:26.489  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.491  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:56:26.492  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.493  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:56:26.494  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.498  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.499  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.502  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.506  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.507  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.684  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:28.218  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:56:28.221  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:56:28.229  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:56:28.348  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:56:28.355  INFO 22904 --- [main] com.yanda.Application                    : Started Application in 18.827 seconds (JVM running for 19.474)
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:57:19.415  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 23:57:28.973  INFO 22904 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:57:30.060 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:57:30.101 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:57:30.231 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:57:30.306 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:57:30.308 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:57:30.331 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:57:30.335 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:57:30.336 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.386 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.408 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:57:30.409 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:58:14.382 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-05 23:58:14.386 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String), 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-05 23:58:14.409 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:57:09.711  INFO 4116 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 4116 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 11:57:09.741 DEBUG 4116 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 11:57:09.742  INFO 4116 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 11:57:10.500  INFO 4116 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:12.551  INFO 4116 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.942  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.944  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 11:57:12.962  WARN 4116 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 11:57:13.545  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a64acb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.807  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$654444fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.831  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.852  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9376e2ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:15.176  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 11:57:15.200  INFO 4116 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 11:57:15.201  INFO 4116 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 11:57:15.397  INFO 4116 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 11:57:15.398  INFO 4116 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4910 ms
2018-07-07 11:57:15.620  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 11:57:15.631  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 11:57:17.174  INFO 4116 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 11:57:18.895  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:18.976  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.977  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.980  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.981  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.983  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.987  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.991  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 11:57:18.992  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.996  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.998  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.009  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 11:57:19.010  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 11:57:19.012  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.013  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.025  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.029  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.030  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.031  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.072  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.073  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.127  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:20.373  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 11:57:20.377  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 11:57:20.382  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 11:57:20.576  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 11:57:20.580  INFO 4116 --- [main] com.yanda.Application                    : Started Application in 11.749 seconds (JVM running for 13.501)
2018-07-07 11:57:37.297  INFO 4116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 11:57:37.298  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 11:57:37.349  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 11:59:38.438  INFO 4116 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 11:59:38.986 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 11:59:39.022 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.062 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 11:59:39.083 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 11:59:39.087 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 11:59:39.116 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:59:39.124 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 11:59:39.125 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.212 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 11:59:39.213 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 11:59:39.336 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,trade_no,pay_msg ) VALUES( ?,?,?,?,? ) 
2018-07-07 11:59:39.337 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 15.0(Float), 2018-07-07 11:59:39.335(Timestamp), 1(Integer), N0LXitdsLSbk70Q5Z920180707115920(String), 购买会员1个月(String)
2018-07-07 11:59:39.468  INFO 4116 --- [http-nio-8080-exec-5] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-07 11:59:39.767  INFO 4116 --- [http-nio-8080-exec-5] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-07 12:00:00.000  INFO 4116 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-07 12:00:00]
2018-07-07 12:03:46.445  INFO 9484 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 9484 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:03:46.448 DEBUG 9484 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:03:46.449  INFO 9484 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:03:46.705  INFO 9484 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:49.277  INFO 9484 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:03:49.670  WARN 9484 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:03:50.414  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98a71330] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.733  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b386ab7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.757  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.760  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e1b9494e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:51.480  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:03:51.493  INFO 9484 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:03:51.495  INFO 9484 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:03:51.601  INFO 9484 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:03:51.602  INFO 9484 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4899 ms
2018-07-07 12:03:51.834  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:03:53.231  INFO 9484 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:03:55.163  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:55.253  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:03:55.270  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.282  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.285  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.290  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.292  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.294  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.295  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.298  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.304  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.308  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.310  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:03:55.311  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.462  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:56.848  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:03:56.853  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:03:56.862  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:03:57.005  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:03:57.009  INFO 9484 --- [main] com.yanda.Application                    : Started Application in 10.862 seconds (JVM running for 11.356)
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:04:15.665  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-07 12:04:33.987  INFO 9484 --- [http-nio-8080-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:04:34.539 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:04:34.583 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.621 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:04:34.629 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:04:34.632 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:04:34.659 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.722 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:04:34.869 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:04:34.870 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 45.0(Float), 2018-07-07 12:04:34.867(Timestamp), 1(Integer), 10(Integer), UckLrzszYXXxOWGG6020180707120415(String), 购买会员3个月(String)
2018-07-07 12:04:34.901 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:08:06.495 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:08:06.496 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:08:06.520 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:08:06.522 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:08:06.523 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:08:06.549 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:23.557 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:23.558 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:23.585 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:23.614 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:47.684 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:47.716 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:15:40.772 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:15:40.773 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:15:40.798 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:15:40.825 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:17:30.877  INFO 30356 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 30356 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:17:30.879 DEBUG 30356 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:17:30.879  INFO 30356 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:17:31.139  INFO 30356 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:33.627  INFO 30356 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:17:33.925  WARN 30356 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:17:34.454  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3e9552f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.701  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$eec8ed79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.719  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.722  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1cfb8b4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:35.745  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:17:35.757  INFO 30356 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:17:35.759  INFO 30356 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:17:35.870  INFO 30356 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:17:35.879  INFO 30356 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4742 ms
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:17:37.473  INFO 30356 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:17:38.904  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:38.977  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:38.978  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.979  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.983  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.985  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.990  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.001  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.011  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.012  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.013  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.015  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:17:39.017  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.019  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.026  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.027  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.032  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.033  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.037  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.038  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.040  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.042  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.043  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.139  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.924  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:17:39.927  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:17:39.932  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:17:39.997  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:17:40.002  INFO 30356 --- [main] com.yanda.Application                    : Started Application in 9.438 seconds (JVM running for 9.89)
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:18:07.003  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 12:19:39.866  INFO 30356 --- [http-nio-8080-exec-10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:19:40.379 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:19:40.426 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.463 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:19:40.471 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:19:40.473 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:19:40.506 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:19:40.514 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:19:40.515 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:19:40.569 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.591 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:19:40.592 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:19:40.744 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:19:40.745 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 178.0(Float), 2018-07-07 12:19:40.743(Timestamp), 1(Integer), 10(Integer), 0KQbZ2SERxJV1PMeXa20180707121922(String), 购买会员12个月(String)
2018-07-07 12:19:40.773 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:19:48.569 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:19:48.570 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:19:48.592 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:19:48.624 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:20:48.945 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:20:48.946 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:20:48.970 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:20:48.995 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:24:41.643 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:24:41.644 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:24:41.671 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:24:41.702 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
