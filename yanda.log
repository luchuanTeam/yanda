2018-07-05 17:55:43.726  INFO 9916 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 9916 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 17:55:43.732 DEBUG 9916 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 17:55:43.732  INFO 9916 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 17:55:44.153  INFO 9916 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:55:46.154  INFO 9916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 17:55:46.733  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.734  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.735  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.736  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.737  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.738  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.739  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:55:46.740  WARN 9916 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 17:55:46.778  WARN 9916 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:55:47.657  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.037  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.076  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:48.080  INFO 9916 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:55:53.771  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 17:55:53.797  INFO 9916 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 17:55:53.799  INFO 9916 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 17:55:54.034  INFO 9916 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9886 ms
2018-07-05 17:55:54.460  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:55:54.461  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 17:55:54.462  INFO 9916 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:55:57.244  INFO 9916 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 17:56:00.329  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 17:55:44 CST 2018]; root of context hierarchy
2018-07-05 17:56:00.612  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.614  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.615  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.616  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.619  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 17:56:00.620  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.621  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.623  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.624  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.625  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.626  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.632  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 17:56:00.633  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.634  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.635  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.636  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.638  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 17:56:00.639  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.643  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.644  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.645  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.646  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.647  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.648  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.649  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.650  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.651  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.656  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.657  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.658  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 17:56:00.659  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.660  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.661  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 17:56:00.666  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 17:56:00.667  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.668  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.669  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.679  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.680  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.681  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.682  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 17:56:00.683  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.684  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 17:56:00.687  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.688  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.689  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.691  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 17:56:00.692  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 17:56:00.693  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.696  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.697  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.698  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.699  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 17:56:00.700  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:56:00.706  INFO 9916 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:56:00.825  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.826  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:00.964  INFO 9916 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:56:03.033  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 17:56:03.037  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 17:56:03.046  INFO 9916 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 17:56:03.226  INFO 9916 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 17:56:03.235  INFO 9916 --- [main] com.yanda.Application                    : Started Application in 20.112 seconds (JVM running for 20.768)
2018-07-05 18:30:13.294  INFO 6504 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 6504 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:30:13.314 DEBUG 6504 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:30:13.315  INFO 6504 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:30:13.883  INFO 6504 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:15.992  INFO 6504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.625  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.626  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.627  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.628  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.629  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:16.630  WARN 6504 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:30:16.674  WARN 6504 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:30:17.665  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$897191c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.011  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a4512a0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.048  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:18.051  INFO 6504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d283c7de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:23.807  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:30:23.834  INFO 6504 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:30:23.837  INFO 6504 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:30:24.081  INFO 6504 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:30:24.082  INFO 6504 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10205 ms
2018-07-05 18:30:24.563  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:30:24.565  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:30:24.566  INFO 6504 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:30:27.168  INFO 6504 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:30:30.625  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 18:30:13 CST 2018]; root of context hierarchy
2018-07-05 18:30:30.793  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.795  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.796  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.797  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:30:30.799  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.802  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:30:30.803  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.804  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.808  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.809  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.810  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.815  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.816  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.817  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.818  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.819  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.821  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:30:30.822  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.825  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.826  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.827  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.828  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.829  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.830  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.831  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.832  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.833  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.836  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.837  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.838  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.839  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.840  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.841  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:30:30.842  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.843  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.847  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.848  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:30:30.849  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:30:30.850  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.852  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.853  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.857  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.858  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.859  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:30:30.860  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.861  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.862  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.863  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:30:30.865  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.866  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.867  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.868  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.869  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:30:30.870  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:30:30.871  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.874  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:30:30.875  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.876  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:30.877  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:30:30.878  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:30:30.882  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:30.883  INFO 6504 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:30.998  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:31.125  INFO 6504 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:30:33.513  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:30:33.516  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:30:33.527  INFO 6504 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:30:33.673  INFO 6504 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:30:33.682  INFO 6504 --- [main] com.yanda.Application                    : Started Application in 21.039 seconds (JVM running for 22.4)
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:31:16.900  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:31:16.971  INFO 6504 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2018-07-05 18:35:02.623  INFO 5156 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 5156 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 18:35:02.628 DEBUG 5156 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 18:35:02.629  INFO 5156 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 18:35:03.027  INFO 5156 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:05.056  INFO 5156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 18:35:05.633  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.634  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.635  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.636  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.637  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.638  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:05.639  WARN 5156 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 18:35:05.676  WARN 5156 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:35:06.555  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:06.973  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.026  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:07.029  INFO 5156 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:35:12.695  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 18:35:12.723  INFO 5156 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 18:35:12.725  INFO 5156 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 18:35:12.959  INFO 5156 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9937 ms
2018-07-05 18:35:13.369  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:35:13.371  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 18:35:13.372  INFO 5156 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:35:15.532  INFO 5156 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 18:35:18.259  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 18:35:03 CST 2018]; root of context hierarchy
2018-07-05 18:35:18.402  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.404  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.405  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.406  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.408  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.410  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 18:35:18.411  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.412  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.415  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.416  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.417  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.421  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.422  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 18:35:18.423  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.424  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.425  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.427  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 18:35:18.428  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.431  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.432  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.433  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.434  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.436  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.437  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.440  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.441  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.442  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.443  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.444  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.445  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.448  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 18:35:18.449  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 18:35:18.450  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.451  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.452  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.456  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 18:35:18.457  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.458  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.459  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 18:35:18.460  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:35:18.461  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.462  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.463  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.464  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.465  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.466  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 18:35:18.467  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.472  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.473  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 18:35:18.474  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.483  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:35:18.484  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 18:35:18.485  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.489  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:18.490  INFO 5156 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.583  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:18.665  INFO 5156 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:20.195  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 18:35:20.198  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 18:35:20.206  INFO 5156 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 18:35:20.335  INFO 5156 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 18:35:20.344  INFO 5156 --- [main] com.yanda.Application                    : Started Application in 18.31 seconds (JVM running for 19.081)
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:35:35.817  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:35:35.888  INFO 5156 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-07-05 18:35:59.870  INFO 5156 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 18:36:00.531 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 18:36:00.577 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 18:36:00.626 DEBUG 5156 --- [http-nio-8080-exec-5] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 18:36:00.703 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 18:36:00.704 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 18:36:00.730 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 18:36:00.734 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 18:36:00.761 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 18:36:00.762 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.785 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 18:36:00.786 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 18:36:00.787 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 18:36:00.810 DEBUG 5156 --- [http-nio-8080-exec-6] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 19:02:57.883  INFO 17860 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17860 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 19:02:57.897 DEBUG 17860 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 19:02:57.898  INFO 17860 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 19:02:58.370  INFO 17860 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:00.562  INFO 17860 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 19:03:01.153  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.154  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.155  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.156  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.157  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.158  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.159  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:03:01.160  WARN 17860 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 19:03:01.196  WARN 17860 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:03:02.171  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a560ff71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.574  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$c04097bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.610  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:02.612  INFO 17860 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ee73358f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:03:08.395  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 19:03:08.427  INFO 17860 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 19:03:08.429  INFO 17860 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 19:03:08.668  INFO 17860 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 19:03:08.669  INFO 17860 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10306 ms
2018-07-05 19:03:09.141  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:03:09.142  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 19:03:09.143  INFO 17860 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:03:11.808  INFO 17860 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 19:03:15.306  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Thu Jul 05 19:02:58 CST 2018]; root of context hierarchy
2018-07-05 19:03:15.505  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.508  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 19:03:15.509  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.510  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.513  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 19:03:15.514  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.515  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.518  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.519  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.521  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.522  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.523  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.528  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.529  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 19:03:15.530  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.531  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.532  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.533  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.536  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 19:03:15.537  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 19:03:15.541  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.542  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.543  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.544  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.545  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.546  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.547  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.548  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.549  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.550  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.554  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.555  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.556  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.557  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.558  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.559  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.560  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.561  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.566  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 19:03:15.567  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 19:03:15.568  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.570  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.571  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.572  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.577  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.578  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.579  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.580  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.581  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.582  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.584  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.585  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 19:03:15.586  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.587  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 19:03:15.588  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.590  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.591  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 19:03:15.592  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.594  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.595  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 19:03:15.596  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 19:03:15.597  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:03:15.598  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:03:15.601  INFO 17860 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.738  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:15.838  INFO 17860 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:03:18.217  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 19:03:18.221  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 19:03:18.231  INFO 17860 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 19:03:18.390  INFO 17860 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 19:03:18.398  INFO 17860 --- [main] com.yanda.Application                    : Started Application in 21.137 seconds (JVM running for 22.141)
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:03:38.796  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:03:38.868  INFO 17860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 19:06:56.302  INFO 17860 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 19:06:56.995 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 19:06:57.038 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 19:06:57.512 DEBUG 17860 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 19:06:57.604 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 19:06:57.605 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 19:06:57.628 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 19:06:57.633 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 19:06:57.634 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 19:06:57.661 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.683 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 19:06:57.686 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 19:06:57.687 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 19:06:57.709 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 19:06:57.710 DEBUG 17860 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:17:16.748  INFO 20528 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20528 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:17:16.752 DEBUG 20528 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:17:16.753  INFO 20528 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:17:17.175  INFO 20528 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:19.497  INFO 20528 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:17:20.109  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.110  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.111  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.112  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.113  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.114  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:17:20.115  WARN 20528 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:17:20.149  WARN 20528 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:17:21.177  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.573  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.605  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:21.609  INFO 20528 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:17:27.460  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:17:27.485  INFO 20528 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:17:27.487  INFO 20528 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:17:27.710  INFO 20528 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:17:27.711  INFO 20528 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10543 ms
2018-07-05 23:17:28.112  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:17:28.113  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:17:28.114  INFO 20528 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:17:30.380  INFO 20528 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:17:33.287  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:17:17 CST 2018]; root of context hierarchy
2018-07-05 23:17:33.437  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.438  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.439  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:17:33.440  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.441  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.444  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.445  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:17:33.446  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.448  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.451  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.452  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.453  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.454  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.459  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:17:33.460  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.461  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.462  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.463  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.465  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:17:33.466  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.469  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.470  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.471  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.472  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.473  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.474  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.478  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.479  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.480  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.481  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.482  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.486  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:17:33.487  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:17:33.488  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.489  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.490  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.493  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.494  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:17:33.495  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.496  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.497  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.498  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:17:33.499  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.500  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.502  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.503  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.504  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:17:33.506  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.507  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.509  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.510  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:17:33.514  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.515  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.516  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:17:33.517  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:17:33.518  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:17:33.519  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.523  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:17:33.524  INFO 20528 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.654  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:33.747  INFO 20528 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:17:35.220  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:17:35.224  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:17:35.235  INFO 20528 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:17:35.414  INFO 20528 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:17:35.422  INFO 20528 --- [main] com.yanda.Application                    : Started Application in 19.094 seconds (JVM running for 19.475)
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:17:51.020  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:17:51.083  INFO 20528 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-05 23:22:52.404  INFO 16620 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16620 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:22:52.408 DEBUG 16620 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:22:52.409  INFO 16620 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:22:52.833  INFO 16620 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:22:54.821  INFO 16620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.369  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.370  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.371  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.372  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.373  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:22:55.374  WARN 16620 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:22:55.406  WARN 16620 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:22:56.254  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c644d36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.610  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e1246bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.644  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:22:56.646  INFO 16620 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f570989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:23:02.341  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:23:02.368  INFO 16620 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:23:02.370  INFO 16620 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:23:02.588  INFO 16620 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9762 ms
2018-07-05 23:23:03.012  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:23:03.014  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:23:03.015  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:23:03.016  INFO 16620 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:23:05.291  INFO 16620 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:23:08.123  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:22:52 CST 2018]; root of context hierarchy
2018-07-05 23:23:08.258  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.260  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.261  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:23:08.262  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.265  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:23:08.266  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:23:08.267  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.268  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.270  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.271  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.272  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.277  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.278  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.279  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.280  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.281  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.282  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.283  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.284  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:23:08.285  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.288  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.289  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.290  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.291  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.292  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.293  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.297  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.298  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.299  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.300  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:23:08.301  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.302  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.306  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.307  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:23:08.308  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.310  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.315  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.316  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.317  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.318  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.320  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.321  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.322  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.323  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.324  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:23:08.328  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.329  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.330  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.331  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.332  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:23:08.333  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:23:08.336  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:23:08.337  INFO 16620 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.433  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:08.520  INFO 16620 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:23:10.092  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:23:10.095  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:23:10.103  INFO 16620 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:23:10.233  INFO 16620 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:23:10.242  INFO 16620 --- [main] com.yanda.Application                    : Started Application in 18.463 seconds (JVM running for 19.155)
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:23:42.475  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:23:42.537  INFO 16620 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-07-05 23:23:57.229  INFO 16620 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:23:57.764 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:23:57.784 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:23:57.820 DEBUG 16620 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:23:57.856 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:23:57.857 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:23:57.884 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:23:57.886 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:23:57.913 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:23:57.914 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:23:57.940 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:23:57.967 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:23:57.968 DEBUG 16620 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:56:10.108  INFO 22904 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 22904 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-05 23:56:10.114 DEBUG 22904 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-05 23:56:10.114  INFO 22904 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-05 23:56:10.539  INFO 22904 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:12.569  INFO 22904 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.197  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.198  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.199  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.200  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.201  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.202  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.203  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 23:56:13.204  WARN 22904 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-05 23:56:13.241  WARN 22904 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 23:56:14.210  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b06fc3f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.562  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$cb4f5c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.595  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:14.598  INFO 22904 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f981fa15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 23:56:20.531  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-05 23:56:20.556  INFO 22904 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-05 23:56:20.558  INFO 22904 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-05 23:56:20.773  INFO 22904 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-05 23:56:20.774  INFO 22904 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10241 ms
2018-07-05 23:56:21.171  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 23:56:21.172  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-05 23:56:21.173  INFO 22904 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 23:56:23.310  INFO 22904 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-05 23:56:26.282  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Thu Jul 05 23:56:10 CST 2018]; root of context hierarchy
2018-07-05 23:56:26.428  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.430  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-05 23:56:26.431  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.432  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.434  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-05 23:56:26.435  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-05 23:56:26.436  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.437  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.439  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.440  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.441  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.442  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.443  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.448  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.449  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.450  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.452  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-05 23:56:26.453  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-05 23:56:26.456  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.457  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.458  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.459  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.460  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.461  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.465  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.466  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.467  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.468  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-05 23:56:26.469  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.470  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.474  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-05 23:56:26.475  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-05 23:56:26.476  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.477  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.478  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.482  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-05 23:56:26.484  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.485  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.486  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.487  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-05 23:56:26.489  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.490  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.491  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-05 23:56:26.492  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.493  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-05 23:56:26.494  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-05 23:56:26.495  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.498  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.499  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.500  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.501  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-05 23:56:26.502  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-05 23:56:26.506  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 23:56:26.507  INFO 22904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.593  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:26.684  INFO 22904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 23:56:28.218  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-05 23:56:28.221  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-05 23:56:28.229  INFO 22904 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-05 23:56:28.348  INFO 22904 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-05 23:56:28.355  INFO 22904 --- [main] com.yanda.Application                    : Started Application in 18.827 seconds (JVM running for 19.474)
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 23:57:19.342  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 23:57:19.415  INFO 22904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-05 23:57:28.973  INFO 22904 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-05 23:57:30.060 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-05 23:57:30.101 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-05 23:57:30.231 DEBUG 22904 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-05 23:57:30.306 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-05 23:57:30.308 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-05 23:57:30.331 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-05 23:57:30.335 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-05 23:57:30.336 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-05 23:57:30.362 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.386 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-05 23:57:30.387 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-05 23:57:30.408 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-05 23:57:30.409 DEBUG 22904 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-05 23:58:14.382 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-05 23:58:14.386 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String), 1007(Integer), 20180704100715(String), 123456(String), 1(Integer), 2018-07-04 16:42:43.0(Timestamp), 2018-07-05 23:58:14.359(Timestamp), 2018-09-04 16:42:43.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-05 23:58:14.409 DEBUG 22904 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:57:09.711  INFO 4116 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 4116 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 11:57:09.741 DEBUG 4116 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 11:57:09.742  INFO 4116 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 11:57:10.500  INFO 4116 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:12.551  INFO 4116 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.940  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.941  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.942  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.943  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.944  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.945  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 11:57:12.946  WARN 4116 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 11:57:12.962  WARN 4116 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 11:57:13.545  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a64acb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.807  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$654444fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.831  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:13.852  INFO 4116 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9376e2ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 11:57:15.176  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 11:57:15.200  INFO 4116 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 11:57:15.201  INFO 4116 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 11:57:15.397  INFO 4116 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 11:57:15.398  INFO 4116 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4910 ms
2018-07-07 11:57:15.620  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 11:57:15.631  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 11:57:15.632  INFO 4116 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 11:57:17.174  INFO 4116 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 11:57:18.895  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 11:57:10 CST 2018]; root of context hierarchy
2018-07-07 11:57:18.976  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.977  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.978  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 11:57:18.980  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.981  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.982  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.983  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.984  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.985  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.987  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.988  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.989  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 11:57:18.990  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.991  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 11:57:18.992  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.994  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.995  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:18.996  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.997  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:18.998  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.003  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.004  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 11:57:19.005  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.008  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.009  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 11:57:19.010  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 11:57:19.011  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 11:57:19.012  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.013  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.014  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.016  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.017  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.018  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.020  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.021  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.022  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.024  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.025  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.027  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.028  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.029  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 11:57:19.030  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 11:57:19.031  INFO 4116 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 11:57:19.072  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.073  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:19.127  INFO 4116 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 11:57:20.373  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 11:57:20.377  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 11:57:20.382  INFO 4116 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 11:57:20.576  INFO 4116 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 11:57:20.580  INFO 4116 --- [main] com.yanda.Application                    : Started Application in 11.749 seconds (JVM running for 13.501)
2018-07-07 11:57:37.297  INFO 4116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 11:57:37.298  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 11:57:37.349  INFO 4116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 11:59:38.438  INFO 4116 --- [http-nio-8080-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 11:59:38.986 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 11:59:39.022 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.062 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 11:59:39.083 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 11:59:39.087 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 25(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 11:59:39.063(Timestamp), 2019-08-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 11:59:39.116 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 11:59:39.124 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 11:59:39.125 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 11:59:39.155 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 11:59:39.184 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 11:59:39.212 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 11:59:39.213 DEBUG 4116 --- [http-nio-8080-exec-4] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 11:59:39.336 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,trade_no,pay_msg ) VALUES( ?,?,?,?,? ) 
2018-07-07 11:59:39.337 DEBUG 4116 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 15.0(Float), 2018-07-07 11:59:39.335(Timestamp), 1(Integer), N0LXitdsLSbk70Q5Z920180707115920(String), 购买会员1个月(String)
2018-07-07 11:59:39.468  INFO 4116 --- [http-nio-8080-exec-5] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-07 11:59:39.767  INFO 4116 --- [http-nio-8080-exec-5] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-07 12:00:00.000  INFO 4116 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-07 12:00:00]
2018-07-07 12:03:46.445  INFO 9484 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 9484 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:03:46.448 DEBUG 9484 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:03:46.449  INFO 9484 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:03:46.705  INFO 9484 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:49.277  INFO 9484 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.641  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.642  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.643  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.644  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.645  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:03:49.646  WARN 9484 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:03:49.670  WARN 9484 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:03:50.414  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98a71330] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.733  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b386ab7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.757  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:50.760  INFO 9484 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e1b9494e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:03:51.480  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:03:51.493  INFO 9484 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:03:51.495  INFO 9484 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:03:51.601  INFO 9484 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:03:51.602  INFO 9484 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4899 ms
2018-07-07 12:03:51.834  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:03:51.835  INFO 9484 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:03:53.231  INFO 9484 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:03:55.163  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:03:46 CST 2018]; root of context hierarchy
2018-07-07 12:03:55.253  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.254  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.255  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.256  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.257  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.262  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.263  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.266  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.267  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.268  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:03:55.269  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:03:55.270  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.271  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.282  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.283  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.284  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.285  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.288  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.289  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:03:55.290  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.292  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:03:55.293  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.294  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.295  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:03:55.296  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.297  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.298  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:03:55.300  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.301  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.303  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.304  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.305  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.UserPayController.getNotify()
2018-07-07 12:03:55.306  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userPay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserPayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.307  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.308  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:03:55.310  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:03:55.311  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.312  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.313  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:03:55.315  INFO 9484 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.371  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:55.462  INFO 9484 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:03:56.848  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:03:56.853  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:03:56.862  INFO 9484 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:03:57.005  INFO 9484 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:03:57.009  INFO 9484 --- [main] com.yanda.Application                    : Started Application in 10.862 seconds (JVM running for 11.356)
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:04:15.641  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:04:15.665  INFO 9484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-07 12:04:33.987  INFO 9484 --- [http-nio-8080-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:04:34.539 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:04:34.583 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.621 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:04:34.629 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:04:34.632 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 28(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:04:34.622(Timestamp), 2019-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:04:34.659 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:04:34.666 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:04:34.696 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.722 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:04:34.723 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:04:34.750 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:04:34.869 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:04:34.870 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 45.0(Float), 2018-07-07 12:04:34.867(Timestamp), 1(Integer), 10(Integer), UckLrzszYXXxOWGG6020180707120415(String), 购买会员3个月(String)
2018-07-07 12:04:34.901 DEBUG 9484 --- [http-nio-8080-exec-4] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:08:06.495 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:08:06.496 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:08:06.520 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:08:06.522 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:08:06.523 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:08:06.549 DEBUG 9484 --- [http-nio-8080-exec-10] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:23.557 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:23.558 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:23.585 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:23.586 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:23.614 DEBUG 9484 --- [http-nio-8080-exec-8] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:11:47.657 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:11:47.683 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:11:47.684 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:11:47.716 DEBUG 9484 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:15:40.772 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:15:40.773 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:15:40.798 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:15:40.799 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:15:40.825 DEBUG 9484 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 12:17:30.877  INFO 30356 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-0CTDCTAQ with PID 30356 (D:\dre\yanda\target\classes started by melvz in D:\dre\yanda)
2018-07-07 12:17:30.879 DEBUG 30356 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 12:17:30.879  INFO 30356 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 12:17:31.139  INFO 30356 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:33.627  INFO 30356 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.904  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.905  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.906  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.907  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 12:17:33.908  WARN 30356 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 12:17:33.925  WARN 30356 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 12:17:34.454  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3e9552f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.701  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$eec8ed79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.719  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:34.722  INFO 30356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1cfb8b4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 12:17:35.745  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 12:17:35.757  INFO 30356 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 12:17:35.759  INFO 30356 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 12:17:35.870  INFO 30356 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 12:17:35.879  INFO 30356 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4742 ms
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 12:17:36.061  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 12:17:36.062  INFO 30356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 12:17:37.473  INFO 30356 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 12:17:38.904  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 12:17:31 CST 2018]; root of context hierarchy
2018-07-07 12:17:38.977  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:38.978  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.979  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 12:17:38.980  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.981  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.982  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.983  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.984  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.985  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 12:17:38.988  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.989  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:38.990  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 12:17:38.991  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.994  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.995  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:38.996  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:38.997  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.001  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.003  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.004  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.005  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 12:17:39.010  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.011  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.012  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.013  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.015  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 12:17:39.016  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 12:17:39.017  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.018  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.019  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.026  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.027  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.028  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 12:17:39.029  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.030  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.032  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.033  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.034  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.036  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 12:17:39.037  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.038  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.039  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 12:17:39.040  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 12:17:39.041  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.042  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 12:17:39.043  INFO 30356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.087  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.139  INFO 30356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 12:17:39.924  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 12:17:39.927  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 12:17:39.932  INFO 30356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 12:17:39.997  INFO 30356 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 12:17:40.002  INFO 30356 --- [main] com.yanda.Application                    : Started Application in 9.438 seconds (JVM running for 9.89)
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 12:18:06.952  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 12:18:07.003  INFO 30356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-07 12:19:39.866  INFO 30356 --- [http-nio-8080-exec-10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 12:19:40.379 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 12:19:40.426 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.463 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 12:19:40.471 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 12:19:40.473 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String), 1006(Integer), 20180704100515(String), 123456(String), 40(Integer), 2018-07-04 16:17:46.0(Timestamp), 2018-07-07 12:19:40.464(Timestamp), 2020-11-08 16:17:46.0(Timestamp), 10(Integer), 胖虎(String)
2018-07-07 12:19:40.506 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 12:19:40.514 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 12:19:40.515 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 10(Integer)
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 12:19:40.545 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 12:19:40.568 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 12:19:40.569 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 10(Integer)
2018-07-07 12:19:40.591 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 12:19:40.592 DEBUG 30356 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 12:19:40.744 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 12:19:40.745 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 178.0(Float), 2018-07-07 12:19:40.743(Timestamp), 1(Integer), 10(Integer), 0KQbZ2SERxJV1PMeXa20180707121922(String), 购买会员12个月(String)
2018-07-07 12:19:40.773 DEBUG 30356 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 12:19:48.569 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:19:48.570 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:19:48.592 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:19:48.594 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:19:48.624 DEBUG 30356 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:20:48.945 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:20:48.946 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:20:48.970 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:20:48.971 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:20:48.995 DEBUG 30356 --- [http-nio-8080-exec-7] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 12:24:41.643 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 12:24:41.644 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 10(Integer)
2018-07-07 12:24:41.671 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 12:24:41.672 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 10(Integer), 10(Integer)
2018-07-07 12:24:41.702 DEBUG 30356 --- [http-nio-8080-exec-5] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 14:14:44.633  INFO 4420 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4420 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 14:14:44.639 DEBUG 4420 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 14:14:44.639  INFO 4420 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 14:14:45.431  INFO 4420 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 14:14:45 CST 2018]; root of context hierarchy
2018-07-07 14:14:49.008  INFO 4420 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 14:14:50.225  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.226  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.226  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.227  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.228  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.228  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.229  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.230  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.231  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.231  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.232  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.232  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.233  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.234  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.235  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.236  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.236  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 14:14:50.237  WARN 4420 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 14:14:50.286  WARN 4420 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 14:14:51.401  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee4cc058] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.700  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$92c58a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.745  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:51.749  INFO 4420 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$375ef676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 14:14:57.452  INFO 4420 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 14:14:57.475  INFO 4420 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 14:14:57.477  INFO 4420 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 14:14:57.706  INFO 4420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 14:14:57.707  INFO 4420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12286 ms
2018-07-07 14:14:58.141  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 14:14:58.143  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 14:14:58.144  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 14:14:58.144  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 14:14:58.145  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 14:14:58.145  INFO 4420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 14:15:00.929  INFO 4420 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 14:15:04.052  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sat Jul 07 14:14:45 CST 2018]; root of context hierarchy
2018-07-07 14:15:04.190  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.192  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 14:15:04.193  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.193  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:04.194  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 14:15:04.197  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 14:15:04.197  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 14:15:04.198  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 14:15:04.199  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:04.200  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.204  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.205  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.205  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.206  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.334  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 14:15:04.334  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 14:15:04.335  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.335  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.336  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.337  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:04.338  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.348  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 14:15:04.349  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 14:15:04.350  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.357  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.358  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.850  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 14:15:04.851  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.851  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.852  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.852  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.853  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.854  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.855  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.858  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.859  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:04.859  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 14:15:04.860  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.861  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:04.861  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 14:15:05.311  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.312  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.312  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.313  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify()
2018-07-07 14:15:05.314  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.317  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.317  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 14:15:05.318  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 14:15:05.319  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.320  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.321  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.321  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.325  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.326  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.773  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.774  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.775  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 14:15:05.775  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 14:15:05.776  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.778  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.779  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:05.779  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 14:15:05.782  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.782  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 14:15:05.783  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.237  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 14:15:06.237  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 14:15:06.238  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.239  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.243  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 14:15:06.243  INFO 4420 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 14:15:06.323  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:06.323  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:06.412  INFO 4420 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 14:15:08.064  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 14:15:08.068  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 14:15:08.078  INFO 4420 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 14:15:08.231  INFO 4420 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 14:15:08.239  INFO 4420 --- [main] com.yanda.Application                    : Started Application in 24.695 seconds (JVM running for 25.93)
2018-07-07 14:15:53.120  INFO 4420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 14:15:53.120  INFO 4420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 14:15:53.191  INFO 4420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2018-07-07 14:18:17.260  INFO 4420 --- [http-nio-8080-exec-6] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 14:18:17.969 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-07 14:18:18.010 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-07 14:18:18.061 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-07 14:18:18.126 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 14:18:18.127 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-07 14:18:18.154 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 14:18:18.158 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:18:18.159 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:18:18.188 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:18:18.189 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:18:18.213 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:18:18.214 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:18:18.215 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:18:18.239 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:18:18.239 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:18:35.703 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 14:18:35.704 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 14:18:35.733 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:19:52.426 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 14:19:52.426 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 14:19:52.453 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 14:19:52.461 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 14:19:52.462 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 26(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:19:52.454(Timestamp), 2020-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 26(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:19:52.454(Timestamp), 2020-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 14:19:52.493 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 14:19:52.493 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:19:52.494 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:19:52.518 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:19:52.518 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:19:52.546 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:19:52.547 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:19:52.547 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:19:52.571 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:19:52.571 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:19:52.674 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 14:19:52.676 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 15.0(Float), 2018-07-07 14:19:52.672(Timestamp), 1(Integer), 38(Integer), We5M68cv4dKCFVv7XN20180707141856(String), 购买会员1个月(String)
2018-07-07 14:19:52.702 DEBUG 4420 --- [http-nio-8080-exec-2] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 14:20:28.796 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 14:20:28.797 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 14:20:28.821 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:20:28.823 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 14:20:28.823 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 14:20:28.848 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 1
2018-07-07 14:25:54.986  INFO 4420 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:26:14.471 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:26:14.472 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:26:14.496 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:26:14.497 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-07 14:26:14.498 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-07 14:26:14.524 DEBUG 4420 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:26:58.441  INFO 4420 --- [http-nio-8080-exec-3] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:26:58.445 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:26:58.446 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:26:58.470 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:26:58.471 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:26:58.472 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 14:26:58.499 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:26:59.658 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:26:59.660 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 974(Long)
2018-07-07 14:26:59.688 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:26:59.882  INFO 4420 --- [http-nio-8080-exec-6] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 14:26:59.883 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 14:26:59.884 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1417(Long)
2018-07-07 14:26:59.908 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 14:26:59.909 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : ====> Parameters: 3946(Long)
2018-07-07 14:26:59.932 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 14:26:59.933 DEBUG 4420 --- [http-nio-8080-exec-6] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 14:27:54.687 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 14:27:54.687 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 14:27:54.710 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 14:27:54.711 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 14:27:54.712 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 38(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:27:54.71(Timestamp), 2021-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 38(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 14:27:54.71(Timestamp), 2021-09-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 14:27:54.740 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 14:27:54.741 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 14:27:54.741 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 14:27:54.765 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 14:27:54.765 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 14:27:54.787 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 14:27:54.788 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 14:27:54.788 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 14:27:54.810 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 14:27:54.810 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 14:27:54.906 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : ==>  Preparing: INSERT INTO t_pay_info ( pay_amount,pay_time,pay_status,user_id,trade_no,pay_msg ) VALUES( ?,?,?,?,?,? ) 
2018-07-07 14:27:54.907 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : ==> Parameters: 178.0(Float), 2018-07-07 14:27:54.904(Timestamp), 1(Integer), 38(Integer), f36uOVwDjtvtvx48Ti20180707142734(String), 购买会员12个月(String)
2018-07-07 14:27:54.931 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.PayInfoMapper.insertSelective    : <==    Updates: 1
2018-07-07 14:28:00.748 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:28:00.749 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1417(Long), 38(Long)
2018-07-07 14:28:00.772 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:28:00.775 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:28:00.778 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1417(Long), 2018-07-07 14:28:00.608(Timestamp), 11000(Integer)
2018-07-07 14:28:00.802 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:38:40.046  INFO 4420 --- [http-nio-8080-exec-7] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:38:40.330 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:38:40.330 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1(Long), 38(Long)
2018-07-07 14:38:40.360 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:38:40.361 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:38:40.361 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:38:40.385 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:38:40.385 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:38:40.386 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 14:38:40.412 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:38:40.412 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:38:40.413 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1(Long), 2018-07-07 14:38:39.921(Timestamp), 0(Integer)
2018-07-07 14:38:40.437 DEBUG 4420 --- [http-nio-8080-exec-4] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:38:44.541 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:38:44.542 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 975(Long)
2018-07-07 14:38:44.567 DEBUG 4420 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:38:44.730  INFO 4420 --- [http-nio-8080-exec-1] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 14:38:44.730 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 14:38:44.731 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1418(Long)
2018-07-07 14:38:44.754 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 14:38:44.755 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====> Parameters: 3949(Long)
2018-07-07 14:38:44.778 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 14:38:44.778 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 14:38:50.132 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 14:38:50.132 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 975(Long)
2018-07-07 14:38:50.161 DEBUG 4420 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 14:39:50.452  INFO 4420 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:39:50.474 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 14:39:50.475 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1418(Long), 38(Long)
2018-07-07 14:39:50.476 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:39:50.476 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:39:50.496 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 14:39:50.497 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 14:39:50.498 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:39:50.499 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1418(Long), 2018-07-07 14:39:50.333(Timestamp), 1000(Integer)
2018-07-07 14:39:50.500 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 14:39:50.500 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 8(Integer), 4(Integer)
2018-07-07 14:39:50.521 DEBUG 4420 --- [http-nio-8080-exec-7] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 14:39:50.525 DEBUG 4420 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 14:44:41.917  INFO 4420 --- [http-nio-8080-exec-10] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 14:45:20.203 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 14:45:20.204 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 14:45:20.226 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 14:45:20.227 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-07 14:45:20.227 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-07 14:45:20.251 DEBUG 4420 --- [http-nio-8080-exec-10] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 16:12:32.025  INFO 21192 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 21192 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 16:12:32.047 DEBUG 21192 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 16:12:32.048  INFO 21192 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 16:12:32.673  INFO 21192 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:12:32 CST 2018]; root of context hierarchy
2018-07-07 16:12:34.848  INFO 21192 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 16:12:35.480  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.481  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.482  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.483  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.483  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.484  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.485  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.486  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.487  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.488  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:12:35.488  WARN 21192 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 16:12:35.535  WARN 21192 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 16:12:36.612  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7acb728a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.028  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$95ab0ad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.063  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:37.067  INFO 21192 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$c3dda8a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:12:42.839  INFO 21192 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 16:12:42.867  INFO 21192 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 16:12:42.868  INFO 21192 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 16:12:43.118  INFO 21192 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 16:12:43.119  INFO 21192 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10453 ms
2018-07-07 16:12:43.646  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 16:12:43.647  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 16:12:43.649  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 16:12:43.650  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 16:12:43.651  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 16:12:43.651  INFO 21192 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 16:12:46.232  INFO 21192 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 16:12:49.578  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:12:32 CST 2018]; root of context hierarchy
2018-07-07 16:12:49.745  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.747  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.748  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:12:49.749  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.749  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:12:49.754  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:12:49.754  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:12:49.755  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 16:12:49.755  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.756  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.758  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.759  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.760  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.761  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.761  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.762  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.766  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:12:49.767  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:12:49.768  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.768  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.769  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.770  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.771  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.773  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 16:12:49.774  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 16:12:49.775  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.778  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.778  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.779  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:12:49.779  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.780  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.781  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.782  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.782  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.784  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.784  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.785  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.786  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:12:49.789  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.790  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.791  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.792  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.792  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.793  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.793  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.794  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.800  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 16:12:49.800  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.801  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.801  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.802  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.803  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.805  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.806  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 16:12:49.806  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 16:12:49.807  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.808  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.809  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.810  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.814  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.814  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:12:49.815  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.816  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.817  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.818  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.818  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 16:12:49.819  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.820  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 16:12:49.820  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.823  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.823  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.824  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 16:12:49.825  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.825  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.828  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.828  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.829  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:12:49.831  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 16:12:49.832  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.832  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:12:49.833  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.833  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.834  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:12:49.834  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.835  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.835  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:12:49.840  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 16:12:49.840  INFO 21192 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:12:49.967  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:49.967  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:50.092  INFO 21192 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:12:52.501  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 16:12:52.504  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 16:12:52.512  INFO 21192 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 16:12:52.655  INFO 21192 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 16:12:52.665  INFO 21192 --- [main] com.yanda.Application                    : Started Application in 21.309 seconds (JVM running for 22.595)
2018-07-07 16:15:17.132  INFO 21192 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 16:15:17.134  INFO 21192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 16:15:17.225  INFO 21192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2018-07-07 16:16:55.216  INFO 21192 --- [http-nio-8080-exec-4] wxpay java sdk                           : report worker num: 6
2018-07-07 16:16:55.234  INFO 21192 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,B1u0tPRWwxbadwOGnBPoX2PXwHhiWXg9,1530951415,3958,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8AF23884753565E46BC23997114A6E38AFF0B8464BDE417D5290A0AE063293E2
2018-07-07 16:16:55.236  INFO 21192 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,B1u0tPRWwxbadwOGnBPoX2PXwHhiWXg9,1530951415,3958,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8AF23884753565E46BC23997114A6E38AFF0B8464BDE417D5290A0AE063293E2
2018-07-07 16:16:55.237  INFO 21192 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:19:21.997  INFO 13208 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13208 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 16:19:22.006 DEBUG 13208 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 16:19:22.007  INFO 13208 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 16:19:22.469  INFO 13208 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:19:22 CST 2018]; root of context hierarchy
2018-07-07 16:19:24.583  INFO 13208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 16:19:25.187  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.187  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.188  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.189  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.190  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.191  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.192  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.193  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 16:19:25.193  WARN 13208 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 16:19:25.235  WARN 13208 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 16:19:26.272  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b802c57c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.658  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$d2e25dc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.694  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:26.697  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$114fb9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 16:19:32.460  INFO 13208 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 16:19:32.484  INFO 13208 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 16:19:32.485  INFO 13208 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 16:19:32.726  INFO 13208 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 16:19:32.726  INFO 13208 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10262 ms
2018-07-07 16:19:33.199  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 16:19:33.200  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 16:19:33.201  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 16:19:33.202  INFO 13208 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 16:19:35.886  INFO 13208 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 16:19:39.518  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 16:19:22 CST 2018]; root of context hierarchy
2018-07-07 16:19:39.689  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.691  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.692  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:19:39.693  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 16:19:39.694  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.697  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:19:39.698  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 16:19:39.699  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 16:19:39.699  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.700  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.704  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.705  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.706  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.706  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.707  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.708  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.713  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:19:39.714  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 16:19:39.715  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.716  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.716  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.717  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.718  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.720  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.722  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 16:19:39.723  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 16:19:39.727  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.728  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.728  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:19:39.729  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.729  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.730  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.731  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.731  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.733  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.733  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.735  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.736  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:19:39.739  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.740  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.741  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.741  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.742  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.742  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 16:19:39.743  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.743  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.744  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.745  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.750  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 16:19:39.751  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.752  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.752  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.753  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.754  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.757  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.757  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 16:19:39.758  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 16:19:39.759  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.760  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.761  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.761  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.764  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.765  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 16:19:39.765  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.767  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.767  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.768  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 16:19:39.768  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.769  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.770  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.770  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.772  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.772  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.773  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 16:19:39.773  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.774  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.775  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.776  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 16:19:39.776  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.779  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 16:19:39.780  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.781  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 16:19:39.782  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.782  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.783  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 16:19:39.783  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.784  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 16:19:39.784  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.787  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 16:19:39.788  INFO 13208 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 16:19:39.918  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:39.919  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:40.033  INFO 13208 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 16:19:42.502  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 16:19:42.506  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 16:19:42.518  INFO 13208 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 16:19:42.669  INFO 13208 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 16:19:42.680  INFO 13208 --- [main] com.yanda.Application                    : Started Application in 21.303 seconds (JVM running for 22.119)
2018-07-07 16:20:31.994  INFO 13208 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 16:20:31.994  INFO 13208 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 16:20:32.061  INFO 13208 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2018-07-07 16:20:36.353  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-07 16:20:36.361  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,K7pu0mLldmrv3GEhMeDRoHOUOGQoDltl,1530951636,902,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E81D49A2215AD2DFE790F146F2BC09FF3F8FB34F218175D9AFCA614188C1D407
2018-07-07 16:20:36.361  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,K7pu0mLldmrv3GEhMeDRoHOUOGQoDltl,1530951636,902,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E81D49A2215AD2DFE790F146F2BC09FF3F8FB34F218175D9AFCA614188C1D407
2018-07-07 16:20:36.362  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:22:04.072  INFO 13208 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,dNJbijfWiCevEVL1gmycbL5KoytVMbju,1530951724,17711,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9479D00ADC24026FC7860106B50C7883E2A7A6D88E55D631005ACA85D7C38D69
2018-07-07 16:22:04.073  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,dNJbijfWiCevEVL1gmycbL5KoytVMbju,1530951724,17711,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9479D00ADC24026FC7860106B50C7883E2A7A6D88E55D631005ACA85D7C38D69
2018-07-07 16:22:04.073  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:22:53.186  INFO 13208 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,XZdr0vJvuHQ9HRW0JO0pXj4GBBiYoSZC,1530951773,42974,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9E2B7EF69B1909A994ABC4E592B089D7EA852B93B297E0C6B361FED41AAC34BE
2018-07-07 16:22:53.186  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,XZdr0vJvuHQ9HRW0JO0pXj4GBBiYoSZC,1530951773,42974,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9E2B7EF69B1909A994ABC4E592B089D7EA852B93B297E0C6B361FED41AAC34BE
2018-07-07 16:22:53.187  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:23:47.211  INFO 13208 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6Yy2v1wtoKSjukFOSpLODARQGdWDS9fw,1530951827,227,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8EDF39AC51B5DD71921AC734E246C3D3DAA1434F1FF33F086858DF62CB2D9075
2018-07-07 16:23:47.212  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6Yy2v1wtoKSjukFOSpLODARQGdWDS9fw,1530951827,227,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8EDF39AC51B5DD71921AC734E246C3D3DAA1434F1FF33F086858DF62CB2D9075
2018-07-07 16:23:47.213  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:26:50.922  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,NFWRrWHWaqoUyysL1Pd8s70ICNeeieM4,1530952010,325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,131293FC208FD9823CBF339D7EFE3B273F741D01F70FDA965325B1E6628C1848
2018-07-07 16:26:50.923  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,NFWRrWHWaqoUyysL1Pd8s70ICNeeieM4,1530952010,325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,131293FC208FD9823CBF339D7EFE3B273F741D01F70FDA965325B1E6628C1848
2018-07-07 16:26:50.923  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:38:24.945  INFO 13208 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,MUklwNyrXUpMPJRKskJktxJYZ2tn5ap6,1530952704,321,api.mch.weixin.qq.com,true,6000,8000,0,0,0,1717270D12462E4F3C104550D0F14E524DBA852215052ECD6FB04390B2265787
2018-07-07 16:38:24.946  INFO 13208 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,MUklwNyrXUpMPJRKskJktxJYZ2tn5ap6,1530952704,321,api.mch.weixin.qq.com,true,6000,8000,0,0,0,1717270D12462E4F3C104550D0F14E524DBA852215052ECD6FB04390B2265787
2018-07-07 16:38:24.946  INFO 13208 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:44:55.652  INFO 13208 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,SvFu2dEXQGZBrrczRi1JhFe77l1q3Fau,1530953095,351,api.mch.weixin.qq.com,true,6000,8000,0,0,0,BFAFB80AC1C002BE6387834C74B3B98545C2921D9D52D903469E1E41160DD409
2018-07-07 16:44:55.652  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,SvFu2dEXQGZBrrczRi1JhFe77l1q3Fau,1530953095,351,api.mch.weixin.qq.com,true,6000,8000,0,0,0,BFAFB80AC1C002BE6387834C74B3B98545C2921D9D52D903469E1E41160DD409
2018-07-07 16:44:55.652  INFO 13208 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:41.802  INFO 13208 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,xW1fXMJrkdZ9Wr5T0H3UTk3q8h6JhKOZ,1530953201,291,api.mch.weixin.qq.com,true,6000,8000,0,0,0,37D8FB27B60E41C409FA71A1CE50D2704BBE6213ACCCA48B583EE4D3C1E77E3E
2018-07-07 16:46:41.803  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,xW1fXMJrkdZ9Wr5T0H3UTk3q8h6JhKOZ,1530953201,291,api.mch.weixin.qq.com,true,6000,8000,0,0,0,37D8FB27B60E41C409FA71A1CE50D2704BBE6213ACCCA48B583EE4D3C1E77E3E
2018-07-07 16:46:41.803  INFO 13208 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:45.358  INFO 13208 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,CjqsTuGXtx1CSSq7CjfTTX814URo5v5p,1530953205,275,api.mch.weixin.qq.com,true,6000,8000,0,0,0,7C1B2834836ED78FC9DB5C0E4E2C85C72C4A095C430B1A760E673892FF03FCED
2018-07-07 16:46:45.359  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,CjqsTuGXtx1CSSq7CjfTTX814URo5v5p,1530953205,275,api.mch.weixin.qq.com,true,6000,8000,0,0,0,7C1B2834836ED78FC9DB5C0E4E2C85C72C4A095C430B1A760E673892FF03FCED
2018-07-07 16:46:45.359  INFO 13208 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:46:51.235  INFO 13208 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,JDRTCx71Qb3GPCmHRz4IQLPJTfV3Qemc,1530953211,329,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8C277BC343F88329CE5A9EA39762DC2FD2D2F6B82469419BE0E5720B2A09BAF7
2018-07-07 16:46:51.236  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,JDRTCx71Qb3GPCmHRz4IQLPJTfV3Qemc,1530953211,329,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8C277BC343F88329CE5A9EA39762DC2FD2D2F6B82469419BE0E5720B2A09BAF7
2018-07-07 16:46:51.236  INFO 13208 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 16:47:03.782  INFO 13208 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,E9Zn0VoNN8eZNb794wYblHmsXUKG93Oi,1530953223,287,api.mch.weixin.qq.com,true,6000,8000,0,0,0,820E077AC7BF853D4FF60C0C5EF2292332C16E670111EEFB2B16459416BB6FCC
2018-07-07 16:47:03.783  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : get remain report msg: v1,WXPaySDK/3.0.9,E9Zn0VoNN8eZNb794wYblHmsXUKG93Oi,1530953223,287,api.mch.weixin.qq.com,true,6000,8000,0,0,0,820E077AC7BF853D4FF60C0C5EF2292332C16E670111EEFB2B16459416BB6FCC
2018-07-07 16:47:03.783  INFO 13208 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:17:23.254  INFO 15460 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 15460 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:17:23.259 DEBUG 15460 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:17:23.260  INFO 15460 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:17:23.591  INFO 15460 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:17:23 CST 2018]; root of context hierarchy
2018-07-07 18:17:25.881  INFO 15460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:17:26.531  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.532  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.533  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.534  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.535  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.536  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:17:26.537  WARN 15460 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:17:26.577  WARN 15460 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:17:27.777  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5db3dac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.253  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$78937312] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.291  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:28.296  INFO 15460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a6c610e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:17:34.139  INFO 15460 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:17:34.167  INFO 15460 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:17:34.170  INFO 15460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:17:34.405  INFO 15460 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:17:34.406  INFO 15460 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10822 ms
2018-07-07 18:17:34.965  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:17:34.968  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:17:34.969  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:17:34.969  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:17:34.970  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:17:34.971  INFO 15460 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:17:38.240  INFO 15460 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:17:41.920  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:17:23 CST 2018]; root of context hierarchy
2018-07-07 18:17:42.140  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:17:42.141  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.142  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.143  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:17:42.144  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.148  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:17:42.149  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:17:42.150  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:17:42.150  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.151  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.153  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.154  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.155  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.156  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.157  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.157  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.163  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:17:42.164  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:17:42.165  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.166  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.166  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.167  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.167  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.169  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:17:42.170  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:17:42.171  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.175  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.176  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.176  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:17:42.177  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.178  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.178  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.179  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.180  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.181  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.182  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.182  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.183  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:17:42.187  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.188  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.188  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.189  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.190  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.192  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:17:42.192  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.193  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.194  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.195  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.199  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[GET]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:17:42.200  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.200  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:17:42.201  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.201  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.202  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.204  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.204  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:17:42.205  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:17:42.206  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.207  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.207  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.208  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.212  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.212  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:17:42.213  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.213  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.214  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.214  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.215  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:17:42.215  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.216  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:17:42.217  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.217  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.218  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.221  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:17:42.221  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.222  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.222  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.223  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.225  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.225  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.226  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:17:42.229  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:17:42.230  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.231  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:17:42.232  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.233  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:17:42.234  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.234  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.235  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.235  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:17:42.238  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:17:42.239  INFO 15460 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:17:42.378  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:42.379  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:42.505  INFO 15460 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:17:44.986  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:17:44.990  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:17:45.004  INFO 15460 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:17:45.266  INFO 15460 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:17:45.275  INFO 15460 --- [main] com.yanda.Application                    : Started Application in 22.358 seconds (JVM running for 22.817)
2018-07-07 18:19:45.855  INFO 15460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:19:45.856  INFO 15460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:19:45.948  INFO 15460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2018-07-07 18:21:34.541  WARN 15460 --- [http-nio-8080-exec-2] o.s.web.servlet.PageNotFound             : Request method 'POST' not supported
2018-07-07 18:22:53.772  INFO 13020 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13020 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:22:53.780 DEBUG 13020 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:22:53.781  INFO 13020 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:22:54.248  INFO 13020 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:22:54 CST 2018]; root of context hierarchy
2018-07-07 18:22:56.571  INFO 13020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:22:57.198  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.199  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.199  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.200  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.201  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.202  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.204  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.205  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.205  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:22:57.206  WARN 13020 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:22:57.247  WARN 13020 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:22:58.230  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$687b12ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.631  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$835aab39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.667  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:22:58.671  INFO 13020 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b18d490d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:23:04.466  INFO 13020 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:23:04.493  INFO 13020 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:23:04.496  INFO 13020 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:23:04.736  INFO 13020 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:23:04.737  INFO 13020 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10495 ms
2018-07-07 18:23:05.301  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:23:05.303  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:23:05.304  INFO 13020 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:23:08.034  INFO 13020 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:23:11.528  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:22:54 CST 2018]; root of context hierarchy
2018-07-07 18:23:11.677  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:23:11.678  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.679  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.680  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:23:11.680  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.683  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:23:11.684  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:23:11.684  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:23:11.685  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.686  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.690  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.691  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.691  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.692  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.692  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.693  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.698  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:23:11.699  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:23:11.700  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.701  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.701  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.702  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.703  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.705  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:23:11.706  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:23:11.706  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.710  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.710  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.711  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:23:11.711  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.712  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.712  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.713  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.714  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.715  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.715  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.716  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.717  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:23:11.720  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.721  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.722  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.722  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.723  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.723  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.724  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:23:11.725  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.725  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.726  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.731  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:23:11.732  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.732  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.734  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:23:11.734  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.735  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.738  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.739  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:23:11.739  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:23:11.740  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.742  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.742  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.743  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.748  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.749  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:23:11.750  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.751  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.751  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.752  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.752  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:23:11.753  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:23:11.753  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.754  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.754  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.755  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.757  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.758  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.759  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:23:11.759  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.760  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.762  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.762  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.763  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:23:11.766  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:23:11.766  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.767  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:23:11.768  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.769  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.769  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:23:11.770  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.770  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.771  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:23:11.775  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:23:11.776  INFO 13020 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:23:11.890  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:11.890  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:12.004  INFO 13020 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:23:14.317  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:23:14.321  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:23:14.332  INFO 13020 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:23:14.478  INFO 13020 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:23:14.489  INFO 13020 --- [main] com.yanda.Application                    : Started Application in 21.317 seconds (JVM running for 22.259)
2018-07-07 18:31:35.851  INFO 13020 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:31:35.851  INFO 13020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:31:35.940  INFO 13020 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2018-07-07 18:31:42.632  INFO 13020 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:31:43.425 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:31:43.469 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:31:43.519 DEBUG 13020 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:31:43.694  INFO 13020 --- [http-nio-8080-exec-7] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 18:31:43.695 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 18:31:43.696 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1433(Long)
2018-07-07 18:31:43.729 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 18:31:43.729 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : ====> Parameters: 3994(Long)
2018-07-07 18:31:43.755 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 18:31:43.757 DEBUG 13020 --- [http-nio-8080-exec-7] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 18:33:13.613  INFO 4024 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 4024 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:33:13.621 DEBUG 4024 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:33:13.621  INFO 4024 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:33:14.111  INFO 4024 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:33:14 CST 2018]; root of context hierarchy
2018-07-07 18:33:16.567  INFO 4024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:33:17.222  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.222  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.223  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.224  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.225  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.226  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.227  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:33:17.228  WARN 4024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:33:17.269  WARN 4024 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:33:18.343  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b95a267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.750  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$96753ab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.790  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:18.793  INFO 4024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$c4a7d885] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:33:24.606  INFO 4024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:33:24.634  INFO 4024 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:33:24.637  INFO 4024 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:33:24.879  INFO 4024 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:33:24.880  INFO 4024 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10777 ms
2018-07-07 18:33:25.409  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:33:25.410  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:33:25.410  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:33:25.411  INFO 4024 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:33:28.264  INFO 4024 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:33:32.027  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:33:14 CST 2018]; root of context hierarchy
2018-07-07 18:33:32.197  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.199  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:33:32.200  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:33:32.201  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.203  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.206  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:33:32.208  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:33:32.208  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:33:32.209  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.209  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.213  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.214  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.215  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.215  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.216  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.217  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.224  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:33:32.225  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:33:32.226  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.226  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.227  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.227  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.228  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.230  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.230  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:33:32.231  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:33:32.236  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:33:32.237  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.238  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.238  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.239  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.239  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.240  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.241  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.242  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.243  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:33:32.246  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.246  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.247  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.248  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.248  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:33:32.249  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.250  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.251  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.255  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:33:32.256  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:33:32.257  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.257  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.258  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.258  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.260  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.261  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:33:32.261  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:33:32.262  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.263  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.263  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.264  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.269  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.270  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:33:32.270  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.271  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.272  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.272  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.273  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:33:32.273  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:33:32.274  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.274  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.275  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.275  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.278  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.278  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.279  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:33:32.280  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.281  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.283  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.283  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:33:32.284  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.287  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:33:32.288  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.289  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:33:32.289  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.290  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.291  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:33:32.292  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.296  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:33:32.297  INFO 4024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:33:32.420  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:32.421  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:32.539  INFO 4024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:33:35.062  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:33:35.066  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:33:35.078  INFO 4024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:33:35.227  INFO 4024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:33:35.237  INFO 4024 --- [main] com.yanda.Application                    : Started Application in 22.285 seconds (JVM running for 23.107)
2018-07-07 18:33:46.506  INFO 4024 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:33:46.507  INFO 4024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:33:46.590  INFO 4024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2018-07-07 18:34:13.413  INFO 4024 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:34:14.114 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:34:14.157 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:34:14.200 DEBUG 4024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:35:47.517 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:35:47.517 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:35:47.540 DEBUG 4024 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:37:44.023 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:37:44.023 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:37:44.046 DEBUG 4024 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:39:43.111  INFO 4024 --- [http-nio-8080-exec-3] wxpay java sdk                           : report worker num: 6
2018-07-07 18:39:43.121  INFO 4024 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,5cdnzv79q8RXuuSgYxN76Wx41HvTYcrZ,1530959983,1208,api.mch.weixin.qq.com,true,6000,8000,0,0,0,DADA77A2221967784E54B7710EFEC64A419D3622F7531E5406B5966211032D79
2018-07-07 18:39:43.122  INFO 4024 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,5cdnzv79q8RXuuSgYxN76Wx41HvTYcrZ,1530959983,1208,api.mch.weixin.qq.com,true,6000,8000,0,0,0,DADA77A2221967784E54B7710EFEC64A419D3622F7531E5406B5966211032D79
2018-07-07 18:39:43.122  INFO 4024 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:40:09.934  INFO 18724 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18724 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:40:09.943 DEBUG 18724 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:40:09.943  INFO 18724 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:40:10.420  INFO 18724 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:40:10 CST 2018]; root of context hierarchy
2018-07-07 18:40:12.559  INFO 18724 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:40:13.192  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.193  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.194  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.195  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.196  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.197  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:40:13.198  WARN 18724 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:40:13.235  WARN 18724 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:40:14.351  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$91e4ef0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.776  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$acc48754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.809  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:14.812  INFO 18724 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$daf72528] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:40:20.595  INFO 18724 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:40:20.623  INFO 18724 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:40:20.625  INFO 18724 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:40:20.861  INFO 18724 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:40:20.862  INFO 18724 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10449 ms
2018-07-07 18:40:21.371  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:40:21.373  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:40:21.374  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:40:21.374  INFO 18724 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:40:24.096  INFO 18724 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:40:27.700  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:40:10 CST 2018]; root of context hierarchy
2018-07-07 18:40:27.875  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.877  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:27.879  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:40:27.880  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:40:27.881  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.884  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:40:27.885  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:40:27.886  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:40:27.886  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.887  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.891  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.892  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.893  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.893  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.894  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.894  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.899  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:40:27.900  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:40:27.901  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.902  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.902  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.903  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.904  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.907  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:40:27.908  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:40:27.909  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.913  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.914  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.914  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:40:27.915  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.916  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.917  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.918  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.919  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.919  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.920  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:40:27.924  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.925  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.926  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.926  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.927  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.927  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:40:27.928  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.928  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.929  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.929  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.934  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:40:27.935  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.935  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.936  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:40:27.936  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.937  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.940  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.941  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:40:27.942  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:40:27.943  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.944  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.945  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.946  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.952  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.953  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:40:27.954  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.954  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.955  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.956  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.956  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.957  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.958  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:40:27.958  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:40:27.960  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.961  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.961  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.962  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.962  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:40:27.964  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.965  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:40:27.966  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.970  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:40:27.971  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.972  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:40:27.973  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.973  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.974  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:40:27.974  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.975  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.976  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:40:27.980  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:40:27.981  INFO 18724 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:40:28.120  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:28.121  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:28.247  INFO 18724 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:40:30.911  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:40:30.914  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:40:30.926  INFO 18724 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:40:31.075  INFO 18724 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:40:31.084  INFO 18724 --- [main] com.yanda.Application                    : Started Application in 21.78 seconds (JVM running for 22.636)
2018-07-07 18:40:43.431  INFO 18724 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:40:43.431  INFO 18724 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:40:43.526  INFO 18724 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2018-07-07 18:40:55.716  INFO 18724 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:40:56.488 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:40:56.533 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:40:56.588 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:41:14.194  INFO 18724 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:41:14.198  INFO 18724 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,AYbI081VbchJGFQStesOhMhVwSGMY0Nx,1530960074,808,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D50CE95D3CDBE3D0775D7C44B56E8843F5AA5D1AA2F93F1E8FFE4BDB2C44C18
2018-07-07 18:41:14.199  INFO 18724 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,AYbI081VbchJGFQStesOhMhVwSGMY0Nx,1530960074,808,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D50CE95D3CDBE3D0775D7C44B56E8843F5AA5D1AA2F93F1E8FFE4BDB2C44C18
2018-07-07 18:41:14.199  INFO 18724 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:44:57.372 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:44:57.372 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:44:57.399 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:45:45.257  INFO 18724 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,FMzQiGlI4PMjRc2vr4mNxJG2ddnsqE5k,1530960345,430,api.mch.weixin.qq.com,true,6000,8000,0,0,0,5527ABB98103C1E0F03A15A21193EC921197CC0F391CA9D41FE4C52DBC9A7CDF
2018-07-07 18:45:45.257  INFO 18724 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,FMzQiGlI4PMjRc2vr4mNxJG2ddnsqE5k,1530960345,430,api.mch.weixin.qq.com,true,6000,8000,0,0,0,5527ABB98103C1E0F03A15A21193EC921197CC0F391CA9D41FE4C52DBC9A7CDF
2018-07-07 18:45:45.257  INFO 18724 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:47:05.393 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:47:05.394 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:47:05.420 DEBUG 18724 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:47:05.561  INFO 18724 --- [http-nio-8080-exec-9] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-07 18:47:05.562 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 18:47:05.563 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1432(Long)
2018-07-07 18:47:05.592 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-07 18:47:05.593 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : ====> Parameters: 3991(Long)
2018-07-07 18:47:05.620 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-07 18:47:05.621 DEBUG 18724 --- [http-nio-8080-exec-9] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-07 18:47:25.943  INFO 18724 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,3x8qmdichbDbnzKhRusiba0AOzAru8Sn,1530960445,368,api.mch.weixin.qq.com,true,6000,8000,0,0,0,2E9A8F83E3363A97CD8C304E75CC933925115A564900F8EF609F4E9D4FBEB7B2
2018-07-07 18:47:25.943  INFO 18724 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,3x8qmdichbDbnzKhRusiba0AOzAru8Sn,1530960445,368,api.mch.weixin.qq.com,true,6000,8000,0,0,0,2E9A8F83E3363A97CD8C304E75CC933925115A564900F8EF609F4E9D4FBEB7B2
2018-07-07 18:47:25.943  INFO 18724 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:48:34.731  INFO 18724 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Ue41ePEPmiWpzvFuczzpSXdo5S4T0L6P,1530960514,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0354D194CDA98CCEF3E2713A0C38F411E3B462A5F3EB8C06BF8837355DA9165A
2018-07-07 18:48:34.732  INFO 18724 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Ue41ePEPmiWpzvFuczzpSXdo5S4T0L6P,1530960514,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0354D194CDA98CCEF3E2713A0C38F411E3B462A5F3EB8C06BF8837355DA9165A
2018-07-07 18:48:34.732  INFO 18724 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:49:05.886  INFO 20008 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20008 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:49:05.895 DEBUG 20008 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:49:05.895  INFO 20008 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:49:06.383  INFO 20008 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:49:06 CST 2018]; root of context hierarchy
2018-07-07 18:49:08.802  INFO 20008 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.541  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.542  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.543  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.544  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.545  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.546  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:49:09.547  WARN 20008 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:49:09.590  WARN 20008 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:49:10.768  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d942932] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.208  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b873c17c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.245  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:11.248  INFO 20008 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e6a65f50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:49:17.102  INFO 20008 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:49:17.134  INFO 20008 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:49:17.137  INFO 20008 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:49:17.464  INFO 20008 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:49:17.465  INFO 20008 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11088 ms
2018-07-07 18:49:17.968  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:49:17.970  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:49:17.971  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:49:17.971  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:49:17.972  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:49:17.972  INFO 20008 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:49:20.728  INFO 20008 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:49:24.139  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:49:06 CST 2018]; root of context hierarchy
2018-07-07 18:49:24.314  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:49:24.317  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.318  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:49:24.319  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.320  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.323  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:49:24.324  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:49:24.325  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:49:24.325  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.326  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.330  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.331  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.332  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.333  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.335  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.336  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.341  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:49:24.342  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:49:24.342  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.343  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.344  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.344  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.345  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.347  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:49:24.347  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:49:24.348  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.351  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.353  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.353  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:49:24.354  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.355  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.355  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.356  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.356  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.357  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.358  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.358  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.359  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:49:24.362  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.363  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.363  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.364  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.364  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.365  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.365  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.366  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.366  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.367  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:49:24.372  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:49:24.373  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:49:24.373  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.374  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.375  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.375  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.378  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.378  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:49:24.379  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:49:24.380  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.381  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.382  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.382  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.386  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.387  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.388  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.389  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:49:24.390  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.390  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.392  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.392  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.393  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.395  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.395  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:49:24.396  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.399  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:49:24.400  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.401  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:49:24.401  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.402  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:49:24.402  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:49:24.403  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.407  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:49:24.408  INFO 20008 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:49:24.536  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:24.537  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:24.657  INFO 20008 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:49:27.204  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:49:27.207  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:49:27.220  INFO 20008 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:49:27.371  INFO 20008 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:49:27.384  INFO 20008 --- [main] com.yanda.Application                    : Started Application in 22.209 seconds (JVM running for 23.025)
2018-07-07 18:49:42.734  INFO 20008 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:49:42.735  INFO 20008 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:49:42.795  INFO 20008 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2018-07-07 18:49:49.705  INFO 20008 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:49:50.548 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:49:50.590 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:49:50.641 DEBUG 20008 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:49:58.733  INFO 20008 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:49:58.742  INFO 20008 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,f4SPafm09YJsmWTL3iqTjzt9OazAA90M,1530960598,1272,api.mch.weixin.qq.com,true,6000,8000,0,0,0,05D1B8D0A293CD4B44F20EFC81B2F1A1DD610E5ECB710D1F0F07D249C71BC746
2018-07-07 18:49:58.742  INFO 20008 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,f4SPafm09YJsmWTL3iqTjzt9OazAA90M,1530960598,1272,api.mch.weixin.qq.com,true,6000,8000,0,0,0,05D1B8D0A293CD4B44F20EFC81B2F1A1DD610E5ECB710D1F0F07D249C71BC746
2018-07-07 18:49:58.743  INFO 20008 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:51:12.762  INFO 20008 --- [http-nio-8080-exec-3] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,QDBFV3rjwKJt3fbNokRbJQBFiIOgJUGt,1530960672,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,03F839C682E96D0F2E668F411403DC6CC419F600A2417EE9272FE85535D77686
2018-07-07 18:51:12.762  INFO 20008 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,QDBFV3rjwKJt3fbNokRbJQBFiIOgJUGt,1530960672,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,03F839C682E96D0F2E668F411403DC6CC419F600A2417EE9272FE85535D77686
2018-07-07 18:51:12.763  INFO 20008 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:52:14.658 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:52:14.660 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 989(Long)
2018-07-07 18:52:14.686 DEBUG 20008 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:52:42.500  INFO 20008 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,ZUfaaC5RZF4yuOWDSx8wthLhcWcnH4cl,1530960762,378,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C55E7153B4F83660E66CD747BD69EADC622E2F2B44D3D539C141D837F6D97272
2018-07-07 18:52:42.501  INFO 20008 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,ZUfaaC5RZF4yuOWDSx8wthLhcWcnH4cl,1530960762,378,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C55E7153B4F83660E66CD747BD69EADC622E2F2B44D3D539C141D837F6D97272
2018-07-07 18:52:42.501  INFO 20008 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:56:27.895  INFO 21024 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 21024 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 18:56:27.904 DEBUG 21024 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 18:56:27.904  INFO 21024 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 18:56:28.374  INFO 21024 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:56:28 CST 2018]; root of context hierarchy
2018-07-07 18:56:30.710  INFO 21024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 18:56:31.376  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.377  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.378  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.379  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.380  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.381  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 18:56:31.382  WARN 21024 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 18:56:31.422  WARN 21024 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 18:56:32.547  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b8dec193] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.011  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$d3be59dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.083  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:33.088  INFO 21024 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1f0f7b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 18:56:38.950  INFO 21024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 18:56:38.978  INFO 21024 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 18:56:38.980  INFO 21024 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 18:56:39.225  INFO 21024 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 18:56:39.226  INFO 21024 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10859 ms
2018-07-07 18:56:39.715  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 18:56:39.716  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 18:56:39.716  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 18:56:39.717  INFO 21024 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 18:56:42.539  INFO 21024 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 18:56:46.352  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 18:56:28 CST 2018]; root of context hierarchy
2018-07-07 18:56:46.524  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:56:46.526  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.527  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.528  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 18:56:46.528  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.531  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:56:46.532  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 18:56:46.533  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 18:56:46.534  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.535  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.538  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.539  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.540  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.540  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.541  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.541  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.546  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:56:46.547  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 18:56:46.547  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.548  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.548  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.549  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.550  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.552  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.553  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 18:56:46.554  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 18:56:46.557  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.557  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.558  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:56:46.559  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.559  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.560  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.560  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.561  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.562  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.563  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.564  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.565  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:56:46.569  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.569  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.570  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.570  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.571  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.571  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.572  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 18:56:46.573  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.573  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.574  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.580  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:56:46.581  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 18:56:46.582  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.583  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.586  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.587  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 18:56:46.587  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 18:56:46.588  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.589  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.589  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.590  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.593  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.594  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.595  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.596  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.596  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.597  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 18:56:46.598  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.598  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 18:56:46.601  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.601  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.602  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 18:56:46.603  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.603  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.605  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.606  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 18:56:46.606  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.611  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 18:56:46.611  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.612  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 18:56:46.612  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.613  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.613  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 18:56:46.614  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.614  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 18:56:46.615  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.619  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 18:56:46.620  INFO 21024 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 18:56:46.753  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:46.753  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:46.897  INFO 21024 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 18:56:49.604  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 18:56:49.608  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 18:56:49.621  INFO 21024 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 18:56:49.810  INFO 21024 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 18:56:49.822  INFO 21024 --- [main] com.yanda.Application                    : Started Application in 22.577 seconds (JVM running for 23.455)
2018-07-07 18:56:55.900  INFO 21024 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 18:56:55.901  INFO 21024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 18:56:55.980  INFO 21024 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2018-07-07 18:57:02.356  INFO 21024 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 18:57:03.173 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 18:57:03.215 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 18:57:03.262 DEBUG 21024 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 18:57:14.009  INFO 21024 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 18:57:14.018  INFO 21024 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,47Hyz8bVEI1V8Uu6bpoVMgzqNj3N2rFK,1530961034,1265,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6E6DEDB8496AC27292DE5200FCA28E854092AC972C239C4B9BE22444824D19CF
2018-07-07 18:57:14.018  INFO 21024 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,47Hyz8bVEI1V8Uu6bpoVMgzqNj3N2rFK,1530961034,1265,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6E6DEDB8496AC27292DE5200FCA28E854092AC972C239C4B9BE22444824D19CF
2018-07-07 18:57:14.019  INFO 21024 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 18:57:56.949  INFO 21024 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,LOaGJZ2jdScXA6K6lZhARJ9OiH8PSPif,1530961076,379,api.mch.weixin.qq.com,true,6000,8000,0,0,0,88F340FF8E46244BDF95D6CA370D46C25DB7090DB901C490BB6CCE5D19D75049
2018-07-07 18:57:56.949  INFO 21024 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,LOaGJZ2jdScXA6K6lZhARJ9OiH8PSPif,1530961076,379,api.mch.weixin.qq.com,true,6000,8000,0,0,0,88F340FF8E46244BDF95D6CA370D46C25DB7090DB901C490BB6CCE5D19D75049
2018-07-07 18:57:56.950  INFO 21024 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:01:09.987  INFO 20012 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 20012 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 19:01:09.996 DEBUG 20012 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 19:01:09.997  INFO 20012 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 19:01:10.537  INFO 20012 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:01:10 CST 2018]; root of context hierarchy
2018-07-07 19:01:12.785  INFO 20012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 19:01:13.459  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.460  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.461  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.462  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.463  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:01:13.464  WARN 20012 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 19:01:13.503  WARN 20012 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 19:01:14.672  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$133c2304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.234  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$2e1bbb4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.275  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:15.278  INFO 20012 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$5c4e5922] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:01:21.175  INFO 20012 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 19:01:21.206  INFO 20012 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 19:01:21.208  INFO 20012 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 19:01:21.463  INFO 20012 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 19:01:21.463  INFO 20012 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10933 ms
2018-07-07 19:01:21.990  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 19:01:21.991  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 19:01:21.992  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 19:01:21.992  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 19:01:21.993  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 19:01:21.993  INFO 20012 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 19:01:24.711  INFO 20012 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 19:01:28.261  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:01:10 CST 2018]; root of context hierarchy
2018-07-07 19:01:28.455  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.458  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:01:28.459  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.459  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.460  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:01:28.463  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:01:28.464  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:01:28.465  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 19:01:28.465  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.466  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.468  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.469  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.469  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.470  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.470  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.471  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.478  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:01:28.479  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:01:28.480  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.481  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.481  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.482  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.482  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.485  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 19:01:28.486  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 19:01:28.487  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.491  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.492  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.492  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:01:28.493  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.494  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.494  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.495  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.495  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.496  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.497  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.497  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.498  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:01:28.501  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.502  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.502  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.503  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.503  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:01:28.505  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.505  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.506  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.507  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.507  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.512  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:01:28.513  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.513  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.514  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:01:28.514  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.515  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.517  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.518  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 19:01:28.519  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 19:01:28.520  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.522  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.523  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.523  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.528  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.528  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:01:28.529  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.529  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.530  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.531  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.532  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.533  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 19:01:28.535  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.535  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.536  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 19:01:28.537  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.537  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.539  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.540  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:01:28.540  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.543  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:01:28.544  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.544  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:01:28.545  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:01:28.545  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.546  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.546  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.550  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 19:01:28.551  INFO 20012 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:01:28.662  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:28.662  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:28.787  INFO 20012 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:01:31.506  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 19:01:31.510  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 19:01:31.522  INFO 20012 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 19:01:31.665  INFO 20012 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 19:01:31.675  INFO 20012 --- [main] com.yanda.Application                    : Started Application in 22.327 seconds (JVM running for 23.174)
2018-07-07 19:01:39.146  INFO 20012 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 19:01:39.146  INFO 20012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 19:01:39.237  INFO 20012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2018-07-07 19:01:50.994  INFO 20012 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 19:01:51.714 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:01:51.749 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:01:51.793 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:02:06.409  INFO 20012 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 19:02:06.416  INFO 20012 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Oxx4jDLolEra5sKaSVSqMkQUJmvoUWCh,1530961326,1260,api.mch.weixin.qq.com,true,6000,8000,0,0,0,87C769F9D88BD58D55D68046A043973B49A2251134993E402B80AD705116438C
2018-07-07 19:02:06.416  INFO 20012 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Oxx4jDLolEra5sKaSVSqMkQUJmvoUWCh,1530961326,1260,api.mch.weixin.qq.com,true,6000,8000,0,0,0,87C769F9D88BD58D55D68046A043973B49A2251134993E402B80AD705116438C
2018-07-07 19:02:06.417  INFO 20012 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:04:21.030 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-07 19:04:21.032 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-07 19:04:21.059 DEBUG 20012 --- [http-nio-8080-exec-6] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-07 19:04:21.136 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 19:04:21.137 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-07 19:04:21.163 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 19:04:21.166 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 19:04:21.166 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 19:04:21.198 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 19:04:21.199 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 19:04:21.235 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 19:04:21.237 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 19:04:21.237 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 19:04:21.263 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 19:04:21.263 DEBUG 20012 --- [http-nio-8080-exec-5] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 19:04:33.504  INFO 20012 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,BRZSVmHrneNkWFRM7oQd3ykwVa8J6XyY,1530961473,412,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C18BA02F1C753F9920BE194B50ADB3E83C5ECC291936009D4767D1E5B0F47610
2018-07-07 19:04:33.504  INFO 20012 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,BRZSVmHrneNkWFRM7oQd3ykwVa8J6XyY,1530961473,412,api.mch.weixin.qq.com,true,6000,8000,0,0,0,C18BA02F1C753F9920BE194B50ADB3E83C5ECC291936009D4767D1E5B0F47610
2018-07-07 19:04:33.505  INFO 20012 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:05:47.097 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:05:47.098 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:05:47.125 DEBUG 20012 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:12:24.491  INFO 18412 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18412 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 19:12:24.499 DEBUG 18412 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 19:12:24.500  INFO 18412 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 19:12:24.974  INFO 18412 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:12:24 CST 2018]; root of context hierarchy
2018-07-07 19:12:27.276  INFO 18412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.953  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.954  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.955  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.956  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.957  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 19:12:27.958  WARN 18412 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 19:12:28.001  WARN 18412 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 19:12:29.130  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d73fb94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.561  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$785393de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.597  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:29.600  INFO 18412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a68631b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 19:12:35.408  INFO 18412 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 19:12:35.435  INFO 18412 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 19:12:35.437  INFO 18412 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 19:12:35.737  INFO 18412 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 19:12:35.738  INFO 18412 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10770 ms
2018-07-07 19:12:36.281  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 19:12:36.282  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 19:12:36.282  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 19:12:36.283  INFO 18412 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 19:12:39.024  INFO 18412 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 19:12:42.514  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 19:12:24 CST 2018]; root of context hierarchy
2018-07-07 19:12:42.699  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.702  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.703  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:12:42.704  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 19:12:42.705  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.708  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:12:42.709  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 19:12:42.710  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 19:12:42.711  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.712  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.715  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.716  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.717  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.718  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.718  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.719  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.724  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:12:42.725  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 19:12:42.727  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.727  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.728  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.729  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.729  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.731  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.732  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 19:12:42.733  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 19:12:42.736  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.737  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.737  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:12:42.738  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.738  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.739  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.739  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.740  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.741  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.742  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.742  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.744  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:12:42.747  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.747  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.748  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.749  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.749  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.750  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.750  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.751  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 19:12:42.751  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.752  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.757  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:12:42.758  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 19:12:42.760  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.760  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.761  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.762  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.764  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.765  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 19:12:42.765  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 19:12:42.766  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.768  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.769  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.770  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.774  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.775  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 19:12:42.775  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.776  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.777  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 19:12:42.779  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.780  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.780  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.781  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.781  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.785  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 19:12:42.785  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.786  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.787  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.787  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.789  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.789  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.790  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 19:12:42.794  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 19:12:42.795  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.795  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 19:12:42.796  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.796  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 19:12:42.797  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.797  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.798  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.798  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 19:12:42.803  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 19:12:42.803  INFO 18412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 19:12:42.948  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:42.948  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:43.140  INFO 18412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 19:12:45.583  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 19:12:45.586  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 19:12:45.593  INFO 18412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 19:12:45.737  INFO 18412 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 19:12:45.749  INFO 18412 --- [main] com.yanda.Application                    : Started Application in 21.888 seconds (JVM running for 22.686)
2018-07-07 19:12:50.366  INFO 18412 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 19:12:50.366  INFO 18412 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 19:12:50.423  INFO 18412 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-07-07 19:12:52.009  INFO 18412 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-07 19:12:52.017  INFO 18412 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,ANqyUjSZHKE05IS9c26Rq0JEkeuZqLpa,1530961972,812,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9474ADCE0700975B8B15337FF22C8EFB99BDD6B256E1E31CFAA7FB2A69FBA7C6
2018-07-07 19:12:52.018  INFO 18412 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,ANqyUjSZHKE05IS9c26Rq0JEkeuZqLpa,1530961972,812,api.mch.weixin.qq.com,true,6000,8000,0,0,0,9474ADCE0700975B8B15337FF22C8EFB99BDD6B256E1E31CFAA7FB2A69FBA7C6
2018-07-07 19:12:52.018  INFO 18412 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:18.948  INFO 18412 --- [http-nio-8080-exec-8] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-07 19:17:19.164  INFO 18412 --- [http-nio-8080-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 19:17:20.564 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-07 19:17:20.610 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-07 19:17:20.656 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-07 19:17:20.660 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ?, ? 
2018-07-07 19:17:20.661 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer), 4(Integer)
2018-07-07 19:17:20.695 DEBUG 18412 --- [http-nio-8080-exec-8] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-07 19:17:27.352 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 19:17:27.353 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 19:17:27.380 DEBUG 18412 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 19:17:42.556  INFO 18412 --- [http-nio-8080-exec-2] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,a9KhKfbs6evCfZSTZBBFrbDmyyrvTNt9,1530962262,393,api.mch.weixin.qq.com,true,6000,8000,0,0,0,D1ACE8A68779EA36F6C35C7C51C3FEE7BA4F751FED9B364696A5D86BEB8CF32B
2018-07-07 19:17:42.556  INFO 18412 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,a9KhKfbs6evCfZSTZBBFrbDmyyrvTNt9,1530962262,393,api.mch.weixin.qq.com,true,6000,8000,0,0,0,D1ACE8A68779EA36F6C35C7C51C3FEE7BA4F751FED9B364696A5D86BEB8CF32B
2018-07-07 19:17:42.556  INFO 18412 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:46.888  INFO 18412 --- [http-nio-8080-exec-4] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,C4k7i38mZdGVYjAQOFerZudsOGnoy8vR,1530962266,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,688F7F08BE51D3796A7627336BE04F7C70649311126E72507D2C0D9C9D9AD5E1
2018-07-07 19:17:46.888  INFO 18412 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,C4k7i38mZdGVYjAQOFerZudsOGnoy8vR,1530962266,402,api.mch.weixin.qq.com,true,6000,8000,0,0,0,688F7F08BE51D3796A7627336BE04F7C70649311126E72507D2C0D9C9D9AD5E1
2018-07-07 19:17:46.888  INFO 18412 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 19:17:55.097  INFO 18412 --- [http-nio-8080-exec-6] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,JBiOML9HdcsJD5g50j5a4Od1FLi7gAxI,1530962275,338,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0F5E24CD1440BCC16BBCAF221DA02F7E63CBC3A3411C53690068573EE282409A
2018-07-07 19:17:55.097  INFO 18412 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,JBiOML9HdcsJD5g50j5a4Od1FLi7gAxI,1530962275,338,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0F5E24CD1440BCC16BBCAF221DA02F7E63CBC3A3411C53690068573EE282409A
2018-07-07 19:17:55.097  INFO 18412 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:30:12.567  INFO 18412 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-07 20:30:12]
2018-07-07 20:49:30.614  INFO 13848 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13848 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 20:49:30.624 DEBUG 13848 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 20:49:30.624  INFO 13848 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 20:49:31.115  INFO 13848 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:49:31 CST 2018]; root of context hierarchy
2018-07-07 20:49:33.352  INFO 13848 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 20:49:34.001  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.001  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.002  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.003  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.004  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.005  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.006  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:49:34.007  WARN 13848 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 20:49:34.051  WARN 13848 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 20:49:35.112  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$336545b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.590  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$4e44ddfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.635  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:35.639  INFO 13848 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$7c777bce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:49:41.577  INFO 13848 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 20:49:41.607  INFO 13848 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 20:49:41.609  INFO 13848 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 20:49:41.869  INFO 13848 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 20:49:41.870  INFO 13848 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10762 ms
2018-07-07 20:49:42.422  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 20:49:42.423  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 20:49:42.424  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 20:49:42.424  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 20:49:42.425  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 20:49:42.425  INFO 13848 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 20:49:45.560  INFO 13848 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 20:49:49.367  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:49:31 CST 2018]; root of context hierarchy
2018-07-07 20:49:49.540  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:49:49.541  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:49:49.542  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.543  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.544  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.548  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:49:49.549  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:49:49.549  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 20:49:49.550  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.551  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.554  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.555  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.556  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.556  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.557  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.557  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.564  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:49:49.565  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:49:49.566  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.567  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.568  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.569  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.569  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.572  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.573  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 20:49:49.574  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 20:49:49.579  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.579  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.580  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:49:49.580  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.581  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.582  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.582  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.583  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.584  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.585  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.585  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.586  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:49:49.590  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.591  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.591  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.592  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.593  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.593  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.594  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.594  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:49:49.595  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.595  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.600  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.601  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.602  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.602  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:49:49.603  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.603  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.604  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.607  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.608  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 20:49:49.608  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 20:49:49.609  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.611  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.611  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.612  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.616  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.617  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.618  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.619  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.619  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.620  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 20:49:49.620  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 20:49:49.621  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.628  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.628  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.631  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 20:49:49.632  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.633  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.633  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.634  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.635  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.636  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:49:49.636  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.639  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 20:49:49.640  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.641  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:49:49.641  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.642  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:49:49.642  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.643  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:49:49.644  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.644  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.649  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 20:49:49.649  INFO 13848 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:49:49.777  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:49.778  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:49.909  INFO 13848 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:49:52.500  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 20:49:52.504  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 20:49:52.516  INFO 13848 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 20:49:52.688  INFO 13848 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 20:49:52.703  INFO 13848 --- [main] com.yanda.Application                    : Started Application in 22.726 seconds (JVM running for 23.554)
2018-07-07 20:51:04.661  INFO 13848 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 20:51:04.663  INFO 13848 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 20:51:04.775  INFO 13848 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 111 ms
2018-07-07 20:52:45.031  INFO 19148 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 19148 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 20:52:45.036 DEBUG 19148 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 20:52:45.036  INFO 19148 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 20:52:45.294  INFO 19148 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:52:45 CST 2018]; root of context hierarchy
2018-07-07 20:52:47.484  INFO 19148 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 20:52:48.105  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.106  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.107  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.108  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.109  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 20:52:48.110  WARN 19148 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 20:52:48.147  WARN 19148 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 20:52:49.182  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4156dad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.562  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$5c36731e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.601  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:49.605  INFO 19148 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$8a6910f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 20:52:55.415  INFO 19148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 20:52:55.442  INFO 19148 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 20:52:55.444  INFO 19148 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 20:52:55.672  INFO 19148 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 20:52:55.673  INFO 19148 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10383 ms
2018-07-07 20:52:56.199  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 20:52:56.201  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 20:52:56.202  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 20:52:56.202  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 20:52:56.203  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 20:52:56.203  INFO 19148 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 20:52:58.850  INFO 19148 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 20:53:02.417  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 20:52:45 CST 2018]; root of context hierarchy
2018-07-07 20:53:02.590  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.592  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:53:02.593  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 20:53:02.593  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.595  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.599  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:53:02.600  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 20:53:02.601  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 20:53:02.602  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.602  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.606  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.607  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.607  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.608  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.608  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.609  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.616  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:53:02.617  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 20:53:02.617  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.618  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.618  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.619  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.619  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.621  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.622  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 20:53:02.623  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 20:53:02.626  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.627  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.628  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:53:02.629  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.629  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.630  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.631  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.632  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.633  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.634  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.634  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.635  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:53:02.639  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.640  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.640  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.641  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.641  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.642  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 20:53:02.643  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.644  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.648  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.649  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.650  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.651  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 20:53:02.652  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.654  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.655  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 20:53:02.655  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 20:53:02.656  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.658  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.658  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.659  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.662  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.663  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 20:53:02.664  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.664  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.665  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.666  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.667  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.667  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.669  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.670  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.671  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 20:53:02.671  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.672  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.674  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.675  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.675  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 20:53:02.678  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 20:53:02.679  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.679  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 20:53:02.680  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.681  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.682  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.682  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 20:53:02.687  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 20:53:02.688  INFO 19148 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 20:53:02.820  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:02.821  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:02.939  INFO 19148 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 20:53:05.332  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 20:53:05.336  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 20:53:05.349  INFO 19148 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 20:53:05.502  INFO 19148 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 20:53:05.509  INFO 19148 --- [main] com.yanda.Application                    : Started Application in 20.792 seconds (JVM running for 21.256)
2018-07-07 20:53:57.478  INFO 19148 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 20:53:57.479  INFO 19148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 20:53:57.563  INFO 19148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2018-07-07 20:54:03.875  INFO 19148 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 20:54:04.747 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 20:54:04.794 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 20:54:04.852 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 20:54:16.052  INFO 19148 --- [http-nio-8080-exec-8] wxpay java sdk                           : report worker num: 6
2018-07-07 20:54:16.077  INFO 19148 --- [http-nio-8080-exec-8] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,GwuWWgGKZ4nboDbODTL5Jap9gsPJOlEX,1530968056,1325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8ED37C56CEF692B11453864DF1A29A00884C8B51AB46DE73BB2021403989AAB8
2018-07-07 20:54:16.078  INFO 19148 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,GwuWWgGKZ4nboDbODTL5Jap9gsPJOlEX,1530968056,1325,api.mch.weixin.qq.com,true,6000,8000,0,0,0,8ED37C56CEF692B11453864DF1A29A00884C8B51AB46DE73BB2021403989AAB8
2018-07-07 20:54:16.078  INFO 19148 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:54:36.103 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-07 20:54:36.103 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-07 20:54:36.135 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-07 20:54:36.147 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-07 20:54:36.151 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 20:54:36.135(Timestamp), 2021-10-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-07 20:54:36.135(Timestamp), 2021-10-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-07 20:54:36.178 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-07 20:54:36.184 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 20:54:36.184 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-07 20:54:36.213 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 20:54:36.213 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 20:54:36.239 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-07 20:54:36.265 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-07 20:54:36.265 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 20:54:37.499  INFO 19148 --- [http-nio-8080-exec-2] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,KDA8lguXguVdr2iF9ReRDvx0rKMGJOsX,1530968077,1140,api.mch.weixin.qq.com,true,6000,8000,0,0,0,125A6F34A7BE6A960C80AFC71003765F921AC4B51241F7306A9FE3456E963EEA
2018-07-07 20:54:37.500  INFO 19148 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,KDA8lguXguVdr2iF9ReRDvx0rKMGJOsX,1530968077,1140,api.mch.weixin.qq.com,true,6000,8000,0,0,0,125A6F34A7BE6A960C80AFC71003765F921AC4B51241F7306A9FE3456E963EEA
2018-07-07 20:54:37.500  INFO 19148 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-07 20:54:37.506 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 20:54:37.506 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1433(Long), 38(Long)
2018-07-07 20:54:37.534 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-07 20:54:37.541 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-07 20:54:37.543 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1433(Long), 2018-07-07 20:54:37.375(Timestamp), 2000(Integer)
2018-07-07 20:54:37.571 DEBUG 19148 --- [http-nio-8080-exec-1] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-07 20:56:11.355 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:56:11.356 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:56:11.384 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:56:11.387 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:56:11.388 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:56:11.418 DEBUG 19148 --- [http-nio-8080-exec-6] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 20:56:35.679 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : ==>  Preparing: SELECT count(0) FROM t_user_history WHERE user_id = ? 
2018-07-07 20:56:35.680 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : ==> Parameters: 38(Long)
2018-07-07 20:56:35.706 DEBUG 19148 --- [http-nio-8080-exec-5] .m.U.findUserHistoryDetailByUserId_COUNT : <==      Total: 1
2018-07-07 20:56:35.708 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : ==>  Preparing: select * from t_user_history where user_id = ? order by watch_time DESC LIMIT ? 
2018-07-07 20:56:35.709 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : ==> Parameters: 38(Long), 10(Integer)
2018-07-07 20:56:35.737 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.737 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1433(Long)
2018-07-07 20:56:35.764 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.766 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.766 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1418(Long)
2018-07-07 20:56:35.794 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.796 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.797 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1(Long)
2018-07-07 20:56:35.824 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 0
2018-07-07 20:56:35.826 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.828 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1417(Long)
2018-07-07 20:56:35.856 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.857 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.857 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1381(Long)
2018-07-07 20:56:35.884 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.886 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.886 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1368(Long)
2018-07-07 20:56:35.914 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.914 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.915 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1354(Long)
2018-07-07 20:56:35.941 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.944 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.944 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1350(Long)
2018-07-07 20:56:35.971 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:35.972 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:35.973 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 1347(Long)
2018-07-07 20:56:35.999 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:36.001 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-07 20:56:36.002 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : ====> Parameters: 141(Long)
2018-07-07 20:56:36.029 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.UserCustomMapper.findEpisodesById  : <====      Total: 1
2018-07-07 20:56:36.029 DEBUG 19148 --- [http-nio-8080-exec-5] c.y.m.U.findUserHistoryDetailByUserId    : <==      Total: 10
2018-07-07 20:58:01.424 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-07 20:58:01.424 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 990(Long)
2018-07-07 20:58:01.452 DEBUG 19148 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-07 20:58:27.722 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-07 20:58:27.723 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1433(Long), 38(Long)
2018-07-07 20:58:27.751 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 20:58:27.752 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-07 20:58:27.754 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1433(Long), 2018-07-07 20:58:27.563(Timestamp), 24000(Integer), 490(Long)
2018-07-07 20:58:27.781 DEBUG 19148 --- [http-nio-8080-exec-10] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-07 20:58:35.875 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:58:35.876 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:58:35.902 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:58:35.904 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:58:35.905 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:58:35.931 DEBUG 19148 --- [http-nio-8080-exec-3] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 20:59:03.365 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_pay_info WHERE (user_id = ?) 
2018-07-07 20:59:03.366 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : ==> Parameters: 38(Integer)
2018-07-07 20:59:03.391 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample_COUNT          : <==      Total: 1
2018-07-07 20:59:03.393 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : ==>  Preparing: select pay_id, pay_amount, pay_time, pay_status, user_id, trade_no, pay_msg from t_pay_info WHERE ( user_id = ? ) order by pay_time desc LIMIT ? 
2018-07-07 20:59:03.393 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : ==> Parameters: 38(Integer), 10(Integer)
2018-07-07 20:59:03.420 DEBUG 19148 --- [http-nio-8080-exec-9] c.y.m.g.PayInfoMapper.selectByExample    : <==      Total: 2
2018-07-07 23:21:45.476  INFO 13852 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 13852 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-07 23:21:45.582 DEBUG 13852 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-07 23:21:45.583  INFO 13852 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-07 23:21:45.883  INFO 13852 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 23:21:45 CST 2018]; root of context hierarchy
2018-07-07 23:21:47.260  INFO 13852 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-07 23:21:47.853  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.853  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.854  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.855  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.856  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.857  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.858  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.858  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.859  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-07 23:21:47.860  WARN 13852 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-07 23:21:47.894  WARN 13852 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-07 23:21:48.891  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$99db5631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.286  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$b4baee7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.319  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:49.323  INFO 13852 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e2ed8c4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-07 23:21:55.169  INFO 13852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-07 23:21:55.197  INFO 13852 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-07 23:21:55.199  INFO 13852 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-07 23:21:55.436  INFO 13852 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-07 23:21:55.437  INFO 13852 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9558 ms
2018-07-07 23:21:55.917  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-07 23:21:55.918  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-07 23:21:55.919  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-07 23:21:55.919  INFO 13852 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-07 23:21:58.364  INFO 13852 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-07 23:22:01.824  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sat Jul 07 23:21:45 CST 2018]; root of context hierarchy
2018-07-07 23:22:01.973  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 23:22:01.975  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-07 23:22:01.975  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.976  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:01.976  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.979  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 23:22:01.979  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-07 23:22:01.980  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-07 23:22:01.981  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 23:22:01.982  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:01.984  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.985  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.985  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.986  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.986  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.987  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.990  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 23:22:01.991  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.992  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:01.993  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.993  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:01.995  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:01.996  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-07 23:22:01.996  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-07 23:22:01.999  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.000  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.000  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 23:22:02.001  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.002  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.002  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.003  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.003  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.004  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.004  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.005  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.006  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 23:22:02.008  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.009  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.010  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-07 23:22:02.011  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.011  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.012  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.012  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.013  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:02.020  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.021  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.022  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.023  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-07 23:22:02.023  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.024  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.026  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.026  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.027  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.027  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.029  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.030  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-07 23:22:02.030  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-07 23:22:02.031  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.033  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.034  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.035  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.041  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.042  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-07 23:22:02.043  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:02.043  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.044  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.044  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.045  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-07 23:22:02.045  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-07 23:22:02.046  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.047  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.048  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.048  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.051  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-07 23:22:02.052  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.053  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.054  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.055  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.056  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.057  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-07 23:22:02.057  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.059  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-07 23:22:02.060  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.061  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-07 23:22:02.061  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.062  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.062  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-07 23:22:02.063  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.063  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.064  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-07 23:22:02.068  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-07 23:22:02.068  INFO 13852 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-07 23:22:02.195  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:02.196  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:02.288  INFO 13852 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-07 23:22:04.501  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-07 23:22:04.504  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-07 23:22:04.514  INFO 13852 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-07 23:22:04.659  INFO 13852 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-07 23:22:04.671  INFO 13852 --- [main] com.yanda.Application                    : Started Application in 19.505 seconds (JVM running for 20.068)
2018-07-07 23:26:06.614  INFO 13852 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-07 23:26:06.614  INFO 13852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-07 23:26:06.658  INFO 13852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-07 23:26:06.921  INFO 13852 --- [http-nio-8080-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-07 23:26:07.496 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-07 23:26:07.548 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: admin(String), 123456(String), admin(String), 123456(String)
2018-07-07 23:26:07.608 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-07 23:26:07.614 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-07 23:26:07.615 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 2(Integer)
2018-07-07 23:26:07.642 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-07 23:26:07.643 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : ====> Parameters: 2(Integer)
2018-07-07 23:26:07.666 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-07 23:26:07.667 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-07 23:26:07.668 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 2(Integer)
2018-07-07 23:26:07.694 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserRoleByUserId             : <====      Total: 1
2018-07-07 23:26:07.694 DEBUG 13852 --- [http-nio-8080-exec-1] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-07 23:26:08.824 ERROR 13852 --- [http-nio-8080-exec-4] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529634480855\1529634480855_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.877 ERROR 13852 --- [http-nio-8080-exec-3] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1520337622268\1520337622268_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.895 ERROR 13852 --- [http-nio-8080-exec-5] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659188652\1529659188652_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.955 ERROR 13852 --- [http-nio-8080-exec-6] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529659206434\1529659206434_80.png (系统找不到指定的路径。)
2018-07-07 23:26:08.965 ERROR 13852 --- [http-nio-8080-exec-7] c.yanda.controller.AttachmentController  : 下载附件异常:E:\resources\images\1529891655684\1529891655684_80.png (系统找不到指定的路径。)
2018-07-07 23:26:12.386  INFO 13852 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:26:12.446 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:26:12.447 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:26:12.470 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:26:12.472 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:26:12.473 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:26:12.501 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:26:49.671  INFO 13852 --- [http-nio-8080-exec-9] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:26:49.677 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:26:49.678 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:26:49.702 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:26:49.705 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:26:49.707 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:26:49.735 DEBUG 13852 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:26:51.550 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:26:51.550 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:26:51.576 DEBUG 13852 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 2
2018-07-07 23:33:33.888 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:33:33.889 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:33:33.915 DEBUG 13852 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-07 23:33:40.487 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-07 23:33:40.489 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-07 23:33:40.516 DEBUG 13852 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-07 23:50:38.747  INFO 13852 --- [http-nio-8080-exec-2] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:50.342  INFO 13852 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:54.386  INFO 13852 --- [http-nio-8080-exec-5] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-07 23:50:54.726 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:50:54.727 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:50:54.758 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:50:54.760 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:50:54.760 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:50:54.792 DEBUG 13852 --- [http-nio-8080-exec-5] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:50:57.896 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:50:57.897 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:50:57.926 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:50:57.929 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:50:57.930 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:50:57.962 DEBUG 13852 --- [http-nio-8080-exec-2] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-07 23:51:09.488 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-07 23:51:09.492 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-07 23:51:09.521 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-07 23:51:09.528 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-07 23:51:09.531 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-07 23:51:09.558 DEBUG 13852 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 00:00:00.002  INFO 13852 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-08 00:00:00]
2018-07-08 09:27:11.159  INFO 592 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 592 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:27:11.163 DEBUG 592 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:27:11.164  INFO 592 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:27:11.583  INFO 592 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:27:11 CST 2018]; root of context hierarchy
2018-07-08 09:27:14.652  INFO 592 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.970  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.971  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:27:14.972  WARN 592 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:27:14.992  WARN 592 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:27:15.494  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$857e6b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.664  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$a05e03e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.684  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:15.688  INFO 592 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ce90a1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:27:21.073  INFO 592 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:27:21.085  INFO 592 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:27:21.086  INFO 592 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:27:21.202  INFO 592 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:27:21.203  INFO 592 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9625 ms
2018-07-08 09:27:21.405  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:27:21.406  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:27:21.407  INFO 592 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:27:23.134  INFO 592 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:27:25.913  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:27:11 CST 2018]; root of context hierarchy
2018-07-08 09:27:26.045  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:27:26.046  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:27:26.047  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.049  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:27:26.050  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:27:26.050  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:27:26.051  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.052  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.054  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.055  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.056  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.057  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.063  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:27:26.063  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:27:26.064  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.064  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.065  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.067  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:27:26.068  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:27:26.068  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.071  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.071  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.072  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:27:26.072  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.073  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.074  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.075  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.075  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.076  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.077  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:27:26.079  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.079  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.080  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.080  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.081  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.082  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.088  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.088  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.089  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:27:26.092  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.092  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.093  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.093  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:27:26.096  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:27:26.097  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.099  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.099  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.100  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.104  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.104  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.105  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.106  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:27:26.107  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:27:26.110  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.111  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.112  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.113  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.114  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:27:26.114  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.117  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:27:26.118  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:27:26.119  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.120  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.120  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:27:26.124  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:27:26.125  INFO 592 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:27:26.202  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:26.203  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:26.272  INFO 592 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:27:27.666  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:27:27.700  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:27:27.707  INFO 592 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:27:27.820  INFO 592 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:27:27.828  INFO 592 --- [main] com.yanda.Application                    : Started Application in 16.982 seconds (JVM running for 17.418)
2018-07-08 09:27:59.808  INFO 592 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:27:59.808  INFO 592 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:27:59.842  INFO 592 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-07-08 09:35:15.131  INFO 11268 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 11268 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:35:15.133 DEBUG 11268 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:35:15.133  INFO 11268 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:35:15.350  INFO 11268 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:35:15 CST 2018]; root of context hierarchy
2018-07-08 09:35:16.913  INFO 11268 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:35:17.438  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.438  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.439  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.440  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.441  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.442  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.443  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:35:17.444  WARN 11268 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:35:17.472  WARN 11268 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:35:18.292  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e34a172e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.639  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$fe29af78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.667  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:18.670  INFO 11268 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$2c5c4d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:35:24.335  INFO 11268 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:35:24.358  INFO 11268 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:35:24.361  INFO 11268 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:35:24.569  INFO 11268 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:35:24.570  INFO 11268 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9223 ms
2018-07-08 09:35:24.978  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:35:24.979  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:35:24.980  INFO 11268 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:35:27.004  INFO 11268 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:35:29.810  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d740a0f: startup date [Sun Jul 08 09:35:15 CST 2018]; root of context hierarchy
2018-07-08 09:35:29.931  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:35:29.933  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:29.934  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.937  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:35:29.938  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:35:29.938  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:35:29.939  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.939  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:29.942  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.943  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.943  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.944  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.944  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.945  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.948  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.949  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:29.950  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.951  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:35:29.952  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:35:29.952  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.955  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:35:29.956  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.957  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.958  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.958  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.959  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:35:29.962  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.962  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.963  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.964  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.965  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:35:29.969  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.969  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:35:29.970  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.972  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.973  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.973  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.974  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.975  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.976  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:35:29.976  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:35:29.977  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.978  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.979  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.979  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.982  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.982  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:35:29.983  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.983  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.984  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.985  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.985  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:29.986  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.989  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.990  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.991  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:35:29.992  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.993  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.993  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:35:29.996  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:35:29.997  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.997  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.998  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:35:29.999  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:29.999  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:35:30.002  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:35:30.003  INFO 11268 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:35:30.082  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:30.082  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:30.161  INFO 11268 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:35:31.555  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:35:31.559  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:35:31.568  INFO 11268 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:35:31.684  INFO 11268 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:35:31.691  INFO 11268 --- [main] com.yanda.Application                    : Started Application in 16.83 seconds (JVM running for 17.128)
2018-07-08 09:36:06.105  INFO 11268 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:36:06.105  INFO 11268 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:36:06.153  INFO 11268 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-08 09:36:20.619  INFO 11268 --- [http-nio-8080-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 09:36:21.174 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, create_time = ?, product_order = ? 
2018-07-08 09:36:21.206 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==> Parameters: 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 150(BigDecimal), 2018-07-08 09:36:20.245(Timestamp), 3(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 150(BigDecimal), 2018-07-08 09:36:20.245(Timestamp), 3(Integer)
2018-07-08 09:36:21.232 DEBUG 11268 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 09:36:21.301 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-08 09:36:21.301 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 09:36:21.344 DEBUG 11268 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 09:38:20.522 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 09:38:20.526 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==> Parameters: 两月卡(String), 2(Integer), 2(Integer), 50(BigDecimal), 120(BigDecimal), vipCard(String), 2018-07-08 09:38:20.243(Timestamp), 4(Integer), 两月卡(String), 2(Integer), 2(Integer), 50(BigDecimal), 120(BigDecimal), vipCard(String), 2018-07-08 09:38:20.243(Timestamp), 4(Integer)
2018-07-08 09:38:20.552 DEBUG 11268 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 09:38:20.629 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) 
2018-07-08 09:38:20.629 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 09:38:20.657 DEBUG 11268 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 09:41:31.228  INFO 7396 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7396 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 09:41:31.234 DEBUG 7396 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 09:41:31.234  INFO 7396 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 09:41:31.467  INFO 7396 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 09:41:31 CST 2018]; root of context hierarchy
2018-07-08 09:41:32.718  INFO 7396 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.283  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.284  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.285  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.286  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.287  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.288  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.289  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 09:41:33.289  WARN 7396 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 09:41:33.328  WARN 7396 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 09:41:34.264  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$613bbced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.674  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$7c1b5537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.702  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:34.706  INFO 7396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$aa4df30b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 09:41:40.349  INFO 7396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 09:41:40.363  INFO 7396 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 09:41:40.364  INFO 7396 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 09:41:40.501  INFO 7396 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 09:41:40.501  INFO 7396 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9038 ms
2018-07-08 09:41:40.775  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 09:41:40.776  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 09:41:40.777  INFO 7396 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 09:41:42.491  INFO 7396 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 09:41:45.975  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 09:41:31 CST 2018]; root of context hierarchy
2018-07-08 09:41:46.127  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.129  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.130  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:41:46.131  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.132  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 09:41:46.134  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:41:46.134  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 09:41:46.135  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 09:41:46.135  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.136  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.138  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.139  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.140  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.141  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.145  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:41:46.145  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 09:41:46.146  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.146  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.147  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.149  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.149  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 09:41:46.150  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 09:41:46.154  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.154  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.155  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:41:46.156  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.156  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.157  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.157  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.158  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.160  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.160  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.161  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.162  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:41:46.164  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.165  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 09:41:46.166  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.167  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.167  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.168  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.169  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.169  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.173  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.174  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.175  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.176  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.178  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.179  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.181  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.182  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 09:41:46.183  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 09:41:46.184  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.185  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.186  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.187  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.192  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.193  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 09:41:46.194  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.194  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 09:41:46.195  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.196  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 09:41:46.196  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.198  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.199  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.199  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.200  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.200  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.202  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.203  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.204  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.205  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.206  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 09:41:46.208  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.208  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.209  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 09:41:46.211  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 09:41:46.212  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.212  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.213  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 09:41:46.214  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.214  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 09:41:46.215  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.219  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 09:41:46.220  INFO 7396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 09:41:46.343  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:46.343  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:46.453  INFO 7396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 09:41:48.675  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 09:41:48.678  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 09:41:48.687  INFO 7396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 09:41:48.830  INFO 7396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 09:41:48.838  INFO 7396 --- [main] com.yanda.Application                    : Started Application in 17.899 seconds (JVM running for 18.392)
2018-07-08 09:49:51.277  INFO 7396 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 09:49:51.277  INFO 7396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 09:49:51.310  INFO 7396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-07-08 10:01:32.170  INFO 7396 --- [http-nio-8080-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 10:01:32.798 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:01:32.848 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:01:32.898 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:01:33.050  INFO 7396 --- [http-nio-8080-exec-10] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:01:33.051 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:01:33.052 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1434(Long)
2018-07-08 10:01:33.084 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:01:33.084 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====> Parameters: 3997(Long)
2018-07-08 10:01:33.113 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:01:33.116 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:08:36.125 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:08:36.127 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:08:36.156 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:10:00.631 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:10:00.631 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:10:00.657 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:19:26.281 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:19:26.282 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:19:26.313 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:19:44.171 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:19:44.172 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:19:44.200 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:21:17.597 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:21:17.597 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:21:17.628 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:21:58.649 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 10:21:58.650 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1434(Long), 38(Long)
2018-07-08 10:21:58.677 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-08 10:21:58.682 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-08 10:21:58.683 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1434(Long), 2018-07-08 10:21:58.465(Timestamp), 0(Integer)
2018-07-08 10:21:58.724 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-08 10:28:12.351 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:28:12.353 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:28:12.376 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:31:22.592  INFO 7396 --- [http-nio-8080-exec-1] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:31:22.664 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:31:22.664 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:31:22.690 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:31:22.692 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:31:22.693 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:31:22.717 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:31:28.520 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:31:28.521 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:31:28.543 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:08.912 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:32:08.912 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:32:08.933 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:52.663  INFO 7396 --- [http-nio-8080-exec-9] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:32:52.671 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:32:52.672 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:32:52.695 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:32:52.697 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:32:52.699 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:32:52.726 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:32:56.726 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:32:56.728 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 991(Long)
2018-07-08 10:32:56.755 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:32:56.902  INFO 7396 --- [http-nio-8080-exec-1] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:32:56.902 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:32:56.903 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1434(Long)
2018-07-08 10:32:56.925 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:32:56.925 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : ====> Parameters: 3997(Long)
2018-07-08 10:32:56.947 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:32:56.948 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:33:47.580 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:47.581 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 6(Integer)
2018-07-08 10:33:47.603 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:47.640 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:47.641 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:47.663 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:33:50.278 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:50.279 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 1(Integer)
2018-07-08 10:33:50.302 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:50.348 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:50.349 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:50.372 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:33:55.719 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:33:55.721 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 4(Integer)
2018-07-08 10:33:55.754 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:33:55.807 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:33:55.808 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:33:55.833 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:34:01.043  INFO 7396 --- [http-nio-8080-exec-2] com.yanda.service.impl.MovieServiceImpl  : 根据分页数和分类ID查询的视频数据列表将从数据库中获取...
2018-07-08 10:34:01.050 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_mv_info WHERE (episode_count >= ? AND is_public = ?) 
2018-07-08 10:34:01.051 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : ==> Parameters: 1(Integer), true(Boolean)
2018-07-08 10:34:01.073 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.M.selectByExample_COUNT          : <==      Total: 1
2018-07-08 10:34:01.074 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==>  Preparing: select mv_id, mv_name, mv_intro, create_time, update_time, classify_id, classify_name, img_appendix_id, mv_appendix_id, episode_count, mv_path, is_public, public_time, vip_type from t_mv_info WHERE ( episode_count >= ? and is_public = ? ) order by update_time desc LIMIT ? 
2018-07-08 10:34:01.075 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : ==> Parameters: 1(Integer), true(Boolean), 4(Integer)
2018-07-08 10:34:01.100 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.MovieInfoMapper.selectByExample  : <==      Total: 4
2018-07-08 10:34:04.982 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:34:04.983 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:34:05.005 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:34:05.130  INFO 7396 --- [http-nio-8080-exec-10] c.yanda.service.impl.EpisodeServiceImpl  : 根据视频集ID和集数查询的视频集将从数据库中获取...
2018-07-08 10:34:05.131 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==>  Preparing: select * from t_mv_episode where episode_id = ? 
2018-07-08 10:34:05.132 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : ==> Parameters: 1435(Long)
2018-07-08 10:34:05.156 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====>  Preparing: select * from t_attachment_info where appendix_id = ? 
2018-07-08 10:34:05.156 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : ====> Parameters: 4000(Long)
2018-07-08 10:34:05.179 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findAttachmentById               : <====      Total: 1
2018-07-08 10:34:05.180 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.M.findEpisodeDetailInfoById        : <==      Total: 1
2018-07-08 10:35:11.170 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:35:11.170 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:35:11.193 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:35:31.449 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:35:31.452 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : ==> Parameters: 11(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:35:31.161(Timestamp), 1(Integer), 11(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:35:31.161(Timestamp), 1(Integer)
2018-07-08 10:35:31.479 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:35:31.531 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:35:31.532 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:35:31.555 DEBUG 7396 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:35:41.484 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:35:41.484 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:35:41.507 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:39:19.454 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:39:19.456 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 7(Integer)
2018-07-08 10:39:19.479 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:39:19.528 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:39:19.529 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:39:19.550 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:39:46.390 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:39:46.390 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:39:46.412 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:40:27.566 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:27.567 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : ==> Parameters: 1(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:40:27.306(Timestamp), 1(Integer), 1(String), 1(Integer), 1(Integer), 1(BigDecimal), 1(BigDecimal), vipCard(String), 2018-07-08 10:40:27.306(Timestamp), 1(Integer)
2018-07-08 10:40:27.591 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:27.650 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:27.651 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:27.675 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:40:33.857 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:33.861 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : ==> Parameters: 2(String), 1(Integer), 2(Integer), 2(BigDecimal), 2(BigDecimal), vipCard(String), 2018-07-08 10:40:33.59(Timestamp), 2(Integer), 2(String), 1(Integer), 2(Integer), 2(BigDecimal), 2(BigDecimal), vipCard(String), 2018-07-08 10:40:33.59(Timestamp), 2(Integer)
2018-07-08 10:40:33.892 DEBUG 7396 --- [http-nio-8080-exec-2] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:33.945 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:33.946 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:33.968 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:40:39.437 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:39.439 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : ==> Parameters: 3(String), 1(Integer), 3(Integer), 3(BigDecimal), 3(BigDecimal), vipCard(String), 2018-07-08 10:40:39.174(Timestamp), 3(Integer), 3(String), 1(Integer), 3(Integer), 3(BigDecimal), 3(BigDecimal), vipCard(String), 2018-07-08 10:40:39.174(Timestamp), 3(Integer)
2018-07-08 10:40:39.462 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:39.506 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:39.506 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:39.528 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 10:40:46.556 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 10:40:46.561 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : ==> Parameters: 4(String), 1(Integer), 4(Integer), 4(BigDecimal), 4(BigDecimal), vipCard(String), 2018-07-08 10:40:46.286(Timestamp), 4(Integer), 4(String), 1(Integer), 4(Integer), 4(BigDecimal), 4(BigDecimal), vipCard(String), 2018-07-08 10:40:46.286(Timestamp), 4(Integer)
2018-07-08 10:40:46.584 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.upsertSelective                : <==    Updates: 1
2018-07-08 10:40:46.636 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:40:46.637 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:40:46.659 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : <==      Total: 7
2018-07-08 10:40:55.195 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:40:55.196 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:40:55.217 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 10:41:47.631 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:47.631 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 8(Integer)
2018-07-08 10:41:47.654 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:47.686 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:47.686 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:47.708 DEBUG 7396 --- [http-nio-8080-exec-8] c.y.m.g.P.selectByExample                : <==      Total: 6
2018-07-08 10:41:49.674 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:49.674 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 9(Integer)
2018-07-08 10:41:49.698 DEBUG 7396 --- [http-nio-8080-exec-7] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:49.747 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:49.748 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:49.770 DEBUG 7396 --- [http-nio-8080-exec-5] c.y.m.g.P.selectByExample                : <==      Total: 5
2018-07-08 10:41:56.628 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:41:56.628 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 10(Integer)
2018-07-08 10:41:56.650 DEBUG 7396 --- [http-nio-8080-exec-1] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:41:56.693 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:41:56.693 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:41:56.715 DEBUG 7396 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByExample                : <==      Total: 4
2018-07-08 10:42:00.411 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_product_info WHERE id = ? 
2018-07-08 10:42:00.412 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : ==> Parameters: 11(Integer)
2018-07-08 10:42:00.435 DEBUG 7396 --- [http-nio-8080-exec-4] c.y.m.g.P.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 10:42:00.476 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 10:42:00.477 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 10:42:00.500 DEBUG 7396 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 10:42:15.778 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 10:42:15.779 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 992(Long)
2018-07-08 10:42:15.801 DEBUG 7396 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:46:42.576  INFO 17136 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 17136 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 11:46:42.587 DEBUG 17136 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 11:46:42.587  INFO 17136 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 11:46:43.030  INFO 17136 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 11:46:43 CST 2018]; root of context hierarchy
2018-07-08 11:46:45.115  INFO 17136 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 11:46:45.713  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.714  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.715  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.716  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.717  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.718  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.719  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.720  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 11:46:45.721  WARN 17136 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 11:46:45.756  WARN 17136 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 11:46:46.949  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$553ba73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.354  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$203352bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.386  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:47.390  INFO 17136 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$4e65f091] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 11:46:53.079  INFO 17136 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 11:46:53.095  INFO 17136 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 11:46:53.096  INFO 17136 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 11:46:53.231  INFO 17136 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 11:46:53.232  INFO 17136 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10209 ms
2018-07-08 11:46:53.615  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 11:46:53.616  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 11:46:53.617  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 11:46:53.617  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 11:46:53.618  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 11:46:53.618  INFO 17136 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 11:46:56.786  INFO 17136 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 11:47:00.495  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 11:46:43 CST 2018]; root of context hierarchy
2018-07-08 11:47:00.685  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 11:47:00.687  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.688  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 11:47:00.689  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.690  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.693  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 11:47:00.694  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 11:47:00.695  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 11:47:00.696  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.697  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.699  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.701  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.702  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.703  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.704  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.704  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.708  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 11:47:00.709  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 11:47:00.710  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.710  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.711  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.711  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.712  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.714  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 11:47:00.714  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 11:47:00.716  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.720  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.720  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.721  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 11:47:00.722  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.723  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.724  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.724  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.725  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.726  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.727  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.727  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.729  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 11:47:00.732  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.733  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.735  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.736  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.737  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 11:47:00.737  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.738  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.738  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.739  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.740  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.746  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.746  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.747  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.747  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 11:47:00.748  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.748  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.751  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.752  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.753  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.754  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.756  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.756  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 11:47:00.757  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 11:47:00.758  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.759  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.759  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.760  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.764  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.764  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 11:47:00.765  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.766  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.767  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.767  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.768  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.768  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.771  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 11:47:00.771  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.772  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.772  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.773  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.774  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.775  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 11:47:00.775  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.777  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 11:47:00.778  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.778  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 11:47:00.779  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 11:47:00.780  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 11:47:00.781  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 11:47:00.782  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.786  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 11:47:00.787  INFO 17136 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 11:47:00.908  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:00.908  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:01.021  INFO 17136 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 11:47:03.418  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 11:47:03.422  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 11:47:03.431  INFO 17136 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 11:47:03.576  INFO 17136 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 11:47:03.587  INFO 17136 --- [main] com.yanda.Application                    : Started Application in 21.318 seconds (JVM running for 21.904)
2018-07-08 11:47:12.984  INFO 17136 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 11:47:12.985  INFO 17136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 11:47:13.069  INFO 17136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2018-07-08 11:47:18.881  INFO 17136 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 11:47:19.604 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:47:19.654 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:47:19.703 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:48:24.773 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:48:24.773 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:48:24.799 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:58:40.860 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:58:40.861 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:58:40.890 DEBUG 17136 --- [http-nio-8080-exec-4] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:58:49.231 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:58:49.232 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:58:49.255 DEBUG 17136 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 11:59:51.935 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 11:59:51.936 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 11:59:51.960 DEBUG 17136 --- [http-nio-8080-exec-1] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:00:00.002  INFO 17136 --- [threadPoolTaskScheduler-1] c.y.scheduling.KeepaliveSchedulerTask    : 执行定时任务，保持数据库连接不断开，当前时间=[2018-07-08 12:00:00]
2018-07-08 12:00:58.606 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:00:58.606 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:00:58.629 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:02:31.574 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:02:31.575 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:02:31.599 DEBUG 17136 --- [http-nio-8080-exec-9] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:02:39.719 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:02:39.719 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:02:39.742 DEBUG 17136 --- [http-nio-8080-exec-6] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:02:40.695  INFO 17136 --- [http-nio-8080-exec-6] wxpay java sdk                           : report worker num: 6
2018-07-08 12:02:40.698  INFO 17136 --- [http-nio-8080-exec-6] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6kpdOAn67ATEbg0rytybeWjaoIrsg3UL,1531022560,656,api.mch.weixin.qq.com,true,6000,8000,0,0,0,214AA326E6269CC373D43BAADA6A5B441C240A1E227F871BD3CEDD5DE96A399D
2018-07-08 12:02:40.698  INFO 17136 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6kpdOAn67ATEbg0rytybeWjaoIrsg3UL,1531022560,656,api.mch.weixin.qq.com,true,6000,8000,0,0,0,214AA326E6269CC373D43BAADA6A5B441C240A1E227F871BD3CEDD5DE96A399D
2018-07-08 12:02:40.699  INFO 17136 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:03:47.515 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update id = ?, name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 12:03:47.522 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==> Parameters: 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 0.01(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer), 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 120(BigDecimal), 0.01(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer)
2018-07-08 12:03:47.547 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : <==    Updates: 2
2018-07-08 12:03:47.600 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 12:03:47.603 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 12:03:47.628 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 12:04:02.318 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:04:02.320 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:04:02.345 DEBUG 17136 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:04:24.760 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==>  Preparing: insert into t_product_info ( id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update id = ?, name = ?, time_unit = ?, time_num = ?, current_price = ?, old_price = ?, product = ?, create_time = ?, product_order = ? 
2018-07-08 12:04:24.764 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : ==> Parameters: 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 0.01(BigDecimal), 150(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer), 5(Integer), 半年卡(String), 2(Integer), 6(Integer), 0.01(BigDecimal), 150(BigDecimal), vipCard(String), 2018-07-08 09:36:20.0(Timestamp), 3(Integer)
2018-07-08 12:04:24.789 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.upsertSelective                : <==    Updates: 2
2018-07-08 12:04:24.842 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==>  Preparing: select id, name, time_unit, time_num, current_price, old_price, product, create_time, product_order from t_product_info WHERE ( product = ? ) order by product_order desc 
2018-07-08 12:04:24.844 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : ==> Parameters: vipCard(String)
2018-07-08 12:04:24.869 DEBUG 17136 --- [http-nio-8080-exec-3] c.y.m.g.P.selectByExample                : <==      Total: 3
2018-07-08 12:04:35.019 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:04:35.020 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:04:35.045 DEBUG 17136 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:04:42.267 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:04:42.268 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:04:42.294 DEBUG 17136 --- [http-nio-8080-exec-10] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:04:42.641  INFO 17136 --- [http-nio-8080-exec-10] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,iTzFMDVu9sN8oY08n8HbGINuiyE3WAfw,1531022682,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,F29B3DC5CEB596720C683438C29BB23749BB71BAF3F3FCBFEA55A979DB659029
2018-07-08 12:04:42.641  INFO 17136 --- [pool-6-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,iTzFMDVu9sN8oY08n8HbGINuiyE3WAfw,1531022682,289,api.mch.weixin.qq.com,true,6000,8000,0,0,0,F29B3DC5CEB596720C683438C29BB23749BB71BAF3F3FCBFEA55A979DB659029
2018-07-08 12:04:42.642  INFO 17136 --- [pool-6-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:06:05.284  INFO 17136 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Azueh32gpk9jnSH95gLU73UIY96ZjyVO,1531022765,259,api.mch.weixin.qq.com,true,6000,8000,0,0,0,CAEB4B6EB5851FAFB76217B9A1638A62012BE03A941BB1B2528D6BE7FAE548F1
2018-07-08 12:06:05.285  INFO 17136 --- [pool-5-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Azueh32gpk9jnSH95gLU73UIY96ZjyVO,1531022765,259,api.mch.weixin.qq.com,true,6000,8000,0,0,0,CAEB4B6EB5851FAFB76217B9A1638A62012BE03A941BB1B2528D6BE7FAE548F1
2018-07-08 12:06:05.286  INFO 17136 --- [pool-5-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:08:12.619  INFO 18672 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 18672 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:08:12.625 DEBUG 18672 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:08:12.625  INFO 18672 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:08:12.885  INFO 18672 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:08:12 CST 2018]; root of context hierarchy
2018-07-08 12:08:14.306  INFO 18672 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:08:14.917  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.918  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.919  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.920  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.920  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.921  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.921  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.922  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.922  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.923  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:08:14.924  WARN 18672 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:08:14.958  WARN 18672 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:08:16.090  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$764bfacb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.490  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$912b9315] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.525  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:16.558  INFO 18672 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bf5e30e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:08:22.411  INFO 18672 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:08:22.438  INFO 18672 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:08:22.440  INFO 18672 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:08:22.682  INFO 18672 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:08:22.683  INFO 18672 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9803 ms
2018-07-08 12:08:23.169  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:08:23.170  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:08:23.171  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:08:23.171  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:08:23.172  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:08:23.172  INFO 18672 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:08:25.753  INFO 18672 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:08:29.305  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:08:12 CST 2018]; root of context hierarchy
2018-07-08 12:08:29.485  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.487  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:08:29.488  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.489  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:08:29.489  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.492  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:08:29.493  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:08:29.494  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:08:29.494  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.495  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.500  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.501  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.501  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.502  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.502  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.503  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.508  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:08:29.509  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:08:29.509  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.510  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.511  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.513  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.513  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:08:29.514  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:08:29.519  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.520  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.521  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:08:29.522  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.522  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.523  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.523  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.524  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.525  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.525  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.526  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.526  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:08:29.529  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.529  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.530  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.531  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:08:29.531  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.533  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.534  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.534  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.535  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.536  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.540  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.541  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.542  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.544  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.544  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.545  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:08:29.547  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.548  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.548  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.549  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.551  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.551  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:08:29.552  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:08:29.552  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.553  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.554  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.554  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.557  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.558  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.559  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.559  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.560  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.560  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.561  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:08:29.561  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.562  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.562  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:08:29.564  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:08:29.565  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.566  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.566  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.567  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.569  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.569  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.570  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:08:29.573  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:08:29.574  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.575  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:08:29.575  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:08:29.576  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:08:29.577  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.578  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:08:29.581  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:08:29.581  INFO 18672 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:08:29.699  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:29.700  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:29.815  INFO 18672 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:08:32.094  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:08:32.098  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:08:32.108  INFO 18672 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:08:32.254  INFO 18672 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:08:32.262  INFO 18672 --- [main] com.yanda.Application                    : Started Application in 19.949 seconds (JVM running for 20.446)
2018-07-08 12:08:56.838  INFO 18672 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:08:56.838  INFO 18672 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:08:56.912  INFO 18672 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-07-08 12:09:03.202  INFO 18672 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:09:03.951 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:09:03.998 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:09:04.041 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:09:34.235  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:09:34.244  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,WT2GteYoJvOFWjxez2NVsEC4mSz2FZAz,1531022974,739,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4586175E700CE5AB39848F6D78A3AE60F83410CBA52992D18631431A55A35C14
2018-07-08 12:09:34.245  INFO 18672 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,WT2GteYoJvOFWjxez2NVsEC4mSz2FZAz,1531022974,739,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4586175E700CE5AB39848F6D78A3AE60F83410CBA52992D18631431A55A35C14
2018-07-08 12:09:34.245  INFO 18672 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:10:33.012 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:10:33.012 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:10:33.035 DEBUG 18672 --- [http-nio-8080-exec-6] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:10:55.728  INFO 18672 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,HeIniTLzTC4Y7pv4QfWekc7Ke7QOU3zh,1531023055,276,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6213F5C6F62C18D395F744ED0285292210DB96CE2C3C8303AF405E6837B57583
2018-07-08 12:10:55.729  INFO 18672 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,HeIniTLzTC4Y7pv4QfWekc7Ke7QOU3zh,1531023055,276,api.mch.weixin.qq.com,true,6000,8000,0,0,0,6213F5C6F62C18D395F744ED0285292210DB96CE2C3C8303AF405E6837B57583
2018-07-08 12:10:55.729  INFO 18672 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:12:22.899 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:12:22.900 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:12:22.925 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:12:28.642  INFO 18672 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,Cd03UT0ExRqfSIpwjeMemNfsva1wN5IB,1531023148,384,api.mch.weixin.qq.com,true,6000,8000,0,0,0,A21336A8C0EE9910E14C0FC0FDBC3F6AD473F359EC4B9BC26428A48DA23200E1
2018-07-08 12:12:28.643  INFO 18672 --- [pool-4-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,Cd03UT0ExRqfSIpwjeMemNfsva1wN5IB,1531023148,384,api.mch.weixin.qq.com,true,6000,8000,0,0,0,A21336A8C0EE9910E14C0FC0FDBC3F6AD473F359EC4B9BC26428A48DA23200E1
2018-07-08 12:12:28.644  INFO 18672 --- [pool-4-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:12:45.353 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:12:45.353 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:12:45.378 DEBUG 18672 --- [http-nio-8080-exec-4] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:12:46.416 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:12:46.416 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:12:46.439 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.selectOneByExample             : <==      Total: 0
2018-07-08 12:12:46.442 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : ==>  Preparing: INSERT INTO t_user_history ( user_id,episode_id,watch_time,progress ) VALUES( ?,?,?,? ) 
2018-07-08 12:12:46.443 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:12:46.295(Timestamp), 0(Integer)
2018-07-08 12:12:46.468 DEBUG 18672 --- [http-nio-8080-exec-5] c.y.m.g.U.insertSelective                : <==    Updates: 1
2018-07-08 12:14:44.197 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:14:44.197 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:14:44.221 DEBUG 18672 --- [http-nio-8080-exec-3] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:14:48.728  INFO 18672 --- [http-nio-8080-exec-7] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,07hngWikps5UhRiOvvbcKBLGNlGHn83T,1531023288,422,api.mch.weixin.qq.com,true,6000,8000,0,0,0,B5AFA52941E4976AB4D34AA660508BB3B9CCACC3561EDC7F9CB41E82B9E64DE5
2018-07-08 12:14:48.729  INFO 18672 --- [pool-3-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,07hngWikps5UhRiOvvbcKBLGNlGHn83T,1531023288,422,api.mch.weixin.qq.com,true,6000,8000,0,0,0,B5AFA52941E4976AB4D34AA660508BB3B9CCACC3561EDC7F9CB41E82B9E64DE5
2018-07-08 12:14:48.729  INFO 18672 --- [pool-3-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:15:09.705 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:15:09.710 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:15:09.761 DEBUG 18672 --- [http-nio-8080-exec-8] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:18:17.795  INFO 7492 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7492 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:18:17.801 DEBUG 7492 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:18:17.801  INFO 7492 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:18:18.044  INFO 7492 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:18:18 CST 2018]; root of context hierarchy
2018-07-08 12:18:20.168  INFO 7492 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:18:20.745  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.746  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.747  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.748  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.749  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.750  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.751  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:18:20.752  WARN 7492 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:18:20.789  WARN 7492 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:18:21.777  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$28e6b7f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.157  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$43c65042] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.195  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:22.198  INFO 7492 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$71f8ee16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:18:27.894  INFO 7492 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:18:27.912  INFO 7492 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:18:27.913  INFO 7492 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:18:28.049  INFO 7492 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:18:28.050  INFO 7492 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10010 ms
2018-07-08 12:18:28.348  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:18:28.348  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:18:28.349  INFO 7492 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:18:30.422  INFO 7492 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:18:33.884  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:18:18 CST 2018]; root of context hierarchy
2018-07-08 12:18:34.053  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.055  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.056  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.057  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:18:34.058  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:18:34.062  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:18:34.063  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:18:34.063  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:18:34.064  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.065  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.067  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.068  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.069  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.070  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.070  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.071  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.075  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:18:34.076  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:18:34.077  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.078  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.078  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.079  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.079  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.081  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:18:34.081  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:18:34.082  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.085  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.086  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.087  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:18:34.088  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.088  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.089  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.089  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.090  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.091  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.092  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.093  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.094  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:18:34.097  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.097  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.098  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.098  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:18:34.099  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.100  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.101  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.101  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.106  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.108  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.109  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.109  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.110  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.110  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:18:34.113  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.113  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.114  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.115  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.117  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.118  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:18:34.118  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:18:34.119  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.121  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.121  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.122  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.128  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.129  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:18:34.129  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.130  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.130  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.131  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.131  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.132  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.132  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.133  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.133  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:18:34.134  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:18:34.135  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.136  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.137  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.137  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.138  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:18:34.139  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.140  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:18:34.140  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.144  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:18:34.145  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:18:34.146  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.147  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:18:34.147  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:18:34.150  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:18:34.150  INFO 7492 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:18:34.267  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:34.267  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:34.383  INFO 7492 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:18:36.630  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:18:36.633  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:18:36.644  INFO 7492 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:18:36.786  INFO 7492 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:18:36.795  INFO 7492 --- [main] com.yanda.Application                    : Started Application in 19.3 seconds (JVM running for 19.767)
2018-07-08 12:18:42.773  INFO 7492 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:18:42.774  INFO 7492 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:18:42.836  INFO 7492 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2018-07-08 12:18:50.988  INFO 7492 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:18:51.725 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:18:51.779 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:18:51.826 DEBUG 7492 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:19:09.328  INFO 7492 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:19:09.338  INFO 7492 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,tR91c5UuUHLtn5ltoMqAffLj0e3YAHGa,1531023549,795,api.mch.weixin.qq.com,true,6000,8000,0,0,0,621F2F65241D3AF18709FAD736D088C2B3680B46571361FEAA2428646AB2FC3C
2018-07-08 12:19:09.338  INFO 7492 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,tR91c5UuUHLtn5ltoMqAffLj0e3YAHGa,1531023549,795,api.mch.weixin.qq.com,true,6000,8000,0,0,0,621F2F65241D3AF18709FAD736D088C2B3680B46571361FEAA2428646AB2FC3C
2018-07-08 12:19:09.338  INFO 7492 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:19:29.459 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:19:29.460 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:19:29.491 DEBUG 7492 --- [http-nio-8080-exec-1] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:22:54.587  INFO 7060 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 7060 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:22:54.595 DEBUG 7060 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:22:54.596  INFO 7060 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:22:55.049  INFO 7060 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:22:55 CST 2018]; root of context hierarchy
2018-07-08 12:22:57.189  INFO 7060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:22:57.825  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.826  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.827  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.828  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.829  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.830  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.830  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:22:57.831  WARN 7060 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:22:57.869  WARN 7060 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:22:58.915  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8eabe8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.330  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$e3ca56d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.367  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:22:59.371  INFO 7060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$11fcf4ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:23:05.121  INFO 7060 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:23:05.139  INFO 7060 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:23:05.140  INFO 7060 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:23:05.279  INFO 7060 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:23:05.279  INFO 7060 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 10238 ms
2018-07-08 12:23:05.589  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:23:05.590  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:23:05.590  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:23:05.591  INFO 7060 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:23:07.406  INFO 7060 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:23:11.117  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:22:55 CST 2018]; root of context hierarchy
2018-07-08 12:23:11.289  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.291  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:23:11.292  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.293  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.294  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:23:11.298  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:23:11.299  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:23:11.300  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:23:11.301  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.302  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.305  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.306  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.306  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.307  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.307  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.308  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.314  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:23:11.315  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:23:11.316  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.317  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.317  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.318  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.318  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.320  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:23:11.321  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:23:11.321  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.324  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.324  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.325  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:23:11.325  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.326  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.326  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.327  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.327  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.328  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.330  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:23:11.333  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.334  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.334  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.335  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.335  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.336  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.337  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.337  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.342  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.342  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.343  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.343  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.344  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.344  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:23:11.346  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.347  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.347  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.349  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.351  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.351  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:23:11.352  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:23:11.352  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.353  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.354  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.354  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:23:11.359  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.360  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.361  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.362  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:23:11.363  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.363  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:23:11.366  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.367  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.367  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.368  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.369  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:23:11.371  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.372  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.372  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:23:11.376  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:23:11.376  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.377  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:23:11.378  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.379  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.380  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:23:11.381  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:23:11.384  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:23:11.384  INFO 7060 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:23:11.552  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:11.553  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:11.666  INFO 7060 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:23:13.946  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:23:13.950  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:23:13.961  INFO 7060 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:23:14.119  INFO 7060 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:23:14.129  INFO 7060 --- [main] com.yanda.Application                    : Started Application in 20.162 seconds (JVM running for 20.632)
2018-07-08 12:23:50.675  INFO 7060 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:23:50.676  INFO 7060 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:23:50.745  INFO 7060 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2018-07-08 12:24:08.390  INFO 7060 --- [http-nio-8080-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:24:09.123 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:24:09.166 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:24:09.208 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:24:26.782 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==>  Preparing: SELECT id,name,time_unit,time_num,current_price,old_price,product,create_time,product_order FROM t_product_info WHERE id = ? 
2018-07-08 12:24:26.783 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : ==> Parameters: 5(Integer)
2018-07-08 12:24:26.807 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.P.selectByPrimaryKey             : <==      Total: 1
2018-07-08 12:24:27.649  INFO 7060 --- [http-nio-8080-exec-9] wxpay java sdk                           : report worker num: 6
2018-07-08 12:24:27.653  INFO 7060 --- [http-nio-8080-exec-9] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,oOxwKDmk2S9zuenfk7GJ3O2MJDnlkHm4,1531023867,758,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4C1C275FAEB2314DD4DAE5335F23DF5B864A2FE0E9A3E40188746E7862EC43CA
2018-07-08 12:24:27.653  INFO 7060 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,oOxwKDmk2S9zuenfk7GJ3O2MJDnlkHm4,1531023867,758,api.mch.weixin.qq.com,true,6000,8000,0,0,0,4C1C275FAEB2314DD4DAE5335F23DF5B864A2FE0E9A3E40188746E7862EC43CA
2018-07-08 12:24:27.653  INFO 7060 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:24:44.420 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:24:44.420 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:24:44.444 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:24:44.525 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:24:44.528 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==> Parameters: 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 182(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-08 12:24:44.444(Timestamp), 2022-04-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String), 1009(Integer), 20180706100715(String), 123456(String), 39(Integer), 182(Integer), 2018-07-06 12:51:57.0(Timestamp), 2018-07-08 12:24:44.444(Timestamp), 2022-04-06 12:51:57.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:24:44.552 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-08 12:24:44.565 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:24:44.565 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:24:44.591 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:24:44.592 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:24:44.615 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:24:44.637 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:24:44.637 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:24:49.351 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:24:49.351 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:24:49.374 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:24:49.378 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-08 12:24:49.379 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:24:49.224(Timestamp), 0(Integer), 497(Long)
2018-07-08 12:24:49.403 DEBUG 7060 --- [http-nio-8080-exec-1] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
2018-07-08 12:25:23.907  INFO 7060 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:25:23.970 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:25:23.971 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:25:23.993 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:25:23.997 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:25:23.998 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:25:24.026 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:30:10.057 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:30:10.058 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:30:10.092 DEBUG 7060 --- [http-nio-8080-exec-2] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:36:24.476 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==>  Preparing: DELETE FROM t_vip_card_info WHERE card_id = ? 
2018-07-08 12:36:24.478 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : ==> Parameters: 1009(Integer)
2018-07-08 12:36:24.504 DEBUG 7060 --- [http-nio-8080-exec-5] c.y.m.g.V.deleteByPrimaryKey             : <==    Updates: 1
2018-07-08 12:36:45.869  INFO 7060 --- [http-nio-8080-exec-7] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:36:45.873 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:36:45.874 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:36:45.897 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:36:45.899 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:36:45.900 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:36:45.926 DEBUG 7060 --- [http-nio-8080-exec-7] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:37:12.307 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==>  Preparing: select user_id, user_name, password, nick_name, mobile, sex, create_time, update_time, avatar, status, is_wechat, open_id from t_user_info WHERE ( open_id = ? ) 
2018-07-08 12:37:12.308 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : ==> Parameters: o6jni5AakD6baOatwdp02hB3iPEs(String)
2018-07-08 12:37:12.344 DEBUG 7060 --- [http-nio-8080-exec-4] c.y.m.g.UserInfoMapper.selectByExample   : <==      Total: 1
2018-07-08 12:37:12.385 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT user_id,user_name,password,nick_name,mobile,sex,create_time,update_time,avatar,status,is_wechat,open_id FROM t_user_info WHERE ( user_name = ? and password = ? ) or ( mobile = ? and password = ? ) 
2018-07-08 12:37:12.386 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : ==> Parameters: wxukqSkQGUmFPh(String), UAlM\EGa(String), wxukqSkQGUmFPh(String), UAlM\EGa(String)
2018-07-08 12:37:12.411 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:37:12.413 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:37:12.413 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:37:12.440 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:37:12.440 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:37:12.469 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findVipCardByUserId              : <====      Total: 0
2018-07-08 12:37:12.470 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:37:12.471 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:37:12.496 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:37:12.497 DEBUG 7060 --- [http-nio-8080-exec-3] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:37:20.652  INFO 7060 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,L7RRd9wWFxkxjyjVovo3cYJEsKUVSsNT,1531024640,392,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D02919C7488A645E2F38E0C4287B079B1276413C2E87E85A4E43520128B5639
2018-07-08 12:37:20.653  INFO 7060 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,L7RRd9wWFxkxjyjVovo3cYJEsKUVSsNT,1531024640,392,api.mch.weixin.qq.com,true,6000,8000,0,0,0,0D02919C7488A645E2F38E0C4287B079B1276413C2E87E85A4E43520128B5639
2018-07-08 12:37:20.653  INFO 7060 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:37:34.303 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:37:34.305 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:37:34.329 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectOneByExample             : <==      Total: 0
2018-07-08 12:37:34.417 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info 
2018-07-08 12:37:34.418 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: 
2018-07-08 12:37:34.442 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:37:34.444 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info order by create_time desc LIMIT ? 
2018-07-08 12:37:34.446 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : ==> Parameters: 1(Integer)
2018-07-08 12:37:34.471 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.selectByExample                : <==      Total: 1
2018-07-08 12:37:34.479 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_num, card_password, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_num = ?, card_password = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:37:34.481 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : ==> Parameters: 20180708101915(String), 123456(String), 184(Integer), 2018-07-08 12:37:34.33(Timestamp), 2018-07-08 12:37:34.33(Timestamp), 2019-01-08 12:37:34.33(Timestamp), 38(Integer), 克劳德(String), 20180708101915(String), 123456(String), 184(Integer), 2018-07-08 12:37:34.33(Timestamp), 2018-07-08 12:37:34.33(Timestamp), 2019-01-08 12:37:34.33(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.g.V.upsertSelective                : <==    Updates: 1
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:37:34.506 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:37:34.532 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:37:34.533 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:37:34.558 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:37:34.560 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:37:34.560 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:37:34.584 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:37:34.584 DEBUG 7060 --- [http-nio-8080-exec-9] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:40:32.353  INFO 7060 --- [http-nio-8080-exec-8] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:40:32.382 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:40:32.383 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:40:32.407 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:40:32.408 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:40:32.409 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:40:32.437 DEBUG 7060 --- [http-nio-8080-exec-8] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:46:05.029  INFO 16808 --- [main] com.yanda.Application                    : Starting Application on LAPTOP-1466HACD with PID 16808 (E:\StudyDemo\yanda\target\classes started by chenli in E:\StudyDemo\yanda)
2018-07-08 12:46:05.034 DEBUG 16808 --- [main] com.yanda.Application                    : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2018-07-08 12:46:05.034  INFO 16808 --- [main] com.yanda.Application                    : No active profile set, falling back to default profiles: default
2018-07-08 12:46:05.280  INFO 16808 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:46:05 CST 2018]; root of context hierarchy
2018-07-08 12:46:06.945  INFO 16808 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'attachmentInfoMapper' and 'com.yanda.mapper.generated.AttachmentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'bannerInfoMapper' and 'com.yanda.mapper.generated.BannerInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.563  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'classifyInfoMapper' and 'com.yanda.mapper.generated.ClassifyInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'commentInfoMapper' and 'com.yanda.mapper.generated.CommentInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'episodeInfoMapper' and 'com.yanda.mapper.generated.EpisodeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'keywordInfoMapper' and 'com.yanda.mapper.generated.KeywordInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'logInfoMapper' and 'com.yanda.mapper.generated.LogInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.564  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieInfoMapper' and 'com.yanda.mapper.generated.MovieInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'payInfoMapper' and 'com.yanda.mapper.generated.PayInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'productInfoMapper' and 'com.yanda.mapper.generated.ProductInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'roleInfoMapper' and 'com.yanda.mapper.generated.RoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userAgreeInfoMapper' and 'com.yanda.mapper.generated.UserAgreeInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCollectInfoMapper' and 'com.yanda.mapper.generated.UserCollectInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.565  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userHistoryInfoMapper' and 'com.yanda.mapper.generated.UserHistoryInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.yanda.mapper.generated.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userRoleInfoMapper' and 'com.yanda.mapper.generated.UserRoleInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userSearchInfoMapper' and 'com.yanda.mapper.generated.UserSearchInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.566  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'vipCardInfoMapper' and 'com.yanda.mapper.generated.VipCardInfoMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieAttachmentMapper' and 'com.yanda.mapper.MovieAttachmentMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieClassifyMapper' and 'com.yanda.mapper.MovieClassifyMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'movieEpisodeMapper' and 'com.yanda.mapper.MovieEpisodeMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.567  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'reportMapper' and 'com.yanda.mapper.ReportMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.568  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : Skipping MapperFactoryBean with name 'userCustomMapper' and 'com.yanda.mapper.UserCustomMapper' mapperInterface. Bean already defined with the same name!
2018-07-08 12:46:07.568  WARN 16808 --- [main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.yanda.mapper]' package. Please check your configuration.
2018-07-08 12:46:07.609  WARN 16808 --- [main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'mapperScannerConfigurerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-08 12:46:08.598  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69b8ec8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.951  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.yanda.RedisConfig$$EnhancerBySpringCGLIB$$849884d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.984  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.yanda.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:08.988  INFO 16808 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b2cb22ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-08 12:46:14.603  INFO 16808 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-07-08 12:46:14.618  INFO 16808 --- [main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2018-07-08 12:46:14.620  INFO 16808 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2018-07-08 12:46:14.745  INFO 16808 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring embedded WebApplicationContext
2018-07-08 12:46:14.745  INFO 16808 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9469 ms
2018-07-08 12:46:15.001  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-08 12:46:15.001  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-07-08 12:46:15.002  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'XssFilter' to urls: [/*]
2018-07-08 12:46:15.003  INFO 16808 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2018-07-08 12:46:17.454  INFO 16808 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'threadPoolTaskScheduler'
2018-07-08 12:46:20.954  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36916eb0: startup date [Sun Jul 08 12:46:05 CST 2018]; root of context hierarchy
2018-07-08 12:46:21.106  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateAttachDurantion],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateAttachDurantion(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.109  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/readFile],methods=[GET]}" onto public void com.yanda.controller.AttachmentController.readFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.110  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doVideoUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doVideoUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:46:21.111  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/updateFile],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.updateFile(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.112  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/attach/doImgUpload],methods=[POST],consumes=[multipart/form-data],produces=[application/json]}" onto public com.yanda.entity.JsonResult com.yanda.controller.AttachmentController.doImgUpload(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile) throws java.lang.IllegalStateException,java.io.IOException
2018-07-08 12:46:21.114  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:46:21.115  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.BannerInfo)
2018-07-08 12:46:21.115  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long)
2018-07-08 12:46:21.116  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.116  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/banner/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.BannerController.listBanners(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.118  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearEpisode]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearEpisode(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.119  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearUser]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearUser(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.119  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearAttach]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearAttach(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearMovie]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearMovie(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearClassify]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.120  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cache/clearBanner]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CacheManageController.clearBanner(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.125  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:46:21.126  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ClassifyInfo)
2018-07-08 12:46:21.126  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.127  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.list(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.127  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getClassifyById]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.128  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/getPinyin],methods=[GET]}" onto public java.lang.String com.yanda.controller.ClassifyController.getPinyin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.128  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/classify/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.ClassifyController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.129  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/toggleAgreeCount],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.toggleAgreeCount(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-07-08 12:46:21.130  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/saveComment],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.saveComment(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.CommentInfo)
2018-07-08 12:46:21.130  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.CommentController.listComments(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.133  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.133  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.EpisodeInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.134  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:46:21.134  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/episodes/{mvId}],methods=[GET]}" onto public java.util.List<com.yanda.entity.generated.EpisodeInfo> com.yanda.controller.EpisodeController.getEpisodesByMvId(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/getDetailEpisode/{id}],methods=[GET]}" onto public com.yanda.entity.EpisodeDetailInfo com.yanda.controller.EpisodeController.getEpisode(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/{id}],methods=[GET]}" onto public com.yanda.entity.generated.EpisodeInfo com.yanda.controller.EpisodeController.getEpisodeById(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.135  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.136  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/episode/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.EpisodeController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.136  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.yanda.controller.IndexController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.137  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete]}" onto public java.lang.String com.yanda.controller.IndexController.delete(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.138  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/403]}" onto public java.lang.String com.yanda.controller.IndexController.error403(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.139  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.LoginController.login(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.MovieInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.143  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.delete(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.144  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify/{id}]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassifyById(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.144  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.listMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/{id}],methods=[GET]}" onto public com.yanda.entity.generated.MovieInfo com.yanda.controller.MovieController.getMovie(javax.servlet.http.HttpServletRequest,java.lang.Long) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/search],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.searchMovie(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.145  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/pub],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.pubMovie(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException,com.yanda.exception.NullParamException
2018-07-08 12:46:21.146  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getPubMovies],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.MovieController.getMovies(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.146  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/movie/getClassify]}" onto public java.util.List<com.yanda.entity.WebClassifyInfo> com.yanda.controller.MovieController.getClassify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.151  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getOrder],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getOrder(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.151  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/getPaySign],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.getPaySign(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.152  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/recordList],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.getPayRecordsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.152  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/addRecord],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.PayController.addRecordByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.153  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/notifyUrl],methods=[GET]}" onto public void com.yanda.controller.PayController.getNotify(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.153  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pay/refund],methods=[POST]}" onto public java.lang.Object com.yanda.controller.PayController.refund(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-07-08 12:46:21.155  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/delete/{id}],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.155  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/list],methods=[GET]}" onto public java.lang.Object com.yanda.controller.ProductController.getList(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.156  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/product/upsert],methods=[POST]}" onto public java.lang.Object com.yanda.controller.ProductController.upsert(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.ProductInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.156  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/report/classifyMvCount],methods=[GET]}" onto public com.yanda.entity.ReportInfo com.yanda.controller.ReportController.classifyMvCount(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.159  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/index],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.index(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.160  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/helper],methods=[GET]}" onto public java.lang.Object com.yanda.controller.SearchController.helper(java.lang.String)
2018-07-08 12:46:21.161  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search/clearhistory],methods=[POST]}" onto public java.lang.Object com.yanda.controller.SearchController.clearhistory(java.lang.Integer)
2018-07-08 12:46:21.162  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userAgree/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserAgreeController.listUserAgree(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.163  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.findCollectsByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.164  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.addByUIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.165  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/collect/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserCollectController.deleteByCollectId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.170  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.register(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.171  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.UserInfo)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/checkToken],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.checkToken(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/login],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.172  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findWechatIsExist],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findWechatIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.173  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/findUserNameIsExist],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.findUserNameIsExist(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.174  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.175  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/getOpenIdFromWeiXin],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getOpenIdFromWeiXin(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.175  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/sendCode],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.sendCode(java.lang.String,java.lang.String)
2018-07-08 12:46:21.176  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/bindMobile],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.bindMobile(java.lang.String,java.lang.String,java.lang.String)
2018-07-08 12:46:21.177  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.getUser(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.177  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/registerByWechat],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserController.registerByWechat(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.179  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/deleteByIds],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByIdList(javax.servlet.http.HttpServletRequest,java.util.List<java.lang.Long>)
2018-07-08 12:46:21.180  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/upsert],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.upsertByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.180  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/index],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findHistoriesByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.181  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/delete],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.deleteByHistoryId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.181  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/history/record],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserHistoryController.findByUserIdAndEpisodeId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.182  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.183  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/{id}],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.getRoleByUserId(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.183  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/user/update/{userId}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.UserRoleController.updateUserRole(javax.servlet.http.HttpServletRequest,int)
2018-07-08 12:46:21.187  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/add],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.add(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo)
2018-07-08 12:46:21.188  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/update],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.update(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.188  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/delete/{id}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.delete(javax.servlet.http.HttpServletRequest,java.lang.Integer)
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bind],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bind(javax.servlet.http.HttpServletRequest,com.yanda.entity.generated.VipCardInfo) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/batchDelete/{ids}],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.batchDelete(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-08 12:46:21.189  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/list],methods=[GET]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.listBanners(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.190  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/bindByCardNum],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.bindByCardNum(javax.servlet.http.HttpServletRequest) throws com.yanda.exception.DOPException
2018-07-08 12:46:21.190  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/buy],methods=[POST]}" onto public com.yanda.entity.JsonResult com.yanda.controller.VipCardController.buyByClient(javax.servlet.http.HttpServletRequest) throws java.lang.NumberFormatException,com.yanda.exception.DOPException
2018-07-08 12:46:21.191  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/vip/getVipCardNum],methods=[GET]}" onto public java.lang.String com.yanda.controller.VipCardController.geVipCardNum(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.195  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-08 12:46:21.195  INFO 16808 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-08 12:46:21.318  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:21.318  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:21.431  INFO 16808 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-08 12:46:23.799  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-07-08 12:46:23.803  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2018-07-08 12:46:23.814  INFO 16808 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-07-08 12:46:23.957  INFO 16808 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-07-08 12:46:23.966  INFO 16808 --- [main] com.yanda.Application                    : Started Application in 19.239 seconds (JVM running for 19.747)
2018-07-08 12:46:41.412  INFO 16808 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/yanda]  : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-08 12:46:41.412  INFO 16808 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-07-08 12:46:41.457  INFO 16808 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-08 12:46:43.427  INFO 16808 --- [http-nio-8080-exec-3] c.yanda.service.impl.VipCardServiceImpl  : 会员卡数据列表将从数据库中获取...
2018-07-08 12:46:43.764  INFO 16808 --- [http-nio-8080-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2018-07-08 12:46:44.693 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==>  Preparing: SELECT count(0) FROM t_vip_card_info WHERE (card_num LIKE ?) 
2018-07-08 12:46:44.741 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : ==> Parameters: %%(String)
2018-07-08 12:46:44.790 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample_COUNT          : <==      Total: 1
2018-07-08 12:46:44.794 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==>  Preparing: select card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name from t_vip_card_info WHERE ( card_num like ? ) order by update_time desc LIMIT ? 
2018-07-08 12:46:44.795 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : ==> Parameters: %%(String), 10(Integer)
2018-07-08 12:46:44.834 DEBUG 16808 --- [http-nio-8080-exec-3] c.y.m.g.V.selectByExample                : <==      Total: 10
2018-07-08 12:47:10.899 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==>  Preparing: select episode_id , episode_id , episode_name , episode_num , vip_type from t_mv_episode WHERE ( mv_id = ? ) 
2018-07-08 12:47:10.899 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : ==> Parameters: 996(Long)
2018-07-08 12:47:10.927 DEBUG 16808 --- [http-nio-8080-exec-7] c.y.m.g.E.selectByExampleSelective       : <==      Total: 1
2018-07-08 12:47:27.135  INFO 16808 --- [http-nio-8080-exec-1] wxpay java sdk                           : report worker num: 6
2018-07-08 12:47:27.139  INFO 16808 --- [http-nio-8080-exec-1] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,6SkJbdG6kuCxGSKeQqz3IfvaNQaO88nz,1531025247,570,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E780D22F177D4BB4BC8FBF852CE96279B73980AB1DF690A2298D721EDDBCC286
2018-07-08 12:47:27.140  INFO 16808 --- [pool-1-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,6SkJbdG6kuCxGSKeQqz3IfvaNQaO88nz,1531025247,570,api.mch.weixin.qq.com,true,6000,8000,0,0,0,E780D22F177D4BB4BC8FBF852CE96279B73980AB1DF690A2298D721EDDBCC286
2018-07-08 12:47:27.140  INFO 16808 --- [pool-1-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:47:43.950 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==>  Preparing: SELECT card_id,card_num,card_password,purchase_months,purchase_days,create_time,update_time,exp_time,user_id,nick_name FROM t_vip_card_info WHERE ( user_id = ? ) 
2018-07-08 12:47:43.951 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : ==> Parameters: 38(Integer)
2018-07-08 12:47:43.981 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.selectOneByExample             : <==      Total: 1
2018-07-08 12:47:44.070 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==>  Preparing: insert into t_vip_card_info ( card_id, card_num, card_password, purchase_months, purchase_days, create_time, update_time, exp_time, user_id, nick_name ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) on duplicate key update card_id = ?, card_num = ?, card_password = ?, purchase_months = ?, purchase_days = ?, create_time = ?, update_time = ?, exp_time = ?, user_id = ?, nick_name = ? 
2018-07-08 12:47:44.072 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : ==> Parameters: 1019(Integer), 20180708101915(String), 123456(String), 1(Integer), 365(Integer), 2018-07-08 12:37:34.0(Timestamp), 2018-07-08 12:47:43.981(Timestamp), 2019-07-08 12:37:34.0(Timestamp), 38(Integer), 克劳德(String), 1019(Integer), 20180708101915(String), 123456(String), 1(Integer), 365(Integer), 2018-07-08 12:37:34.0(Timestamp), 2018-07-08 12:47:43.981(Timestamp), 2019-07-08 12:37:34.0(Timestamp), 38(Integer), 克劳德(String)
2018-07-08 12:47:44.100 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.g.V.upsertSelective                : <==    Updates: 2
2018-07-08 12:47:44.108 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==>  Preparing: select * from t_user_info where user_id = ? 
2018-07-08 12:47:44.108 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : ==> Parameters: 38(Integer)
2018-07-08 12:47:44.137 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====>  Preparing: select * from t_vip_card_info where user_id = ? 
2018-07-08 12:47:44.137 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : ====> Parameters: 38(Integer)
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findVipCardByUserId              : <====      Total: 1
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====>  Preparing: select t2.* from t_user_role t1 left join t_role_info t2 on t1.role_id = t2.role_id where t1.user_id = ? 
2018-07-08 12:47:44.164 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : ====> Parameters: 38(Integer)
2018-07-08 12:47:44.190 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserRoleByUserId             : <====      Total: 0
2018-07-08 12:47:44.191 DEBUG 16808 --- [http-nio-8080-exec-2] c.y.m.U.findUserDetailByUserId           : <==      Total: 1
2018-07-08 12:47:45.356  INFO 16808 --- [http-nio-8080-exec-5] wxpay java sdk                           : report v1,WXPaySDK/3.0.9,gfsBKm5xFTNkFpkQ68uYfNtFJNJ1X6V7,1531025265,1057,api.mch.weixin.qq.com,true,6000,8000,0,0,0,FC24D26053822EE88B18E011E6AAEA216ACC81245D04A55E2CCB89D84C843FD6
2018-07-08 12:47:45.357  INFO 16808 --- [pool-2-thread-1] wxpay java sdk                           : get first report msg: v1,WXPaySDK/3.0.9,gfsBKm5xFTNkFpkQ68uYfNtFJNJ1X6V7,1531025265,1057,api.mch.weixin.qq.com,true,6000,8000,0,0,0,FC24D26053822EE88B18E011E6AAEA216ACC81245D04A55E2CCB89D84C843FD6
2018-07-08 12:47:45.357  INFO 16808 --- [pool-2-thread-1] wxpay java sdk                           : try get remain report msg
2018-07-08 12:47:49.431 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==>  Preparing: SELECT history_id,user_id,episode_id,watch_time,progress FROM t_user_history WHERE ( episode_id = ? and user_id = ? ) 
2018-07-08 12:47:49.432 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : ==> Parameters: 1439(Long), 38(Long)
2018-07-08 12:47:49.458 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.selectOneByExample             : <==      Total: 1
2018-07-08 12:47:49.461 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : ==>  Preparing: UPDATE t_user_history SET user_id = ?,episode_id = ?,watch_time = ?,progress = ? WHERE history_id = ? 
2018-07-08 12:47:49.462 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : ==> Parameters: 38(Long), 1439(Long), 2018-07-08 12:47:49.297(Timestamp), 2000(Integer), 497(Long)
2018-07-08 12:47:49.489 DEBUG 16808 --- [http-nio-8080-exec-6] c.y.m.g.U.updateByPrimaryKeySelective    : <==    Updates: 1
